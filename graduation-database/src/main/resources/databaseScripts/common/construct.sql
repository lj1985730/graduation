
SET FOREIGN_KEY_CHECKS=0;

-- system tables ---------------------------------------------------------------------------------------------------------

-- ----------------------------
-- Table structure for T_SYS_CONFIG
-- ----------------------------
DROP TABLE IF EXISTS T_SYS_CONFIG;
CREATE TABLE T_SYS_CONFIG (
  ID                      CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  KEY                     VARCHAR(500) NOT NULL COMMENT '配置KEY',
  VALUE                   VARCHAR(500) COMMENT '配置VALUE',
  ENABLE                  CHAR(1) COMMENT '是否生效',
  EDITABLE                CHAR(1) COMMENT '是否可在系统界面修改',
  REMARK                  VARCHAR(1000) COMMENT '说明',
  DELETED                 CHAR(1) NOT NULL COMMENT '是否删除',
  LAST_MODIFY_ACCOUNT_ID  VARCHAR(500) NOT NULL COMMENT '操作人',
  LAST_MODIFY_TIME        TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='系统配置表';

-- ----------------------------
-- Table structure for T_SYS_COMBO_DATA
-- ----------------------------
DROP TABLE IF EXISTS T_SYS_COMBO_DATA;
CREATE TABLE T_SYS_COMBO_DATA (
  ID                      CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  BUSINESS_ID             VARCHAR(500) NOT NULL COMMENT '业务主键',
  CONTENT                 TEXT NOT NULL COMMENT '内容',
  CONDITION               TEXT COMMENT '过滤条件',
  ORDERBY                 TEXT COMMENT '排序',
  DELETED                 CHAR(1) NOT NULL COMMENT '是否删除',
  LAST_MODIFY_ACCOUNT_ID  VARCHAR(500) NOT NULL COMMENT '操作人',
  LAST_MODIFY_TIME        TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='下拉菜单字典表';

-- ----------------------------
-- Table structure for T_SYS_DICT
-- ----------------------------
DROP TABLE IF EXISTS T_SYS_DICT;
CREATE TABLE T_SYS_DICT (
  ID                      CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  NAME                    VARCHAR(200) NOT NULL COMMENT '名称',
  CODE                    VARCHAR(200) NOT NULL COMMENT '编号',
  CATEGORY                VARCHAR(200) COMMENT '字典分类',
  SORT_NUM                INTEGER(9) COMMENT '排序',
  REMARK                  VARCHAR(1000) COMMENT '备注',
  DELETED                 CHAR(1) NOT NULL COMMENT '是否删除',
  LAST_MODIFY_ACCOUNT_ID  VARCHAR(500) NOT NULL COMMENT '操作人',
  LAST_MODIFY_TIME        TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='系统字典表';

-- authentication tables -----------------------------------------------------------------------------------------------

-- ----------------------------
-- Table structure for T_AUTH_DEPARTMENT
-- ----------------------------
DROP TABLE IF EXISTS T_AUTH_DEPARTMENT;
CREATE TABLE T_AUTH_DEPARTMENT (
  ID                      CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  NAME                    VARCHAR(500) NOT NULL COMMENT '部门名称',
  PARENT_ID               CHAR(36) COMMENT '父节点',
  SORT_NUM                INTEGER(9) COMMENT '排序号',
  ENABLE                  CHAR(1) COMMENT '是否使用，0 否；1 是',
  EN_NAME                 VARCHAR(500) COMMENT '英文名称',
  CODE                    VARCHAR(100) COMMENT '部门编码',
  SHORT_NAME              VARCHAR(100) COMMENT '部门简称',
  CATEGORY                VARCHAR(200) COMMENT '部门类型，关联字典表',
  LINKMAN                 VARCHAR(500) COMMENT '联系人',
  FAX                     VARCHAR(500) COMMENT '传真',
  TELEPHONE               VARCHAR(500) COMMENT '电话',
  EMAIL                   VARCHAR(500) COMMENT '电子邮件',
  LEVEL                   INTEGER(2) COMMENT '部门级别',
  REMARK                  VARCHAR(1000) COMMENT '备注',
  DELETED                 CHAR(1) NOT NULL COMMENT '是否删除',
  LAST_MODIFY_ACCOUNT_ID  VARCHAR(500) NOT NULL COMMENT '操作人',
  LAST_MODIFY_TIME        TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='部门信息表';

-- ----------------------------
-- Table structure for SYS_PERSON
-- ----------------------------
DROP TABLE IF EXISTS SYS_PERSON;
CREATE TABLE SYS_PERSON (
  PERSON_ID       CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  COMPANY_ID      CHAR(36) COMMENT '企业ID',
  USER_CNAME      VARCHAR(500) NOT NULL COMMENT '姓名',
  USER_ENAME      VARCHAR(500) COMMENT '英文名',
  GENDER          CHAR(1) COMMENT '性别，1 男；2 女；3 保密',
  IDENTITYTYPE    CHAR(1) COMMENT '证件类型，1 身份证；2 驾照；3 护照',
  IDENTITYCARD    VARCHAR(2000) COMMENT '身份证号',
  COUNTRY         VARCHAR(500) COMMENT '国籍',
  NATIONALITY     VARCHAR(500) COMMENT '民族',
  NATIVEPLACE     VARCHAR(200) COMMENT '出生地',
  BIRTHDAY        DATE COMMENT '生日',
  TELPHONE        VARCHAR(500) COMMENT '手机号码',
  OFFICE_TEL      VARCHAR(500) COMMENT '办公号码',
  EMAIL           VARCHAR(500) COMMENT '邮箱',
  ADDRESS         VARCHAR(1000) COMMENT '家庭住址',
  MEMO            VARCHAR(2000) COMMENT '备注',
  PERSON_CATEGROY CHAR(2) COMMENT '人员分类，10 机关；11 船队；12 二级单位；13 分公司；14 办事处；20 船员',
  STATUS          CHAR(1) COMMENT '人员状态，1 在职；2 离职；3 公休；4 调配中，适用岸基和船端',
  NATURE          CHAR(1) COMMENT '人员性质，1 自由；2 借调；3 临时；4 外派，适用岸基和船端',
  ORIGIN          CHAR(1) COMMENT '数据来源，1 程序；2 导入',
  IS_DEL          CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME          TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='人员信息表';

-- ----------------------------
-- Table structure for SYS_POST
-- ----------------------------
DROP TABLE IF EXISTS SYS_POST;
CREATE TABLE SYS_POST (
  POST_ID     CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  COMPANY_ID  CHAR(36) COMMENT '企业ID',
  POST_CODE   VARCHAR(500) COMMENT '岗位编码',
  POST_NAME   VARCHAR(500) NOT NULL COMMENT '岗位名称',
  POST_TYPE   CHAR(1) COMMENT '岗位类型，1 岸基；2 船',
  SORT_NO     INTEGER(9) COMMENT '排序号',
  IS_LEADER   CHAR(1) COMMENT '是否部门长，0 否；1 是',
  SUPERVISOR  CHAR(36) COMMENT '上级岗位',
  POST_LEVEL  VARCHAR(50) COMMENT '岗位级别',
  IS_DEL      CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME      TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='岗位信息';

-- ----------------------------
-- Table structure for SYS_DEPARTMENT_POST
-- ----------------------------
DROP TABLE IF EXISTS SYS_DEPARTMENT_POST;
CREATE TABLE SYS_DEPARTMENT_POST (
  DEPARTMENT_POST_ID  CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  POST_ID             CHAR(36) NOT NULL COMMENT '岗位ID',
  COMPANY_ID          CHAR(36) COMMENT '企业ID',
  DEPARTMENT_ID       CHAR(36) NOT NULL COMMENT '部门ID',
  IS_DEL              CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME              TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间',
  KEY FK_SYS_DEPARTMENT_POST_DEPARTMENT (DEPARTMENT_ID) USING BTREE,
  KEY FK_SYS_DEPARTMENT_POST_POST (POST_ID) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='部门岗位关系表';
ALTER TABLE SYS_DEPARTMENT_POST ADD CONSTRAINT FK_SYS_DEPARTMENT_POST_DEPARTMENT FOREIGN KEY (DEPARTMENT_ID) REFERENCES SYS_DEPARTMENT (DEPARTMENT_ID);
ALTER TABLE SYS_DEPARTMENT_POST ADD CONSTRAINT FK_SYS_DEPARTMENT_POST_POST FOREIGN KEY (POST_ID) REFERENCES SYS_POST (POST_ID);

-- ----------------------------
-- Table structure for SYS_POST_DUTY
-- ----------------------------
DROP TABLE IF EXISTS SYS_POST_DUTY;
CREATE TABLE SYS_POST_DUTY (
  POST_DUTY_ID      CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  POST_ID           CHAR(36) NOT NULL COMMENT '岗位ID',
  POST_DUTY_CONTENT VARCHAR(2000) COMMENT '岗位职责内容',
  POST_DUTY_NOTES   VARCHAR(2000) COMMENT '注意事项',
  REMARK            VARCHAR(2000) COMMENT '备注',
  COMPANY_ID        CHAR(36) COMMENT '企业ID',
  IS_DEL            CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME            TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间',
  KEY FK_SYS_POST_DUTY_POST (POST_ID) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='岗位职能表';
ALTER TABLE SYS_POST_DUTY ADD CONSTRAINT FK_SYS_POST_DUTY_POST FOREIGN KEY (POST_ID) REFERENCES SYS_POST (POST_ID);

-- ----------------------------
-- Table structure for SYS_PERSON_DEPARTMENT
-- ----------------------------
DROP TABLE IF EXISTS SYS_PERSON_DEPARTMENT;
CREATE TABLE SYS_PERSON_DEPARTMENT (
  DEPARTMENT_USER_ID  CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  DEPARTMENT_ID       CHAR(36) NOT NULL COMMENT '组织机构ID',
  PERSON_ID           CHAR(36) NOT NULL COMMENT '人员ID',
  COMPANY_ID          CHAR(36) COMMENT '企业ID',
  IS_DEL              CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME              TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间',
  KEY FK_SYS_PERSON_DEPARTMENT_PERSON (PERSON_ID) USING BTREE,
  KEY FK_SYS_PERSON_DEPARTMENT_DEPARTMENT (DEPARTMENT_ID) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='人员部门关系表';
ALTER TABLE SYS_PERSON_DEPARTMENT ADD CONSTRAINT FK_SYS_PERSON_DEPARTMENT_PERSON FOREIGN KEY (PERSON_ID) REFERENCES SYS_PERSON (PERSON_ID);
ALTER TABLE SYS_PERSON_DEPARTMENT ADD CONSTRAINT FK_SYS_PERSON_DEPARTMENT_DEPARTMENT FOREIGN KEY (DEPARTMENT_ID) REFERENCES SYS_DEPARTMENT (DEPARTMENT_ID);

-- ----------------------------
-- Table structure for SYS_PERSON_POST
-- ----------------------------
DROP TABLE IF EXISTS SYS_PERSON_POST;
CREATE TABLE SYS_PERSON_POST (
  USER_POST_ID  CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  PERSON_ID     CHAR(36) NOT NULL COMMENT '人员ID',
  POST_ID       CHAR(36) NOT NULL COMMENT '岗位ID',
  COMPANY_ID    CHAR(36) COMMENT '企业ID',
  IS_DEL        CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME        TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间',
  KEY FK_SYS_PERSON_POST_PERSON (PERSON_ID) USING BTREE,
  KEY FK_SYS_PERSON_POST_POST (POST_ID) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='人员岗位关系表';
ALTER TABLE SYS_PERSON_POST ADD CONSTRAINT FK_SYS_PERSON_POST_PERSON FOREIGN KEY (PERSON_ID) REFERENCES SYS_PERSON (PERSON_ID);
ALTER TABLE SYS_PERSON_POST ADD CONSTRAINT FK_SYS_PERSON_POST_POST FOREIGN KEY (POST_ID) REFERENCES SYS_POST (POST_ID);

-- ----------------------------
-- Table structure for SYS_PERSON_SHIP
-- ----------------------------
DROP TABLE IF EXISTS SYS_PERSON_SHIP;
CREATE TABLE SYS_PERSON_SHIP (
  PERSON_SHIP_ID  CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  SHIP_ID         CHAR(36) NOT NULL COMMENT '船舶ID',
  PERSON_ID       CHAR(36) NOT NULL COMMENT '人员ID',
  COMPANY_ID      CHAR(36) COMMENT '企业ID',
  IS_DEL          CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME          TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间',
  KEY FK_SYS_PERSON_SHIP_PERSON (PERSON_ID) USING BTREE,
  KEY FK_SYS_PERSON_SHIP_SHIP (SHIP_ID) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='人员船舶关系表';
ALTER TABLE SYS_PERSON_SHIP ADD CONSTRAINT FK_SYS_PERSON_SHIP_PERSON FOREIGN KEY (PERSON_ID) REFERENCES SYS_PERSON (PERSON_ID);
ALTER TABLE SYS_PERSON_SHIP ADD CONSTRAINT FK_SYS_PERSON_SHIP_SHIP FOREIGN KEY (SHIP_ID) REFERENCES SYS_SHIPINFO (SHIP_ID);

-- ----------------------------
-- Table structure for SYS_MENUINFO
-- ----------------------------
DROP TABLE IF EXISTS SYS_MENU;
CREATE TABLE SYS_MENUINFO (
  MENU_ID       CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  MENU_NAME     VARCHAR(50) NOT NULL COMMENT '菜单名称',
  MENU_URL      VARCHAR(200) COMMENT '菜单地址',
  SORTID        INTEGER(9) COMMENT '排序号',
  PARENT_ID     CHAR(36) COMMENT '父节点',
  IS_USED       CHAR(1) COMMENT '是否使用，0 停用；1 使用',
  MENU_ICON     VARCHAR(50) COMMENT '图标',
  MENU_BIG_ICON VARCHAR(50) COMMENT '大图标',
  MENU_HELP     VARCHAR(1000) COMMENT '帮助',
  BUSINESS      VARCHAR(200) COMMENT '业务树',
  MENU_LEVEL    VARCHAR(50) COMMENT '菜单级别',
  MEMO          VARCHAR(2000) COMMENT '备注',
  KEYBOARD      VARCHAR(100) COMMENT '快捷键',
  MENU_TYPE     CHAR(1) COMMENT '菜单类型，0 全部；1 岸基；2 船端',
  IS_PUBLIC     INTEGER(1) COMMENT '是否前台，0 全部；1 前台；2 后台',
  IS_ASSIGNABLE INTEGER(1) COMMENT '是否可分配，0 否；1 是',
  IS_APP_SHOW   CHAR(1) COMMENT '菜单是否移动端显示：1是；0否',
  COMPANY_ID    CHAR(36) COMMENT '企业ID',
  IS_DEL        CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME        TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='系统菜单表';

-- ----------------------------
-- Table structure for SYS_SYSTEM_MENU
-- ----------------------------
DROP TABLE IF EXISTS SYS_SYSTEM_MENU;
CREATE TABLE SYS_SYSTEM_MENU (
  SYS_MENU_ID CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  SYSTEM_ID   CHAR(36) NOT NULL COMMENT '系统ID',
  MENU_ID     CHAR(36) NOT NULL COMMENT '菜单ID',
  REMARK      VARCHAR(2000) COMMENT '备注',
  COMPANY_ID  CHAR(36) COMMENT '企业ID',
  IS_DEL      CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME      TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间',
  KEY FK_SYS_SYSTEM_MENU_SYSTEM (SYSTEM_ID) USING BTREE,
  KEY FK_SYS_SYSTEM_MENU_MENU (MENU_ID) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='系统菜单关系表';
ALTER TABLE SYS_SYSTEM_MENU ADD CONSTRAINT FK_SYS_SYSTEM_MENU_SYSTEM FOREIGN KEY (SYSTEM_ID) REFERENCES SYS_SYSTEM (SYSTEM_ID);
ALTER TABLE SYS_SYSTEM_MENU ADD CONSTRAINT FK_SYS_SYSTEM_MENU_MENU FOREIGN KEY (MENU_ID) REFERENCES SYS_MENUINFO (MENU_ID);

-- ----------------------------
-- Table structure for SYS_MENUBTN
-- ----------------------------
DROP TABLE IF EXISTS SYS_MENUBTN;
CREATE TABLE SYS_MENUBTN (
  BTN_ID        CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  MENU_ID       CHAR(36) NOT NULL COMMENT '菜单ID',
  BTN_NAME      VARCHAR(50) NOT NULL COMMENT '按钮名称',
  BTN_UNION_ID  VARCHAR(50) COMMENT '按钮属性ID值',
  BTN_TYPE      CHAR(1) COMMENT '按钮类型，0 全部；1 岸基；2 船端',
  BTN_ICON      VARCHAR(50) COMMENT '按钮样式',
  IS_USED       CHAR(1) COMMENT '是否使用，0 否；1 是',
  MEMO          VARCHAR(2000) COMMENT '备注',
  COMPANY_ID    CHAR(36) COMMENT '企业ID',
  IS_DEL        CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME        TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间',
  KEY FK_SYS_MENUBTN_MENU (MENU_ID) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='功能按钮表';
ALTER TABLE SYS_MENUBTN ADD CONSTRAINT FK_SYS_MENUBTN_MENU FOREIGN KEY (MENU_ID) REFERENCES SYS_MENUINFO (MENU_ID);

-- ----------------------------
-- Table structure for SYS_ROLE
-- ----------------------------
DROP TABLE IF EXISTS SYS_ROLE;
CREATE TABLE SYS_ROLE (
  ROLE_ID       CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  ROLE_NAME     VARCHAR(50) NOT NULL COMMENT '角色名称',
  ROLE_CODE     VARCHAR(50) COMMENT '角色编码',
  IS_USED       CHAR(1) COMMENT '是否使用，0 否；1 是',
  MEMO          VARCHAR(1000) COMMENT '备注',
  IS_SYSTEM     CHAR(1) COMMENT '是否系统角色，0 否；1 是',
  IS_DEL        CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME        TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间',
  ROLE_TYPE     CHAR(1) COMMENT '角色类型，0 全部；1 岸基；2 船端',
  COMPANY_ID    CHAR(36) COMMENT '企业ID',
  DEPARTMENT_ID CHAR(36) COMMENT '部门ID（此id存在则需要对该值过滤，该角色属于部门）',
  KEY FK_SYS_ROLE_DEPARTMENT (DEPARTMENT_ID) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='系统角色表';
ALTER TABLE SYS_ROLE ADD CONSTRAINT FK_SYS_ROLE_DEPARTMENT FOREIGN KEY (DEPARTMENT_ID) REFERENCES SYS_DEPARTMENT (DEPARTMENT_ID);

-- ----------------------------
-- Table structure for SYS_ROLE_MENUINFO
-- ----------------------------
DROP TABLE IF EXISTS SYS_ROLE_MENUINFO;
CREATE TABLE SYS_ROLE_MENUINFO (
  ROLE_MENU_ID  CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  ROLE_ID       CHAR(36) NOT NULL COMMENT '角色ID',
  MENU_ID       CHAR(36) NOT NULL COMMENT '菜单ID',
  TYPE          CHAR(1) COMMENT '权限类型，1 可访问；2 可授权',
  MEMO          VARCHAR(1000) COMMENT '备注',
  IS_DEL        CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  COMPANY_ID    CHAR(36) COMMENT '企业ID',
  U_TIME        TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间',
  KEY FK_SYS_ROLE_MENU_ROLE (ROLE_ID) USING BTREE,
  KEY FK_SYS_ROLE_MENU_MENU (MENU_ID) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='角色菜单关系表';
ALTER TABLE SYS_ROLE_MENUINFO ADD CONSTRAINT FK_SYS_ROLE_MENU_ROLE FOREIGN KEY (ROLE_ID) REFERENCES SYS_ROLE (ROLE_ID);
ALTER TABLE SYS_ROLE_MENUINFO ADD CONSTRAINT FK_SYS_ROLE_MENU_MENU FOREIGN KEY (MENU_ID) REFERENCES SYS_MENUINFO (MENU_ID);

-- ----------------------------
-- Table structure for SYS_ROLE_MENU_BTN
-- ----------------------------
DROP TABLE IF EXISTS SYS_ROLE_MENU_BTN;
CREATE TABLE SYS_ROLE_MENU_BTN (
  ROLE_MENU_BTN_ID  CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  ROLE_ID           CHAR(36) NOT NULL COMMENT '角色ID',
  MENU_ID           CHAR(36) NOT NULL COMMENT '菜单ID',
  BTN_ID            CHAR(36) NOT NULL COMMENT '按钮ID',
  MEMO              VARCHAR(1000) COMMENT '备注',
  COMPANY_ID        CHAR(36) COMMENT '企业ID',
  IS_DEL            CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME            TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间',
  KEY FK_SYS_ROLE_MENU_BTN_ROLE (ROLE_ID) USING BTREE,
  KEY FK_SYS_ROLE_MENU_BTN_MENU (MENU_ID) USING BTREE,
  KEY FK_SYS_ROLE_MENU_BTN_BTN (BTN_ID) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='角色菜单按钮关系表';
ALTER TABLE SYS_ROLE_MENU_BTN ADD CONSTRAINT FK_SYS_ROLE_MENU_BTN_ROLE FOREIGN KEY (ROLE_ID) REFERENCES SYS_ROLE (ROLE_ID);
ALTER TABLE SYS_ROLE_MENU_BTN ADD CONSTRAINT FK_SYS_ROLE_MENU_BTN_MENU FOREIGN KEY (MENU_ID) REFERENCES SYS_MENUINFO (MENU_ID);
ALTER TABLE SYS_ROLE_MENU_BTN ADD CONSTRAINT FK_SYS_ROLE_MENU_BTN_BTN FOREIGN KEY (BTN_ID) REFERENCES SYS_MENUBTN (BTN_ID);

-- ----------------------------
-- Table structure for SYS_USER
-- ----------------------------
DROP TABLE IF EXISTS T_AUTH_ACCOUNT;
CREATE TABLE T_AUTH_ACCOUNT (
  USER_ID         CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  PERSON_ID       CHAR(36) COMMENT '人员ID',
  LOGIN_NAME      VARCHAR(200) NOT NULL COMMENT '用户名',
  LOGIN_PASSWORD  VARCHAR(200) NOT NULL COMMENT '密码',
  IS_ACTIVATE     CHAR(1) COMMENT '是否激活，0 否；1 是',
  IS_OVERDUE      CHAR(1) COMMENT '是否过期，0 否；1 是',
  IS_LOCK         CHAR(1) COMMENT '是否锁定，0 否；1 是',
  IS_ADMIN        CHAR(1) COMMENT '是否管理员，0 否；1 是',
  U_LEVEL         INTEGER(9) COMMENT '用户等级',
  LOGIN_DAY       INTEGER(9) COMMENT '登录天数',
  UP_DAY          INTEGER(9) COMMENT '剩余升级天数',
  REGISTER_TIME   DATETIME COMMENT '注册时间',
  LAST_TIME       DATETIME COMMENT '最后一次登录时间',
  IS_DEL          CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME          TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间',
  COMPANY_ID      CHAR(36) COMMENT '企业ID',
  KEY FK_SYS_USER_PERSON (PERSON_ID) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='系统用户表';
ALTER TABLE SYS_USER ADD CONSTRAINT FK_SYS_USER_PERSON FOREIGN KEY (PERSON_ID) REFERENCES SYS_PERSON (PERSON_ID);

-- ----------------------------
-- Table structure for SYS_USER_ROLE
-- ----------------------------
DROP TABLE IF EXISTS SYS_USER_ROLE;
CREATE TABLE SYS_USER_ROLE (
  USER_ROLE_ID  CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  ROLE_ID       CHAR(36) NOT NULL COMMENT '角色ID',
  USER_ID       CHAR(36) NOT NULL COMMENT '用户ID',
  COMPANY_ID    CHAR(36) COMMENT '企业ID',
  DEPARTMENT_ID CHAR(36) COMMENT '部门ID',
  IS_DEL        CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME        TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间',
  KEY FK_SYS_USER_ROLE_USER (USER_ID) USING BTREE,
  KEY FK_SYS_USER_ROLE_ROLE (ROLE_ID) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='用户角色关系表';
ALTER TABLE SYS_USER_ROLE ADD CONSTRAINT FK_SYS_USER_ROLE_USER FOREIGN KEY (USER_ID) REFERENCES SYS_USER (USER_ID);
ALTER TABLE SYS_USER_ROLE ADD CONSTRAINT FK_SYS_USER_ROLE_ROLE FOREIGN KEY (ROLE_ID) REFERENCES SYS_ROLE (ROLE_ID);

-- ----------------------------
-- Table structure for SYS_FINGERPRINT
-- ----------------------------
DROP TABLE IF EXISTS SYS_FINGERPRINT;
CREATE TABLE SYS_FINGERPRINT (
  FINGERPRINT_ID  CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  PERSON_ID       CHAR(36) COMMENT '人员ID',
  FINGER          INTEGER(2) NOT NULL COMMENT '手指标识，1 左手食指；2 右手食指；3 左手拇指；4 右手拇指；5 左手中指；6 右手中指；7 左手无名指；8 右手无名指；9 左手小指；10 右手小指；',
  TEMPLATE        VARCHAR(2000) NOT NULL COMMENT '指纹模板字符串',
  ENABLE          INTEGER(1) COMMENT '是否启用，0 否；1 是',
  MEMO            VARCHAR(1000) COMMENT '备注',
  COMPANY_ID      VARCHAR(36) COMMENT '企业ID',
  IS_DEL          CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME          TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间',
  KEY FK_SYS_FINGERPRINT_PERSON (PERSON_ID) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='人员指纹表';
ALTER TABLE SYS_FINGERPRINT ADD CONSTRAINT FK_SYS_FINGERPRINT_PERSON FOREIGN KEY (PERSON_ID) REFERENCES SYS_PERSON (PERSON_ID);

-- system tables -----------------------------------------------------------------------------------------------

-- ----------------------------
-- Table structure for SYS_ACCESS_LOG
-- ----------------------------
DROP TABLE IF EXISTS SYS_ACCESS_LOG;
CREATE TABLE SYS_ACCESS_LOG (
  ID                CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  ACCESSDATE        DATETIME NOT NULL DEFAULT '0000-00-00 00:00:00' COMMENT '访问时间',
  ACCESSURL         VARCHAR(500) COMMENT '访问URL',
  ACCESSMETHOD      VARCHAR(10) COMMENT '访问方法',
  ACCESSEXCUTETIME  DECIMAL(20,0) COMMENT '访问执行时长',
  ACCESSMEMORY      DECIMAL(20,0) COMMENT '访问占用内存',
  ACCESSUSERCODE    VARCHAR(36) COMMENT '访问用户ID',
  ACCESSUSERNAME    VARCHAR(20) COMMENT '企业用户名',
  COMPANY_ID        CHAR(36) COMMENT '企业ID',
  IS_DEL            CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME            TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='系统日志';

-- ----------------------------
-- Table structure for SYS_PERSON_EXPERIENCE
-- ----------------------------
DROP TABLE IF EXISTS SYS_PERSON_EXPERIENCE;
CREATE TABLE SYS_PERSON_EXPERIENCE (
  EXPERIENCE_ID     CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  PERSON_ID         CHAR(36) COMMENT '人员ID',
  COMPANY           VARCHAR(200) COMMENT '企业名称',
  DEPARTEMENT       VARCHAR(200) COMMENT '部门',
  POST              VARCHAR(200) COMMENT '岗位',
  START_DATE        DATETIME NOT NULL COMMENT '开始时间',
  END_DATE          DATETIME COMMENT '结束时间',
  WORK_DISCRIPTION  VARCHAR(2000) COMMENT '工作描述',
  MEMO              VARCHAR(2000) COMMENT '备注',
  COMPANY_ID        CHAR(36) COMMENT '企业ID',
  IS_DEL            CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME            TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间',
  KEY FK_SYS_PERSON_EXPERIENCE_PERSON (PERSON_ID) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='人员履历表';
ALTER TABLE SYS_PERSON_EXPERIENCE ADD CONSTRAINT FK_SYS_PERSON_EXPERIENCE_PERSON FOREIGN KEY (PERSON_ID) REFERENCES SYS_PERSON (PERSON_ID);

-- ----------------------------
-- Table structure for SYS_EDUCATION_EXPERIENCE
-- ----------------------------
DROP TABLE IF EXISTS SYS_EDUCATION_EXPERIENCE;
CREATE TABLE SYS_EDUCATION_EXPERIENCE (
  EDU_EXPERIENCE_ID CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  PERSON_ID         CHAR(36) COMMENT '人员ID',
  EDU_INSTITUTION   VARCHAR(500) COMMENT '教育机构',
  EDU_START_DATE    DATETIME COMMENT '开始时间',
  EDU_END_DATE      DATETIME COMMENT '结束时间',
  EDU_BACKGROUND    CHAR(36) COMMENT '学历DM-XSLB《学生类别代码》',
  EDU_SCHOOL        VARCHAR(500) COMMENT '学校',
  COMPANY_ID        CHAR(36) COMMENT '企业ID',
  IS_DEL            CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME            TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间',
  KEY FK_SYS_EDUCATION_EXPERIENCE_PERSON (PERSON_ID) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='人员教育经历表';
ALTER TABLE SYS_EDUCATION_EXPERIENCE ADD CONSTRAINT FK_SYS_EDUCATION_EXPERIENCE_PERSON FOREIGN KEY (PERSON_ID) REFERENCES SYS_PERSON (PERSON_ID);

-- ----------------------------
-- Table structure for SYS_MODULE
-- ----------------------------
DROP TABLE IF EXISTS SYS_MODULE;
CREATE TABLE SYS_MODULE (
  ID          CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  USER_ID     VARCHAR(36) NOT NULL DEFAULT '用户主键',
  MENU_ID     VARCHAR(36) NOT NULL DEFAULT '菜单主键',
  SYSTEM_ID   VARCHAR(36) COMMENT '系统ID',
  IS_DEL      CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME      TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间',
  COMPANY_ID  CHAR(36) COMMENT '企业ID'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='首页菜单模块管理';

-- ----------------------------
-- Table structure for SYS_FOLDER
-- ----------------------------
DROP TABLE IF EXISTS SYS_FOLDER;
CREATE TABLE SYS_FOLDER (
  FOLDER_ID     CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  PARENT_ID     CHAR(36) COMMENT '父级ID',
  COMPANY_ID    CHAR(36) COMMENT '企业ID',
  DEPARTMENT_ID CHAR(36) COMMENT '部门ID',
  SHIP_ID       CHAR(36) COMMENT '船舶ID',
  FOLDER_NAME   VARCHAR(500) NOT NULL COMMENT '文件夹名称',
  FOLDER_CODE   VARCHAR(500) NOT NULL COMMENT '编码,按照系统和业务编码规则船管11船员13机舱15依次类推',
  IS_SYSTEM     CHAR(1) NOT NULL COMMENT '是否系统文件夹，0 否；1 是；系统级别文件夹无法修改',
  FOLDER_SORT   INTEGER(9) COMMENT '排序号',
  OPERATORNAME  VARCHAR(500) COMMENT '操作人名',
  CREATOR       CHAR(36) COMMENT '操作人ID',
  IS_DEL        CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME        TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间',
  SYNCH_TYPE    CHAR(1) COMMENT '文件夹同步方式，0 不同步；1 按照SHIP_ID同步，为空不同步；2 按照SHIP_ID同步，为空全船同步'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='系统文件夹(网盘)';

-- ----------------------------
-- Table structure for sys_file
-- ----------------------------
DROP TABLE IF EXISTS SYS_FILE;
CREATE TABLE SYS_FILE (
  FILE_ID           CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  COMPANY_ID        CHAR(36) COMMENT '企业ID',
  DEPARTMENT_ID     CHAR(36) COMMENT '部门ID',
  SHIP_ID           CHAR(36) COMMENT '船舶ID',
  FILE_TYPE         VARCHAR(500) COMMENT 'doc/excel/ppt/txt',
  FILE_MD5          VARCHAR(500) COMMENT '文件MD5值',
  FILE_SIZE         DECIMAL(10,2) COMMENT '文件大小（KB）',
  BUSINESS_NAME     VARCHAR(500) COMMENT '业务名称',
  SAVE_ADDRESS      VARCHAR(2000) COMMENT'保存位置',
  RELATIVE_ADDRESS  VARCHAR(2000) COMMENT '保存相对位置',
  UPLOAD_TYPE       CHAR(1) COMMENT '上传方式',
  IS_DEL            CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME            TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='系统文件表';

-- ----------------------------
-- Table structure for SYS_FOLDER_FILE
-- ----------------------------
DROP TABLE IF EXISTS SYS_FOLDER_FILE;
CREATE TABLE SYS_FOLDER_FILE (
  SYS_FOLDER_FILE_ID  CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  FILE_ID             CHAR(36) COMMENT '文件ID',
  FILE_NAME           VARCHAR(500) COMMENT '文件名称',
  BUSINESS_ID         CHAR(36) COMMENT '业务ID',
  BUSINESS_NAME       VARCHAR(500) COMMENT '业务名称',
  FOLDER_ID           CHAR(36) COMMENT '文件夹ID',
  SHIP_ID             CHAR(36) COMMENT '船舶ID',
  IS_SYNCH_SHIP       CHAR(1) COMMENT '仅供同步使用，文件是否同步该船舶，0 不同步，1 按照SHIP_ID同步；SHIP_ID为空时不同步；2 SHIP_ID为空全船同步',
  COMPANY_ID          CHAR(36) COMMENT '企业ID',
  IS_DEL              CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME              TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间',
  OPERATOR_ID         CHAR(36) COMMENT '处理人ID',
  KEY FK_SYS_FOLDER_FILE_FOLDER (FOLDER_ID) USING BTREE,
  KEY FK_SYS_FOLDER_FILE_FILE (FILE_ID) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='文件夹与文件关系表';
ALTER TABLE SYS_FOLDER_FILE ADD CONSTRAINT FK_SYS_FOLDER_FILE_FOLDER FOREIGN KEY (FOLDER_ID) REFERENCES SYS_FOLDER (FOLDER_ID);
ALTER TABLE SYS_FOLDER_FILE ADD CONSTRAINT FK_SYS_FOLDER_FILE_FILE FOREIGN KEY (FILE_ID) REFERENCES SYS_FILE (FILE_ID);

-- ----------------------------
-- Table structure for SYS_FILE_DOWN
-- ----------------------------
DROP TABLE IF EXISTS SYS_FILE_DOWN;
CREATE TABLE SYS_FILE_DOWN (
  DOWN_ID         CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  FOLDER_FILE_ID  CHAR(36) COMMENT '文件ID',
  DOWN_URL        VARCHAR(500) COMMENT '分享地址',
  DOWN_NUMBER     INTEGER(9) COMMENT '下载次数',
  DOWN_CODE       VARCHAR(500) COMMENT '验证码',
  EFFECT_TIME     DATETIME NOT NULL DEFAULT '0000-00-00 00:00:00' COMMENT '有效时间，默认一个月可以读取系统参数',
  COMPANY_ID      CHAR(36) COMMENT '企业ID',
  IS_DEL          CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME          TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间',
  SHIP_ID         CHAR(36) COMMENT '船舶ID',
  KEY FK_SYS_FILE_DOWN_FOLDER_FILE (FOLDER_FILE_ID) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='系统文件下载地址表';
ALTER TABLE SYS_FILE_DOWN ADD CONSTRAINT FK_SYS_FILE_DOWN_FOLDER_FILE FOREIGN KEY (FOLDER_FILE_ID) REFERENCES SYS_FOLDER_FILE (SYS_FOLDER_FILE_ID);

-- ----------------------------
-- Table structure for SYS_SHIP_HOLDINFO
-- ----------------------------
DROP TABLE IF EXISTS SYS_SHIP_HOLDINFO;
CREATE TABLE SYS_SHIP_HOLDINFO (
  HOLD_ID         CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  SHIP_ID         CHAR(36) COMMENT '船舶ID',
  COMPANY_ID      CHAR(36) COMMENT '企业ID',
  IS_DEL          CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME          TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间',
  HOLD_CODE       VARCHAR(500) COMMENT '编码',
  HOLD_CNAME      VARCHAR(500) COMMENT '中文名称',
  HOLD_ENAME      VARCHAR(500) COMMENT '英文名称',
  HATCH_LENGTH    DECIMAL(8,2) COMMENT '舱口长度',
  HATCH_WIDTH     DECIMAL(8,2) COMMENT '舱口宽度',
  HOLD_LENGTH     DECIMAL(8,2) COMMENT '舱内长度',
  HOLD_WIDTH      DECIMAL(8,2) COMMENT '舱内宽度',
  HOLD_HEIGHT     DECIMAL(8,2) COMMENT '舱内高度',
  GRAIN_CAPACITY  DECIMAL(8,2) COMMENT '散装容积',
  PACKING_VOLUME  DECIMAL(8,2) COMMENT '包装容积',
  CARGO_GEAR      VARCHAR(500) COMMENT '起货设备',
  MEMO            VARCHAR(2000) COMMENT '备注',
  KEY FK_SYS_SHIP_HOLDINFO_SHIP (SHIP_ID) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='船舶货舱信息表';
ALTER TABLE SYS_SHIP_HOLDINFO ADD CONSTRAINT FK_SYS_SHIP_HOLDINFO_SHIP FOREIGN KEY (SHIP_ID) REFERENCES SYS_SHIPINFO (SHIP_ID);

-- ----------------------------
-- Table structure for SYS_SHIP_OIL_TANK
-- ----------------------------
DROP TABLE IF EXISTS SYS_SHIP_OIL_TANK;
CREATE TABLE SYS_SHIP_OIL_TANK (
  TANK_ID           CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  SHIP_ID           CHAR(36) COMMENT '船舶ID',
  COMPANY_ID        CHAR(36) COMMENT '企业ID',
  IS_DEL            CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME            TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间',
  TANK_CODE         VARCHAR(500) COMMENT '编码',
  TANK_CNAME        VARCHAR(500) COMMENT '中文名称',
  TANK_ENAME        VARCHAR(500) COMMENT '英文名称',
  TANK_VOLUME       DECIMAL(8,2) COMMENT '舱柜型容积',
  TANK_NET_CAPACITY DECIMAL(8,2) COMMENT '舱柜净容积',
  CABIN_POSITION    VARCHAR(500) COMMENT '舱柜位置',
  MEMO              VARCHAR(2000) COMMENT '备注',
  KEY FK_SHIP_OIL_TANK_SHIP (SHIP_ID) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='船舶油舱信息表';
ALTER TABLE SYS_SHIP_OIL_TANK ADD CONSTRAINT FK_SHIP_OIL_TANK_SHIP FOREIGN KEY (SHIP_ID) REFERENCES SYS_SHIPINFO (SHIP_ID);

-- ----------------------------
-- Table structure for SYS_ISM
-- ----------------------------
DROP TABLE IF EXISTS SYS_ISM;
CREATE TABLE SYS_ISM (
  ISM_ID            CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  ISM_CODE          VARCHAR(200) COMMENT '文件编号',
  ISM_VERSION       DECIMAL(12,0) COMMENT '版本号',
  READ_LEVEL        CHAR(1) COMMENT '阅读级别',
  RANGE_USE         CHAR(1) COMMENT '使用范围',
  START_TIME        DATETIME COMMENT '生效日期',
  END_TIME          DATETIME COMMENT '截止日期',
  RELATIVE_ADDRESS  VARCHAR(2000) COMMENT '附件相对地址',
  ATTACH_ID         CHAR(36) COMMENT '附件上传ID',
  SHIP_ID           CHAR(36) COMMENT '船舶ID',
  COMPANY_ID        CHAR(36) COMMENT '企业ID',
  IS_DEL            CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME            TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间',
  SWF_PAGES         VARCHAR(255) COMMENT '附件页数',
  REMARK            VARCHAR(2000) COMMENT '备注',
  SHIP_READ         INTEGER(11) COMMENT '船舶阅览'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='体系文件表';

-- ----------------------------
-- Table structure for SYS_ISM_SHIP
-- ----------------------------
DROP TABLE IF EXISTS SYS_ISM_SHIP;
CREATE TABLE SYS_ISM_SHIP (
  ISM_SHIP_ID CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  ISM_ID      CHAR(36) COMMENT '体系文件ID',
  SHIP_ID     CHAR(36) COMMENT '船舶ID',
  COMPANY_ID  CHAR(36) COMMENT '企业ID',
  IS_DEL      CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME      TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间',
  KEY FK_SYS_ISM_SHIP_ISM (ISM_ID) USING BTREE,
  KEY FK_SYS_ISM_SHIP_SHIP (SHIP_ID) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='体系文件船舶关系表';
ALTER TABLE SYS_ISM_SHIP ADD CONSTRAINT FK_SYS_ISM_SHIP_ISM FOREIGN KEY (ISM_ID) REFERENCES SYS_ISM (ISM_ID);
ALTER TABLE SYS_ISM_SHIP ADD CONSTRAINT FK_SYS_ISM_SHIP_SHIP FOREIGN KEY (SHIP_ID) REFERENCES SYS_SHIPINFO (SHIP_ID);

-- ----------------------------
-- Table structure for SYS_ISM_SYNCH
-- ----------------------------
DROP TABLE IF EXISTS SYS_ISM_SYNCH;
CREATE TABLE SYS_ISM_SYNCH (
  ISM_SYNCH_ID      CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  ISM_CODE          VARCHAR(200) COMMENT '文件编号',
  ISM_VERSION       DECIMAL(12,0) COMMENT '版本号',
  ISM_VERSION_LAST  DECIMAL(12,0) COMMENT '上次版本号',
  RELATIVE_ADDRESS  VARCHAR(2000) COMMENT '附件相对地址',
  SWF_PAGES         VARCHAR(200) COMMENT '文件总数',
  ONE_PAGE          CHAR(1) COMMENT '是否单页',
  PAGE              VARCHAR(200) COMMENT '单页页码',
  SHIP_ID           CHAR(36) COMMENT '船舶ID',
  COMPANY_ID        CHAR(36) COMMENT '企业ID',
  IS_DEL            CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME            TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='体系文件同步表';

-- ----------------------------
-- Table structure for CREW_ON_BOARD
-- ----------------------------
DROP TABLE IF EXISTS CREW_ON_BOARD;
CREATE TABLE CREW_ON_BOARD (
  ON_BOARD_ID     CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  POST_ID         CHAR(36) NOT NULL COMMENT '岗位ID',
  POST_NAME       VARCHAR(200) COMMENT '岗位名称',
  PERSON_ID       CHAR(36) COMMENT '人员ID',
  PERSON_CNAME    VARCHAR(200) COMMENT '姓名',
  PERSON_ENAME    VARCHAR(200) COMMENT '英文名',
  GENDER          INTEGER(1) COMMENT '性别，1 男；2 女；3 保密',
  IDENTITY_TYPE   INTEGER(1) COMMENT '证件类型，1 身份证；2 驾照；3 护照',
  IDENTITY_CARD   VARCHAR(200) COMMENT '身份证号',
  COUNTRY         VARCHAR(200) COMMENT '国籍',
  NATIONALITY     VARCHAR(200) COMMENT '民族',
  BIRTHDAY        DATE COMMENT '生日',
  TELEPHONE       VARCHAR(200) COMMENT '手机号码',
  OFFICE_TEL      VARCHAR(200) COMMENT '办公号码',
  EMAIL           VARCHAR(200) COMMENT '邮箱',
  ADDRESS         VARCHAR(1000) COMMENT '家庭住址',
  MEMO            VARCHAR(2000) COMMENT '备注',
  PERSON_CATEGROY VARCHAR(2) COMMENT '工作类型，10 机关；11 船队；12 二级单位；13 分公司；14 办事处；20 船员',
  STATUS          INTEGER(1) COMMENT '人员状态，1 在职；2 离职；3 公休，适用岸基和船端',
  NATURE          INTEGER(1) COMMENT '人员性质，1 自由；2 借调；3 临时；4 外派，适用岸基和船端',
  ON_BOARD_TIME   DATETIME COMMENT '上船时间',
  ORIGIN          INTEGER(1) COMMENT '数据来源，1 程序；2 导入；3 船端',
  SHIP_ID         CHAR(36) COMMENT '船舶ID',
  COMPANY_ID      CHAR(36) COMMENT '企业ID',
  IS_DEL          CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME          TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间',
  KEY FK_CREW_ON_BOARD_PERSON (PERSON_ID) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='在船船员名单@调配的时候更新，若船员未使用则需要船端手动更新';
ALTER TABLE CREW_ON_BOARD ADD CONSTRAINT FK_CREW_ON_BOARD_PERSON FOREIGN KEY (PERSON_ID) REFERENCES SYS_PERSON (PERSON_ID);

-- ----------------------------
-- Table structure for SYS_MESSAGE_MAIN
-- ----------------------------
DROP TABLE IF EXISTS SYS_MESSAGE_MAIN;
CREATE TABLE SYS_MESSAGE_MAIN (
  MESSAGE_MAIN_ID     CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  MESSAGE_TITLE       VARCHAR(100) NOT NULL COMMENT '消息标题',
  MESSAGE_TYPE        CHAR(1) COMMENT '消息类型，1 广播；2 点对点',
  MESSAGE_NOTE        VARCHAR(500) COMMENT '消息描述，类似URL等相关信息',
  BUSINESS_ID         VARCHAR(200) COMMENT '业务ID',
  MESSAGE_DEAL_STATUS CHAR(1) COMMENT '消息处理状态：C 新增，U 更新，D 删除',
  MESSAGE_SOURCE      CHAR(2) NOT NULL COMMENT '消息来源，以业务方式进行管理。01 工作流业务',
  MESSAGE_STATUS      CHAR(1) COMMENT '消息处理状态，0 处理中，1 处理完成',
  CREATE_DATE         DATETIME COMMENT '创建时间',
  COMPANY_ID          CHAR(36) COMMENT '企业ID',
  IS_DEL              CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME              TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='系统消息表';

-- ----------------------------
-- Table structure for SYS_MESSAGE_DETAIL
-- ----------------------------
DROP TABLE IF EXISTS SYS_MESSAGE_DETAIL;
CREATE TABLE SYS_MESSAGE_DETAIL (
  MESSAGE_DETAIL_ID CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  MESSAGE_MAIN_ID   CHAR(36) COMMENT '消息主ID',
  SEND_OBJ_TYPE     CHAR(1) NOT NULL COMMENT '发送对象类型，1 企业；2 岗位；3 部门；4 人员',
  SEND_OBJ_ID       CHAR(36) COMMENT '发送对象ID',
  SEND_DATE         DATETIME COMMENT '发送时间',
  SEND_STATUS       CHAR(1) COMMENT '发送状态，0 未发送；1 已发送',
  COMPANY_ID        CHAR(36) COMMENT '企业ID',
  IS_DEL            CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME            TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间',
  KEY FK_SYS_MESSAGE_DETAIL_MAIN (MESSAGE_MAIN_ID) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='系统消息明细表';
ALTER TABLE SYS_MESSAGE_DETAIL ADD CONSTRAINT FK_SYS_MESSAGE_DETAIL_MAIN FOREIGN KEY (MESSAGE_MAIN_ID) REFERENCES SYS_MESSAGE_MAIN (MESSAGE_MAIN_ID);

-- ----------------------------
-- Table structure for SYS_JOB
-- ----------------------------
DROP TABLE IF EXISTS SYS_JOB;
CREATE TABLE SYS_JOB (
  JOB_ID                    CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  JOB_NAME                  VARCHAR(50) COMMENT '任务名称',
  JOB_URL                   VARCHAR(500) COMMENT '任务地址',
  JOB_PARAM                 VARCHAR(1000) COMMENT '任务参数',
  JOB_ISRUN                 VARCHAR(1) DEFAULT '1' COMMENT '是否启用',
  JOB_LASTEXECUTE_TIME      DATETIME COMMENT '上次执行时间',
  JOB_LASTEXECUTE_DURATION  DECIMAL(10,0) COMMENT '上次执行时长',
  JOB_LASTEXECUTE_STATUS    VARCHAR(50) COMMENT '上次执行结果',
  OPERATOR                  VARCHAR(36) COMMENT '操作人',
  JOB_TIME                  VARCHAR(50) COMMENT '运行时间',
  JOB_GROUP                 VARCHAR(50) COMMENT '任务分组',
  URL_CONTEXT               VARCHAR(500) COMMENT 'URL前缀',
  URL_ACTION                VARCHAR(500) COMMENT 'URL后缀',
  USER_NAME                 VARCHAR(50) COMMENT '用户名',
  PASSWD                    VARCHAR(50) COMMENT '密码',
  MEDIATYPE                 VARCHAR(500) COMMENT '文件类型',
  METHOD                    VARCHAR(20) COMMENT '方法',
  JOB_CONNECT_TIMEOUT       DECIMAL(10,0) DEFAULT '10000' COMMENT '连接超时时间',
  JOB_READ_TIMEOUT          DECIMAL(10,0) DEFAULT '30000' COMMENT '读取超时时间',
  COMPANY_ID                CHAR(36) COMMENT '企业ID',
  IS_DEL                    CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME                    TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='系统任务表';

-- ----------------------------
-- Table structure for SYS_JOB_HIS
-- ----------------------------
DROP TABLE IF EXISTS SYS_JOB_HIS;
CREATE TABLE SYS_JOB_HIS (
  JOB_HIS_ID            CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  JOB_ID                CHAR(36) NOT NULL COMMENT '任务主键',
  JOB_NAME              VARCHAR(500) NOT NULL COMMENT '任务名称',
  JOB_EXECUTE_TIME      DATETIME COMMENT '执行时间',
  JOB_EXECUTE_DURATION  DECIMAL(10,0) COMMENT '执行时长',
  JOB_EXECUTE_STATUS    VARCHAR(50) COMMENT '执行结果',
  COMPANY_ID            CHAR(36) COMMENT '企业ID',
  IS_DEL                CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME                TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='系统任务历史记录表';

-- ----------------------------
-- Table structure for SYS_MOBILE_CLIENT_PUBLISH
-- ----------------------------
DROP TABLE IF EXISTS SYS_MOBILE_CLIENT_PUBLISH;
CREATE TABLE SYS_MOBILE_CLIENT_PUBLISH (
  ID              CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  MOBILE_TYPE     CHAR(1) COMMENT '移动端类型，1 安卓；2 苹果；3 winPhone',
  UPLOAD_VERSION  INTEGER(11) COMMENT '版本号，用于PC端比较版本使用',
  PUBLISH_VERSION VARCHAR(200) COMMENT '发布版本号',
  UPLOAD_DATE     DATETIME COMMENT '更新日期',
  FOLDER_FILE_ID  CHAR(36) COMMENT '更新包文件ID',
  REMARK          VARCHAR(2000) COMMENT '更新说明',
  IS_LAND_SHIP    CHAR(1) COMMENT '移动软件为船舶端或岸段，1：岸基；2：船舶端',
  IMPORTMENT      CHAR(1) COMMENT '是否强制更新，0 无需强制更新；1 必须更新',
  IS_DEL          CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME          TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间',
  COMPANY_ID      CHAR(36) COMMENT '企业ID'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='移动端发布版本记录表';

-- ----------------------------
-- Table structure for SYS_UPLOAD_DATA
-- ----------------------------
DROP TABLE IF EXISTS SYS_UPLOAD_DATA;
CREATE TABLE SYS_UPLOAD_DATA (
  UPLOAD_DATA_ID  CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  DATA_ID         VARCHAR(200) COMMENT '上传数据编号',
  DATA_NUM        INTEGER(18) COMMENT '数据序号',
  DATA_STATE      INTEGER(2) COMMENT '数据状态',
  DATA_MESSAGE    VARCHAR(500) COMMENT '数据消息',
  OPERATOR        VARCHAR(36) COMMENT '操作人',
  COL_A           TEXT COMMENT 'A',
  COL_B           TEXT COMMENT 'B',
  COL_C           TEXT COMMENT 'C',
  COL_D           TEXT COMMENT 'D',
  COL_E           TEXT COMMENT 'E',
  COL_F           TEXT COMMENT 'F',
  COL_G           TEXT COMMENT 'G',
  COL_H           TEXT COMMENT 'H',
  COL_I           TEXT COMMENT 'I',
  COL_J           TEXT COMMENT 'J',
  COL_K           TEXT COMMENT 'K',
  COL_L           TEXT COMMENT 'L',
  COL_M           TEXT COMMENT 'M',
  COL_N           TEXT COMMENT 'N',
  COL_O           TEXT COMMENT 'O',
  COL_P           TEXT COMMENT 'P',
  COL_Q           TEXT COMMENT 'Q',
  COL_R           TEXT COMMENT 'R',
  COL_S           TEXT COMMENT 'S',
  COL_T           TEXT COMMENT 'T',
  COL_U           TEXT COMMENT 'U',
  COL_V           TEXT COMMENT 'V',
  COL_W           TEXT COMMENT 'W',
  COL_X           TEXT COMMENT 'X',
  COL_Y           TEXT COMMENT 'Y',
  COL_Z           TEXT COMMENT 'Z',
  COL_AA          TEXT COMMENT 'AA',
  COL_AB          TEXT COMMENT 'AB',
  COL_AC          TEXT COMMENT 'AC',
  COL_AD          TEXT COMMENT 'AD',
  COL_AE          TEXT COMMENT 'AE',
  COL_AF          TEXT COMMENT 'AF',
  COL_AG          TEXT COMMENT 'AG',
  COL_AH          TEXT COMMENT 'AH',
  COL_AI          TEXT COMMENT 'AI',
  COL_AJ          TEXT COMMENT 'AJ',
  COL_AK          TEXT COMMENT 'AK',
  COL_AL          TEXT COMMENT 'AL',
  COL_AM          TEXT COMMENT 'AM',
  COL_AN          TEXT COMMENT 'AN',
  COL_AO          TEXT COMMENT 'AO',
  COL_AP          TEXT COMMENT 'AP',
  COL_AQ          TEXT COMMENT 'AQ',
  COL_AR          TEXT COMMENT 'AR',
  COL_AS          TEXT COMMENT 'AS',
  COL_AT          TEXT COMMENT 'AT',
  COL_AU          TEXT COMMENT 'AU',
  COL_AV          TEXT COMMENT 'AV',
  COL_AW          TEXT COMMENT 'AW',
  COL_AX          TEXT COMMENT 'AX',
  COL_AY          TEXT COMMENT 'AY',
  COL_AZ          TEXT COMMENT 'AZ',
  COL_BA          TEXT COMMENT 'BA',
  COL_BB          TEXT COMMENT 'BB',
  COL_BC          TEXT COMMENT 'BC',
  COL_BD          TEXT COMMENT 'BD',
  COL_BE          TEXT COMMENT 'BE',
  COL_BF          TEXT COMMENT 'BF',
  COL_BG          TEXT COMMENT 'BG',
  COL_BH          TEXT COMMENT 'BH',
  COL_BI          TEXT COMMENT 'BI',
  COL_BJ          TEXT COMMENT 'BJ',
  COL_BK          TEXT COMMENT 'BK',
  COL_BL          TEXT COMMENT 'BL',
  COL_BM          TEXT COMMENT 'BM',
  COL_BN          TEXT COMMENT 'BN',
  COL_BO          TEXT COMMENT 'BO',
  COL_BP          TEXT COMMENT 'BP',
  COL_BQ          TEXT COMMENT 'BQ',
  COL_BR          TEXT COMMENT 'BR',
  COL_BS          TEXT COMMENT 'BS',
  COL_BT          TEXT COMMENT 'BT',
  COL_BU          TEXT COMMENT 'BU',
  COL_BV          TEXT COMMENT 'BV',
  COL_BW          TEXT COMMENT 'BW',
  COL_BX          TEXT COMMENT 'BX',
  COL_BY          TEXT COMMENT 'BY',
  COL_BZ          TEXT COMMENT 'BZ',
  COL_CA          TEXT COMMENT 'CA',
  COL_CB          TEXT COMMENT 'CB',
  COL_CC          TEXT COMMENT 'CC',
  COL_CD          TEXT COMMENT 'CD',
  COL_CE          TEXT COMMENT 'CE',
  COL_CF          TEXT COMMENT 'CF',
  COL_CG          TEXT COMMENT 'CG',
  COL_CH          TEXT COMMENT 'CH',
  COL_CI          TEXT COMMENT 'CI',
  COL_CJ          TEXT COMMENT 'CJ',
  COL_CK          TEXT COMMENT 'CK',
  COL_CL          TEXT COMMENT 'CL',
  COL_CM          TEXT COMMENT 'CM',
  COL_CN          TEXT COMMENT 'CN',
  COL_CO          TEXT COMMENT 'CO',
  COL_CP          TEXT COMMENT 'CP',
  COL_CQ          TEXT COMMENT 'CQ',
  COL_CR          TEXT COMMENT 'CR',
  COL_CS          TEXT COMMENT 'CS',
  COL_CT          TEXT COMMENT 'CT',
  COL_CU          TEXT COMMENT 'CU',
  COL_CV          TEXT COMMENT 'CV',
  COL_CW          TEXT COMMENT 'CW',
  COL_CX          TEXT COMMENT 'CX',
  COL_CY          TEXT COMMENT 'CY',
  COL_CZ          TEXT COMMENT 'CZ',
  COL_DA          TEXT COMMENT 'DA',
  COL_DB          TEXT COMMENT 'DB',
  COL_DC          TEXT COMMENT 'DC',
  COL_DD          TEXT COMMENT 'DD',
  COL_DE          TEXT COMMENT 'DE',
  COL_DF          TEXT COMMENT 'DF',
  COL_DG          TEXT COMMENT 'DG',
  COL_DH          TEXT COMMENT 'DH',
  COL_DI          TEXT COMMENT 'DI',
  COL_DJ          TEXT COMMENT 'DJ',
  COL_DK          TEXT COMMENT 'DK',
  COL_DL          TEXT COMMENT 'DL',
  COL_DM          TEXT COMMENT 'DM',
  COL_DN          TEXT COMMENT 'DN',
  COL_DO          TEXT COMMENT 'DO',
  COL_DP          TEXT COMMENT 'DP',
  COL_DQ          TEXT COMMENT 'DQ',
  COL_DR          TEXT COMMENT 'DR',
  COL_DS          TEXT COMMENT 'DS',
  COL_DT          TEXT COMMENT 'DT',
  COL_DU          TEXT COMMENT 'DU',
  COL_DV          TEXT COMMENT 'DV',
  COL_DW          TEXT COMMENT 'DW',
  COL_DX          TEXT COMMENT 'DX',
  COL_DY          TEXT COMMENT 'DY',
  COL_DZ          TEXT COMMENT 'DZ',
  COL_EA          TEXT COMMENT 'EA',
  COL_EB          TEXT COMMENT 'EB',
  COL_EC          TEXT COMMENT 'EC',
  COL_ED          TEXT COMMENT 'ED',
  COL_EE          TEXT COMMENT 'EE',
  COL_EF          TEXT COMMENT 'EF',
  COL_EG          TEXT COMMENT 'EG',
  COL_EH          TEXT COMMENT 'EH',
  COL_EI          TEXT COMMENT 'EI',
  COL_EJ          TEXT COMMENT 'EJ',
  COL_EK          TEXT COMMENT 'EK',
  COL_EL          TEXT COMMENT 'EL',
  COL_EM          TEXT COMMENT 'EM',
  COL_EN          TEXT COMMENT 'EN',
  COL_EO          TEXT COMMENT 'EO',
  COL_EP          TEXT COMMENT 'EP',
  COL_EQ          TEXT COMMENT 'EQ',
  COL_ER          TEXT COMMENT 'ER',
  COL_ES          TEXT COMMENT 'ES',
  COL_ET          TEXT COMMENT 'ET',
  COL_EU          TEXT COMMENT 'EU',
  COL_EV          TEXT COMMENT 'EV',
  COL_EW          TEXT COMMENT 'EW',
  COL_EX          TEXT COMMENT 'EX',
  COL_EY          TEXT COMMENT 'EY',
  COL_EZ          TEXT COMMENT 'EZ',
  FORMAT_SIGN     VARCHAR(1) COMMENT '格式校验标志',
  FORMAT_MESSAGE  VARCHAR(4000) COMMENT '格式校验消息',
  COMPANY_ID      CHAR(36) COMMENT '企业ID',
  IS_DEL          CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME          TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='文件上传数据表';

-- ----------------------------
-- Table structure for SYS_UPLOAD_DATA_MSG
-- ----------------------------
DROP TABLE IF EXISTS SYS_UPLOAD_DATA_MSG;
CREATE TABLE SYS_UPLOAD_DATA_MSG (
  MSG_ID          CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  DATA_ID         VARCHAR(200) NOT NULL COMMENT '消息数据ID',
  ORDER_ID        INTEGER(18) COMMENT '排序号',
  ROW_NO          VARCHAR(20) COMMENT '行号',
  COL_NO          VARCHAR(20) COMMENT '列号',
  MSG_STATE       INTEGER(4) COMMENT '消息状态',
  MSG_STATE_NAME  VARCHAR(200) COMMENT '消息状态名称',
  MSG             VARCHAR(2000) COMMENT '消息',
  IS_DEL          CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME          TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间',
  COMPANY_ID      CHAR(36) COMMENT '企业ID'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='文件上传消息表';

-- ----------------------------
-- Table structure for SYS_UPLOAD_MODEL
-- ----------------------------
DROP TABLE IF EXISTS SYS_UPLOAD_MODEL;
CREATE TABLE SYS_UPLOAD_MODEL (
  MODEL_ID        VARCHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  MODEL_NAME      VARCHAR(100) COMMENT '模板名称',
  ATTACH_TYPE     VARCHAR(10) COMMENT '附件类型',
  NUM             INTEGER(4) COMMENT '序号',
  MESSAGE         VARCHAR(200) COMMENT '消息',
  OPERATOR        VARCHAR(36) COMMENT '操作人',
  IMP_SERVER      VARCHAR(40) COMMENT '导入服务',
  AUTO_IMP        VARCHAR(1) COMMENT '自动导入',
  AUTO_IMP_TYPE   VARCHAR(1) COMMENT '自动导入类型',
  START_ROW       INTEGER(4) COMMENT '起始行号',
  START_SHEET     INTEGER(4) COMMENT '开始SHEET',
  FORMAT_VALIDATA VARCHAR(2) COMMENT '格式校验',
  IS_DEL          CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME          TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间',
  COMPANY_ID      CHAR(36) COMMENT '企业ID'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='文件上传模板表';

-- ----------------------------
-- Table structure for SYS_UPLOAD_MODEL_DETAIL
-- ----------------------------
DROP TABLE IF EXISTS SYS_UPLOAD_MODEL_DETAIL;
CREATE TABLE SYS_UPLOAD_MODEL_DETAIL (
  MODEL_DETAIL_ID   CHAR(36) NOT NULL PRIMARY KEY COMMENT '模板明细编号',
  MODEL_ID          CHAR(36) NOT NULL COMMENT '模板编号',
  COL_NUM           VARCHAR(20) COMMENT '列序号',
  COL_CNAME         VARCHAR(20) COMMENT '对应关系',
  FORMAT_VALIDATA   VARCHAR(400) COMMENT '格式校验',
  BUSINESS_VALIDATA VARCHAR(400) COMMENT '业务校验',
  ROLLBACK_METHOD   VARCHAR(100) COMMENT '回调方法',
  OPERATOR          VARCHAR(20) COMMENT '操作人',
  ORDER_NUM         INTEGER(4) COMMENT '序号',
  IS_DEL            CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME            TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间',
  COMPANY_ID        CHAR(36) COMMENT '企业ID'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='文件上传模板明细表';

-- ----------------------------
-- Table structure for SYS_UPLOAD_QUEUE
-- ----------------------------
DROP TABLE IF EXISTS SYS_UPLOAD_QUEUE;
CREATE TABLE SYS_UPLOAD_QUEUE (
  QUEUE_ID      CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  OPERATE_ID    CHAR(36) COMMENT '操作人',
  STATE         VARCHAR(20) COMMENT '状态',
  PROGRESS      INTEGER(4) COMMENT '进度',
  MESSAGE       VARCHAR(200) COMMENT '消息',
  START_TIME    DATETIME COMMENT '开始时间',
  END_TIME      DATETIME COMMENT '结束时间',
  TOTAL_ROWS    INTEGER(18) COMMENT '总行数',
  COMPLETE_ROWS INTEGER(18) COMMENT '已经完成行数',
  REMARK        VARCHAR(200) COMMENT '备注',
  TEMPLATE_NO   VARCHAR(200) COMMENT '模板编号',
  IS_DEL        CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME        TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间',
  COMPANY_ID    CHAR(36) COMMENT '企业ID'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='文件上传队列表';

-- ----------------------------
-- Table structure for SYS_LOG
-- ----------------------------
DROP TABLE IF EXISTS SYS_LOG;
CREATE TABLE SYS_LOG (
  LOG_ID      CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  URL         VARCHAR(500) COMMENT '日志路径',
  METHOD      VARCHAR(20) COMMENT '日志方法',
  CONTENT     VARCHAR(500) COMMENT '日志内容',
  PARAMS      VARCHAR(5000) COMMENT '日志参数',
  IP          VARCHAR(20) COMMENT '用户登录IP',
  USER_NAME   VARCHAR(36) COMMENT '用户名',
  COMPANY_ID  CHAR(36) COMMENT '企业ID',
  IS_DEL      CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME      TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='系统日志';

-- ship manage tables -----------------------------------------------------------------------------------------------

-- ----------------------------
-- Table structure for SHIP_COMPONENT_PRODUCT
-- ----------------------------
DROP TABLE IF EXISTS SHIP_COMPONENT_PRODUCT;
CREATE TABLE SHIP_COMPONENT_PRODUCT (
  COMPONENT_PRODUCT_ID  CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  PRODUCT_CNAME         VARCHAR(500) COMMENT '产品中文名称',
  PRODUCT_ENAME         VARCHAR(500) COMMENT '产品英文名称',
  PRODUCT_SPECIFICATION VARCHAR(500) COMMENT '规格',
  PRODUCT_MODEL         VARCHAR(500) COMMENT '设备型号',
  PRODUCT_MANUFACTURER  VARCHAR(500) COMMENT '生产厂家',
  PRODUCT_PARAMETER     VARCHAR(2000) COMMENT '参数',
  SORTID                INTEGER(11) COMMENT '序号',
  IS_DEL                CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME                TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间',
  COMPANY_ID            CHAR(36) COMMENT '企业ID'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='船舶设备产品(型号)';

-- ----------------------------
-- Table structure for SHIP_COMPONENT
-- ----------------------------
DROP TABLE IF EXISTS SHIP_COMPONENT;
CREATE TABLE SHIP_COMPONENT (
  COMPONENT_ID          CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  COMPONENT_PRODUCT_ID  CHAR(36) COMMENT '设备产品ID',
  COMPONENT_TYPE_ID     CHAR(36) COMMENT '设备类型ID',
  COMPONENT_CATEGORY_ID CHAR(36) COMMENT '设备分类ID',
  COMPONENT_NUMBER      VARCHAR(500) COMMENT '设备序列号',
  COMPONENT_CNAME       VARCHAR(500) COMMENT '设备中文名称',
  COMPONENT_ENAME       VARCHAR(500) COMMENT '设备英文名称',
  COMPONENT_MODEL       VARCHAR(500) COMMENT '设备型号',
  MANUFACTURER          VARCHAR(500) COMMENT '生产厂家',
  PARENT_ID             CHAR(36) COMMENT '设备父ID',
  COMPANY_ID            CHAR(36) COMMENT '企业ID',
  SHIP_ID               CHAR(36) COMMENT '船舶ID',
  PRODUCE_DATE          VARCHAR(200) COMMENT '出厂日期',
  RUNING_RATE           DECIMAL(8,2) COMMENT '运转率',
  CWBT_CODE             VARCHAR(500) COMMENT 'CWBT编码提供CWBT分类',
  COMPONENT_CODE        VARCHAR(500) COMMENT '设备编码编码要求唯一',
  INSTALLATION_SITE     VARCHAR(200) COMMENT '安装位置',
  TOTAL_METER           DECIMAL(18,4) COMMENT '设备总表值',
  ORIGIN                CHAR(1) COMMENT '来源，1 初始化；2 岸端；3 船端',
  SORT_ID               INTEGER(11) COMMENT '序号',
  COMPONENT_STATUS      CHAR(1) COMMENT '设备状态，1 使用；2 停用；3 报废',
  CHECK_CODE            VARCHAR(200) COMMENT '船检编码',
  IS_FOREIGN            CHAR(1) COMMENT '是否国外，1 国内；2国外',
  PARAMETER             VARCHAR(2000) COMMENT '设备核心参数',
  REMARK                VARCHAR(2000) COMMENT '备注',
  IS_DEL                CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME                TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间',
  REORDER               VARCHAR(200) COMMENT '序列化排序号（初始化后重新排序）'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='船舶设备表';
ALTER TABLE SHIP_COMPONENT ADD CONSTRAINT FK_SHIP_COMPONENT_SHIP FOREIGN KEY (SHIP_ID) REFERENCES SYS_SHIPINFO (SHIP_ID);
ALTER TABLE SHIP_COMPONENT ADD CONSTRAINT FK_SHIP_COMPONENT_PRODUCT FOREIGN KEY (COMPONENT_PRODUCT_ID) REFERENCES SHIP_COMPONENT_PRODUCT (COMPONENT_PRODUCT_ID);
ALTER TABLE SHIP_COMPONENT ADD CONSTRAINT FK_SHIP_COMPONENT_TYPE FOREIGN KEY (COMPONENT_TYPE_ID) REFERENCES SHIP_COMPONENT_TYPE (COMPONENT_TYPE_ID);
ALTER TABLE SHIP_COMPONENT ADD CONSTRAINT FK_SHIP_COMPONENT_CATEGORY FOREIGN KEY (COMPONENT_CATEGORY_ID) REFERENCES SHIP_COMPONENT_CATEGORY (COMPONENT_CATEGORY_ID);

-- ----------------------------
-- Table structure for SHIP_CERT_INFO
-- ----------------------------
DROP TABLE IF EXISTS SHIP_CERT_INFO;
CREATE TABLE SHIP_CERT_INFO (
  CERT_ID         CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  CERT_TYPE_ID    CHAR(36) NOT NULL COMMENT '证书类型ID',
  CERT_NAME       VARCHAR(500) NOT NULL COMMENT '证书名称',
  CERT_CODE       VARCHAR(500) COMMENT '证书编码',
  COMPANY_ID      CHAR(36) COMMENT '企业ID',
  SHIP_ID         CHAR(36) NOT NULL COMMENT '船舶ID',
  COMPONENT_ID    CHAR(36) COMMENT '设备ID',
  POST_ID         CHAR(36) COMMENT '主管岗位',
  ISSUEL_ORM_NAME VARCHAR(500) COMMENT '发证机关名称',
  ORG_ID          CHAR(36) COMMENT '发证机关',
  SOCIETY_ID      CHAR(36) COMMENT '船级社ID',
  ISSUEL_DATE     DATE COMMENT '签发日期',
  INSPECT_DATE    DATE COMMENT '检验日期',
  CERT_PROPETY    CHAR(1) COMMENT '证书性质，1 长期；2 定期；3 临时；4 其他',
  CERT_PERIOD     DECIMAL(8,2) COMMENT '证书检验周期',
  CERT_ALERTDAY   INTEGER(11) COMMENT '报警天数',
  IS_DEL          CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME          TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间',
  MEMO            VARCHAR(2000) COMMENT '备注'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='船舶证书';
ALTER TABLE SHIP_CERT_INFO ADD CONSTRAINT FK_SHIP_CERT_INFO_SHIP FOREIGN KEY (SHIP_ID) REFERENCES SYS_SHIPINFO (SHIP_ID);
ALTER TABLE SHIP_CERT_INFO ADD CONSTRAINT FK_SHIP_CERT_INFO_POST FOREIGN KEY (POST_ID) REFERENCES SYS_POST (POST_ID);
ALTER TABLE SHIP_CERT_INFO ADD CONSTRAINT FK_SHIP_CERT_INFO_MARITIME_ORG FOREIGN KEY (ORG_ID) REFERENCES SYS_MARITIME_ORG (ORG_ID);
ALTER TABLE SHIP_CERT_INFO ADD CONSTRAINT FK_SHIP_CERT_INFO_CLASS_SOCIETY FOREIGN KEY (SOCIETY_ID) REFERENCES SYS_CLASS_SOCIETY (SOCIETY_ID);
ALTER TABLE SHIP_CERT_INFO ADD CONSTRAINT FK_SHIP_CERT_INFO_TYPE FOREIGN KEY (CERT_TYPE_ID) REFERENCES SHIP_CERT_TYPE (CERT_TYPE_ID);
ALTER TABLE SHIP_CERT_INFO ADD CONSTRAINT FK_SHIP_CERT_INFO_COMPONENT FOREIGN KEY (COMPONENT_ID) REFERENCES SHIP_COMPONENT (COMPONENT_ID);

-- ----------------------------
-- Table structure for SHIP_CERT_INSPECTION
-- ----------------------------
DROP TABLE IF EXISTS SHIP_CERT_INSPECTION;
CREATE TABLE SHIP_CERT_INSPECTION (
  INSPECTION_ID     CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  INSPECTION_TYPE   CHAR(1) COMMENT '检验类型，1 签章；2 换证',
  CERT_ID           CHAR(36) NOT NULL COMMENT '证书ID',
  CERT_TYPE_ID      CHAR(36) NOT NULL COMMENT '证书类型ID',
  CERT_NAME         VARCHAR(500) NOT NULL COMMENT '证书名称',
  CERT_CODE         VARCHAR(500) COMMENT '证书编码',
  COMPANY_ID        CHAR(36) COMMENT '企业ID',
  SHIP_ID           CHAR(36) NOT NULL COMMENT '船舶ID',
  POST_ID           CHAR(36) COMMENT '主管岗位',
  ORG_ID            CHAR(36) COMMENT '发证机关',
  SOCIETY_ID        CHAR(36) COMMENT '船级社ID',
  ISSUEL_DATE       DATETIME COMMENT '签发日期',
  INSPECT_DATE      DATETIME COMMENT '检验日期',
  CERT_PROPETY      CHAR(1) COMMENT '证书性质，1 长期；2 定期；3 临时；4 其他',
  CERT_PERIOD       DECIMAL(8,2) COMMENT '证书检验周期',
  CERT_ALERTDAY     INTEGER(11) COMMENT '报警天数',
  INSPECTION_ORG    VARCHAR(500) COMMENT '检验机构',
  INSPECTION_DATE   DATETIME COMMENT '检验日期',
  MEMO              VARCHAR(2000) COMMENT '备注',
  INSPECTION_REMARK VARCHAR(2000) COMMENT '检验描述或内容',
  IS_DEL            CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME            TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='证书检验记录';
ALTER TABLE SHIP_CERT_INSPECTION ADD CONSTRAINT FK_SHIP_CERT_INSPECTION_SHIP FOREIGN KEY (SHIP_ID) REFERENCES SYS_SHIPINFO (SHIP_ID);
ALTER TABLE SHIP_CERT_INSPECTION ADD CONSTRAINT FK_SHIP_CERT_INSPECTION_CERT FOREIGN KEY (CERT_ID) REFERENCES SHIP_CERT_INFO (CERT_ID);

-- ----------------------------
-- Table structure for SHIP_COMPONENT_POST
-- ----------------------------
DROP TABLE IF EXISTS SHIP_COMPONENT_POST;
CREATE TABLE SHIP_COMPONENT_POST (
  COMPONENT_POST_ID CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  COMPONENT_ID      CHAR(36) COMMENT '设备ID',
  POST_ID           CHAR(36) COMMENT '岗位ID',
  COMPANY_ID        CHAR(36) COMMENT '企业ID',
  SHIP_ID           CHAR(36) COMMENT '船舶ID',
  IS_DEL            CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME            TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='船舶设备岗位表';
ALTER TABLE SHIP_COMPONENT_POST ADD CONSTRAINT FK_SHIP_COMPONENT_POST_SHIP FOREIGN KEY (SHIP_ID) REFERENCES SYS_SHIPINFO (SHIP_ID);
ALTER TABLE SHIP_COMPONENT_POST ADD CONSTRAINT FK_SHIP_COMPONENT_POST_COMPONENT FOREIGN KEY (COMPONENT_ID) REFERENCES SHIP_COMPONENT (COMPONENT_ID);
ALTER TABLE SHIP_COMPONENT_POST ADD CONSTRAINT FK_SHIP_COMPONENT_POST_POST FOREIGN KEY (POST_ID) REFERENCES SYS_POST (POST_ID);

-- ----------------------------
-- Table structure for SHIP_COUNTER_MONTH_REPORT
-- ----------------------------
DROP TABLE IF EXISTS SHIP_COUNTER_MONTH_REPORT;
CREATE TABLE SHIP_COUNTER_MONTH_REPORT (
  REPORT_ID       CHAR(36) NOT NULL PRIMARY KEY,
  REPORT_NAME     VARCHAR(500) COMMENT '报告名称',
  REPORT_MONTH    INTEGER(11) COMMENT '报告月份1-12月',
  REPORT_DATE     DATETIME COMMENT '报告日期',
  PERSON_ID       CHAR(36) COMMENT '报告人ID',
  REPORT_PERSON   VARCHAR(500) COMMENT '报告人',
  CHIEF_ENGINEER  VARCHAR(500) COMMENT '轮机长',
  CAPTION         VARCHAR(500) COMMENT '船长',
  REVIEW          CHAR(1) COMMENT '岸端已阅，1 未阅；2 已阅',
  REVIEW_PERSON   VARCHAR(500) COMMENT '岸基审阅人',
  REVIEW_DATE     DATETIME COMMENT '审阅日期',
  REMARK          VARCHAR(2000) COMMENT '备注',
  COMPANY_ID      CHAR(36) COMMENT '企业ID',
  SHIP_ID         CHAR(36) COMMENT '船舶ID',
  IS_DEL          CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME          TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='设备主要运转时报告';
ALTER TABLE SHIP_COUNTER_MONTH_REPORT ADD CONSTRAINT FK_SHIP_COUNTER_MONTH_REPORT_SHIP FOREIGN KEY (SHIP_ID) REFERENCES SYS_SHIPINFO (SHIP_ID);

-- ----------------------------
-- Table structure for SHIP_COUNTER_MONTH_METER
-- ----------------------------
DROP TABLE IF EXISTS SHIP_COUNTER_MONTH_METER;
CREATE TABLE SHIP_COUNTER_MONTH_METER (
  REPORT_DETAIL_ID  CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  REPORT_ID         CHAR(36) NOT NULL COMMENT '报告ID',
  COMPONENT_ID      CHAR(36) NOT NULL COMMENT '设备ID',
  COMPONENT_NAME    VARCHAR(500) COMMENT '设备名称',
  DISPLAY_NAME      VARCHAR(500) COMMENT '显示名称如吊缸后运转时',
  METER_VALUE       DECIMAL(18,4) COMMENT '设备表值',
  COMPANY_ID        CHAR(36) COMMENT '企业ID',
  SHIP_ID           CHAR(36) COMMENT '船舶ID',
  IS_DEL            CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME            TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='设备月度抄表明细';
ALTER TABLE SHIP_COUNTER_MONTH_METER ADD CONSTRAINT FK_SHIP_COUNTER_MONTH_METER_SHIP FOREIGN KEY (SHIP_ID) REFERENCES SYS_SHIPINFO (SHIP_ID);
ALTER TABLE SHIP_COUNTER_MONTH_METER ADD CONSTRAINT FK_SHIP_COUNTER_MONTH_METER_COMPONENT FOREIGN KEY (COMPONENT_ID) REFERENCES SHIP_COMPONENT (COMPONENT_ID);
ALTER TABLE SHIP_COUNTER_MONTH_METER ADD CONSTRAINT FK_SHIP_COUNTER_MONTH_METER_REPORT FOREIGN KEY (REPORT_ID) REFERENCES SHIP_COUNTER_MONTH_REPORT (REPORT_ID);

-- ----------------------------
-- Table structure for SHIP_COMPONENT_ATTACHMENT
-- ----------------------------
DROP TABLE IF EXISTS SHIP_COMPONENT_ATTACHMENT;
CREATE TABLE SHIP_COMPONENT_ATTACHMENT (
  COMPONENT_ATTACHMENT_ID CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  ATTACHMENT_TYPE         CHAR(1) COMMENT '附件类型，1 设备资料；2 设备完工图；3 设备操作手册',
  ATTACHMENT_TYPE_NAME    VARCHAR(200) NOT NULL COMMENT '附件类型名称',
  SORTID                  INTEGER(11) COMMENT '序号',
  COMPONENT_ID            CHAR(36) NOT NULL COMMENT '设备ID',
  SHIP_ID                 CHAR(36) NOT NULL COMMENT '船舶ID',
  COMPANY_ID              CHAR(36) COMMENT '企业ID',
  IS_DEL                  CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME                  TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间',
  KEY FK_SHIP_COMPONENT_ATTACHMENT_SHIP (SHIP_ID) USING BTREE,
  KEY FK_SHIP_COMPONENT_ATTACHMENT_COMPONENT (COMPONENT_ID) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='设备附件表';
ALTER TABLE SHIP_COMPONENT_ATTACHMENT ADD CONSTRAINT FK_SHIP_COMPONENT_ATTACHMENT_SHIP FOREIGN KEY (SHIP_ID) REFERENCES SYS_SHIPINFO (SHIP_ID);
ALTER TABLE SHIP_COMPONENT_ATTACHMENT ADD CONSTRAINT FK_SHIP_COMPONENT_ATTACHMENT_COMPONENT FOREIGN KEY (COMPONENT_ID) REFERENCES SHIP_COMPONENT (COMPONENT_ID);

-- ----------------------------
-- Table structure for SHIP_COMPONENT_DRAWING
-- ----------------------------
DROP TABLE IF EXISTS SHIP_COMPONENT_DRAWING;
CREATE TABLE SHIP_COMPONENT_DRAWING (
  DRAWING_ID      CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  DRAWING_NAME    VARCHAR(200) COMMENT '图纸名称',
  DRAWING_NUMBER  VARCHAR(200) COMMENT '图号',
  COMPANY_ID      CHAR(36) COMMENT '企业ID',
  IS_DEL          CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME          TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='设备图纸';

-- ----------------------------
-- Table structure for SHIP_COMPONENT_PRODUCT_DRAWING
-- ----------------------------
DROP TABLE IF EXISTS SHIP_COMPONENT_PRODUCT_DRAWING;
CREATE TABLE SHIP_COMPONENT_PRODUCT_DRAWING (
  SPARE_BUSINESS_ID CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  BUSINESS_ID       CHAR(36) COMMENT '设备或产品ID',
  DRAWING_ID        CHAR(36) NOT NULL COMMENT '图纸ID',
  BUSINESS_TYPE     CHAR(1) COMMENT '类型，1 设备；2 产品',
  SHIP_ID           CHAR(36) COMMENT '船舶ID',
  COMPANY_ID        CHAR(36) COMMENT '企业ID',
  IS_DEL            CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME            TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='设备图纸关系表';
ALTER TABLE SHIP_COMPONENT_PRODUCT_DRAWING ADD CONSTRAINT FK_SHIP_COMPONENT_PRODUCT_DRAWING_SHIP FOREIGN KEY (SHIP_ID) REFERENCES SYS_SHIPINFO (SHIP_ID);
ALTER TABLE SHIP_COMPONENT_PRODUCT_DRAWING ADD CONSTRAINT FK_SHIP_COMPONENT_PRODUCT_DRAWING_DRAWING FOREIGN KEY (DRAWING_ID) REFERENCES SHIP_COMPONENT_DRAWING (DRAWING_ID);

-- ----------------------------
-- Table structure for ship_counter
-- ----------------------------
DROP TABLE IF EXISTS SHIP_COUNTER;
CREATE TABLE SHIP_COUNTER (
  COUNTER_ID    CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  COUNTER_CODE  VARCHAR(500) COMMENT '计数器编码',
  COUNTER_NAME  VARCHAR(500) COMMENT '计数器名称',
  COUNTER_RATE  DECIMAL(8,2) COMMENT '计数器运转率',
  SORTID        INTEGER(11) COMMENT '序号',
  COMPANY_ID    CHAR(36) COMMENT '企业ID',
  IS_DEL        CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME        TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间',
  SHIP_ID       CHAR(36) COMMENT '船舶ID',
  METER_VALUE   DECIMAL(18,4) COMMENT '总表值'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='船舶计数器表';
ALTER TABLE SHIP_COUNTER ADD CONSTRAINT FK_SHIP_COUNTER_SHIP FOREIGN KEY (SHIP_ID) REFERENCES SYS_SHIPINFO (SHIP_ID);

-- ----------------------------
-- Table structure for SHIP_COUNTER_METER
-- ----------------------------
DROP TABLE IF EXISTS SHIP_COUNTER_METER;
CREATE TABLE SHIP_COUNTER_METER (
  METER_ID        CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  COUNTER_ID      CHAR(36) COMMENT '计数器ID',
  RECORD_TYPE     CHAR(1) COMMENT '表值类型，1 总表值；2 增量值',
  METER_TYPE      CHAR(1) COMMENT '记录方式，1 手动；2 自动；3 采集',
  INCREMENT_VALUE DECIMAL(18,4) COMMENT '计数器值增量',
  METER_VALUE     DECIMAL(18,4) COMMENT '计数器总表值',
  METER_TIME      DATETIME NOT NULL DEFAULT '0000-00-00 00:00:00' COMMENT '计数器抄表时间',
  SHIP_ID         CHAR(36) COMMENT '船舶ID',
  COMPANY_ID      CHAR(36) COMMENT '企业ID',
  IS_DEL          CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME          TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间',
  READ_USER       VARCHAR(500) COMMENT '抄表人'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='计数器的值';
ALTER TABLE SHIP_COUNTER_METER ADD CONSTRAINT FK_SHIP_COUNTER_METER_COUNTER FOREIGN KEY (COUNTER_ID) REFERENCES SHIP_COUNTER (COUNTER_ID);

-- ----------------------------
-- Table structure for SHIP_COMPONENT_COUNTER
-- ----------------------------
DROP TABLE IF EXISTS SHIP_COMPONENT_COUNTER;
CREATE TABLE SHIP_COMPONENT_COUNTER (
  RELATION_ID   CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  COUNTER_ID    CHAR(36) COMMENT '计数器ID',
  COMPONENT_ID  CHAR(36) COMMENT '设备ID',
  SHIP_ID       CHAR(36) COMMENT '船舶ID',
  COMPANY_ID    CHAR(36) COMMENT '企业ID',
  IS_DEL        CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME        TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间',
  STATUS        CHAR(1) COMMENT '状态，1 使用；2 停用'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='设备与计数器关系表';
ALTER TABLE SHIP_COMPONENT_COUNTER ADD CONSTRAINT FK_SHIP_COMPONENT_COUNTER_COMPONENT FOREIGN KEY (COMPONENT_ID) REFERENCES SHIP_COMPONENT (COMPONENT_ID);
ALTER TABLE SHIP_COMPONENT_COUNTER ADD CONSTRAINT FK_SHIP_COMPONENT_COUNTER_COUNTER FOREIGN KEY (COUNTER_ID) REFERENCES SHIP_COUNTER (COUNTER_ID);

-- ----------------------------
-- Table structure for SHIP_SPARE
-- ----------------------------
DROP TABLE IF EXISTS SHIP_SPARE;
CREATE TABLE SHIP_SPARE (
  SPARE_ID    CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  SPARE_CODE  VARCHAR(500) COMMENT '编码',
  SPARE_CNAME VARCHAR(500) COMMENT '中文名称',
  SPARE_ENAME VARCHAR(500) COMMENT '英文名称',
  SPARE_SPEC  VARCHAR(500) COMMENT '规格',
  SPARE_MODEL VARCHAR(500) COMMENT '型号',
  UNIT_NAME   VARCHAR(500) COMMENT '单位',
  SPARE_MEMO  VARCHAR(2000) COMMENT '参数',
  IS_CRITICAL CHAR(1) COMMENT '是否关键备件，0 否；1 是',
  COMPANY_ID  CHAR(36) COMMENT '企业ID',
  IS_DEL      CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME      TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='船舶备件';

-- ----------------------------
-- Table structure for SHIP_SPARE_DRAWING
-- ----------------------------
DROP TABLE IF EXISTS SHIP_SPARE_DRAWING;
CREATE TABLE SHIP_SPARE_DRAWING (
  DRAWING_SPARE_ID  CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  SPARE_ID          CHAR(36) COMMENT '备件ID',
  DRAWING_ID        CHAR(36) COMMENT '图纸ID',
  COMPANY_ID        CHAR(36) COMMENT '企业ID',
  PICTURE_CODE      VARCHAR(200) COMMENT '在图编号',
  IS_DEL            CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME            TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='备件图纸关系表';
ALTER TABLE SHIP_SPARE_DRAWING ADD CONSTRAINT FK_SHIP_SPARE_DRAWING_SPARE FOREIGN KEY (SPARE_ID) REFERENCES SHIP_SPARE (SPARE_ID);
ALTER TABLE SHIP_SPARE_DRAWING ADD CONSTRAINT FK_SHIP_SPARE_DRAWING_DRAWING FOREIGN KEY (DRAWING_ID) REFERENCES SHIP_COMPONENT_DRAWING (DRAWING_ID);

-- ----------------------------
-- Table structure for SHIP_COMPONENT_PRODUCT_SPARE
-- ----------------------------
DROP TABLE IF EXISTS SHIP_COMPONENT_PRODUCT_SPARE;
CREATE TABLE SHIP_COMPONENT_PRODUCT_SPARE (
  SPARE_BUSINESS_ID CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  BUSINESS_ID       CHAR(36) COMMENT '设备或产品ID',
  SPARE_ID          CHAR(36) COMMENT '备件ID',
  SHIP_ID           CHAR(36) COMMENT '船舶ID',
  COMPANY_ID        CHAR(36) COMMENT '企业ID',
  BUSINESS_TYPE     CHAR(1) COMMENT '类型，1 设备；2 产品',
  IS_DEL            CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME            TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='设备产品备件关系表';
ALTER TABLE SHIP_COMPONENT_PRODUCT_SPARE ADD CONSTRAINT FK_SHIP_COMPONENT_PRODUCT_SPARE_SHIP FOREIGN KEY (SHIP_ID) REFERENCES SYS_SHIPINFO (SHIP_ID);
ALTER TABLE SHIP_COMPONENT_PRODUCT_SPARE ADD CONSTRAINT FK_SHIP_COMPONENT_PRODUCT_SPARE_SPARE FOREIGN KEY (SPARE_ID) REFERENCES SHIP_SPARE (SPARE_ID);

-- maritime manage tables ----------------------------------------------------------------------------------------------

-- ----------------------------
-- Table structure for SHIP_VOYAGE_SCHEDULING
-- ----------------------------
DROP TABLE IF EXISTS SHIP_VOYAGE_SCHEDULING;
CREATE TABLE SHIP_VOYAGE_SCHEDULING (
  SCHEDULING_ID     CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  SHIP_ID           CHAR(36) COMMENT '船舶ID',
  SCHEDULING_NAME   VARCHAR(500) COMMENT '航次名称',
  SCHEDULING_CODE   VARCHAR(500) COMMENT '航次编码',
  SCHEDULING_LINE   VARCHAR(2000) COMMENT '航线',
  S_MOOR_PORT_TIME  TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00' COMMENT '起始港靠港时间',
  E_MOOR_PORT_TIME  TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00' COMMENT '目的港靠港时间',
  S_LEAVE_PORT_TIME TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00' COMMENT '起始港离港时间',
  E_LEAVE_PORT_TIME TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00' COMMENT '目的港离港时间',
  START_PORT        VARCHAR(500) COMMENT '出发港口',
  PURPOSE_PORT      VARCHAR(500) COMMENT '目的港口',
  START_PORT_ID     CHAR(36) COMMENT '出发港ID',
  PURPOSE_PORT_ID   CHAR(36) COMMENT '目的港ID',
  REMARK            VARCHAR(2000) COMMENT '备注',
  COMPANY_ID        CHAR(36) COMMENT '企业ID',
  IS_DEL            CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME            TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='航次计划表';
ALTER TABLE SHIP_VOYAGE_SCHEDULING ADD CONSTRAINT FK_SHIP_VOYAGE_SCHEDULING_SHIP FOREIGN KEY (SHIP_ID) REFERENCES SYS_SHIPINFO (SHIP_ID);
ALTER TABLE SHIP_VOYAGE_SCHEDULING ADD CONSTRAINT FK_SHIP_VOYAGE_SCHEDULING_START_PORT FOREIGN KEY (START_PORT_ID) REFERENCES SYS_PORT (PORT_ID);
ALTER TABLE SHIP_VOYAGE_SCHEDULING ADD CONSTRAINT FK_SHIP_VOYAGE_SCHEDULING_PURPOSE_PORT FOREIGN KEY (PURPOSE_PORT_ID) REFERENCES SYS_PORT (PORT_ID);

-- ----------------------------
-- Table structure for SHIP_VOYAGE_REACH
-- ----------------------------
DROP TABLE IF EXISTS SHIP_VOYAGE_REACH;
CREATE TABLE SHIP_VOYAGE_REACH (
  REACH_ID      CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  SCHEDULING_ID CHAR(36) NOT NULL COMMENT '航次计划ID',
  SHIP_ID       CHAR(36) COMMENT '船舶ID',
  REACH_TIME    DATETIME COMMENT '挂靠时间',
  REACH_PORT    VARCHAR(500) COMMENT '挂靠港口',
  REACH_PORT_ID CHAR(36) COMMENT '挂靠港ID',
  REMARK        VARCHAR(2000) COMMENT '备注',
  COMPANY_ID    CHAR(36) COMMENT '企业ID',
  IS_DEL        CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME        TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='航次挂靠港表';
ALTER TABLE SHIP_VOYAGE_REACH ADD CONSTRAINT FK_SHIP_VOYAGE_REACH_SHIP FOREIGN KEY (SHIP_ID) REFERENCES SYS_SHIPINFO (SHIP_ID);
ALTER TABLE SHIP_VOYAGE_REACH ADD CONSTRAINT FK_SHIP_VOYAGE_REACH_PORT FOREIGN KEY (REACH_PORT_ID) REFERENCES SYS_PORT (PORT_ID);
ALTER TABLE SHIP_VOYAGE_REACH ADD CONSTRAINT FK_SHIP_VOYAGE_REACH_SCHEDULING FOREIGN KEY (SCHEDULING_ID) REFERENCES SHIP_VOYAGE_SCHEDULING (SCHEDULING_ID);

-- ----------------------------
-- Table structure for SHIP_SAFETY_CHECKINFO
-- ----------------------------
DROP TABLE IF EXISTS SHIP_SAFETY_CHECKINFO;
CREATE TABLE SHIP_SAFETY_CHECKINFO (
  CHECKINFO_ID          CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  SCHEDULING_ID         CHAR(36) COMMENT '航次计划ID',
  DEP_ID                CHAR(36) COMMENT '部门ID（可存船端部门）',
  SHIP_ID               CHAR(36) COMMENT '船舶ID',
  CHECKINFO_AREA        CHAR(1) NOT NULL COMMENT '所属机构，1 岸基；2 船端；9 其他，当是岸基的时候航次ID和船舶ID可以不用填写',
  CHECKINFO_TYPE        CHAR(36) NOT NULL COMMENT '检查类型，建立数据字典；PSC、FSC、单位自查、内审、外审等',
  CHECKINFO_DATE        DATETIME NOT NULL COMMENT '检查日期',
  CHECKINFO_UNIT        VARCHAR(200) NOT NULL COMMENT '检查单位',
  CHECKINFO_PERSON_NAME VARCHAR(200) NOT NULL COMMENT '检查人姓名',
  CREATE_PERSON_NAME    VARCHAR(200) NOT NULL COMMENT '创建人姓名（读系统填写人）',
  CHECKINFO_ADDRESS     VARCHAR(200) COMMENT '检查地点或检查港口',
  REMARK                VARCHAR(2000) COMMENT '备注',
  STATUS                VARCHAR(200) COMMENT '状态（未上报，已上报）',
  COMPANY_ID            CHAR(36) NOT NULL COMMENT '企业ID',
  IS_DEL                CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME                TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='安全检查表';
ALTER TABLE SHIP_SAFETY_CHECKINFO ADD CONSTRAINT FK_SHIP_SAFETY_CHECKINFO_SHIP FOREIGN KEY (SHIP_ID) REFERENCES SYS_SHIPINFO (SHIP_ID);
ALTER TABLE SHIP_SAFETY_CHECKINFO ADD CONSTRAINT FK_SHIP_SAFETY_CHECKINFO_DEPARTMENT FOREIGN KEY (DEP_ID) REFERENCES SYS_DEPARTMENT (DEPARTMENT_ID);
ALTER TABLE SHIP_SAFETY_CHECKINFO ADD CONSTRAINT FK_SHIP_SAFETY_CHECKINFO_SCHEDULING FOREIGN KEY (SCHEDULING_ID) REFERENCES SHIP_VOYAGE_SCHEDULING (SCHEDULING_ID);

-- ----------------------------
-- Table structure for SHIP_SAFETY_HIDDEN_DANGER
-- ----------------------------
DROP TABLE IF EXISTS SHIP_SAFETY_HIDDEN_DANGER;
CREATE TABLE SHIP_SAFETY_HIDDEN_DANGER (
  DANGER_ID           CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  CHECKINFO_ID        CHAR(36) NOT NULL COMMENT '检查ID',
  DANGER_CODE         VARCHAR(200) NOT NULL COMMENT '隐患编码（系统自动）',
  DANGER_CATEGORY     CHAR(36) NOT NULL COMMENT '隐患分类岸基和船端分别读取不同的字典',
  DANGER_INFO         VARCHAR(1000) NOT NULL COMMENT '隐患描述',
  DANGER_LEVEL        CHAR(1) NOT NULL COMMENT '隐患级别，1 一般；2 重大',
  DANGER_STATUS       VARCHAR(200) NOT NULL COMMENT '隐患状态(读取工作流状态)',
  RECTIFY_STATUS      VARCHAR(200) NOT NULL COMMENT '整改状态，1 未整改；2 整改中；3 已整改；4 延期整改',
  DANGER_CREATEDATE   DATETIME COMMENT '隐患录入时间（自动读取系统时间）',
  DELAY_REASON        VARCHAR(1000) COMMENT '延期说明',
  DELAY_DATE          DATETIME COMMENT '延期日期',
  DANGER_DUTY_POSTID  CHAR(36) COMMENT '隐患责任岗ID',
  DANGER_DUTY_USERID  CHAR(36) COMMENT '隐患责任人ID取PERSON_ID不是USER_ID',
  DANGER_DUTY_USER    VARCHAR(200) COMMENT '责任人',
  REMARK              VARCHAR(2000) COMMENT '备注',
  ORIGIN              CHAR(1) NOT NULL COMMENT '来源，1：岸基；2：船舶端',
  SHIP_ID             CHAR(36) COMMENT '船舶ID',
  COMPANY_ID          CHAR(36) NOT NULL COMMENT '企业ID',
  IS_DEL              CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME              TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='隐患信息表';
ALTER TABLE SHIP_SAFETY_HIDDEN_DANGER ADD CONSTRAINT FK_SHIP_SAFETY_HIDDEN_DANGER_SHIP FOREIGN KEY (SHIP_ID) REFERENCES SYS_SHIPINFO (SHIP_ID);
ALTER TABLE SHIP_SAFETY_HIDDEN_DANGER ADD CONSTRAINT FK_SHIP_SAFETY_HIDDEN_DANGER_PERSON FOREIGN KEY (DANGER_DUTY_USERID) REFERENCES SYS_PERSON (PERSON_ID);
ALTER TABLE SHIP_SAFETY_HIDDEN_DANGER ADD CONSTRAINT FK_SHIP_SAFETY_HIDDEN_DANGER_CHECK FOREIGN KEY (CHECKINFO_ID) REFERENCES SHIP_SAFETY_CHECKINFO (CHECKINFO_ID);

-- ----------------------------
-- Table structure for SHIP_SAFETY_RECTIFY
-- ----------------------------
DROP TABLE IF EXISTS SHIP_SAFETY_RECTIFY;
CREATE TABLE SHIP_SAFETY_RECTIFY (
  RECTIFY_ID        CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  DANGER_ID         CHAR(36) NOT NULL COMMENT '隐患ID',
  CHECKINFO_ID      CHAR(36) NOT NULL COMMENT '检查ID',
  RECTIFY_DEMAND    VARCHAR(1000) COMMENT '整改要求',
  RECTIFY_ACTION    VARCHAR(1000) COMMENT '整改措施',
  RECTIFY_PLAN_DATE DATETIME COMMENT '整改要求日期',
  RECTIFY_COMP_DATE DATETIME COMMENT '整改完成日期',
  REVIEW_CHECK_DATE DATETIME COMMENT '复查日期',
  REVIEW_CHECK_USER VARCHAR(200) COMMENT '复查人',
  VERIFY_USER       VARCHAR(200) COMMENT '确认人',
  VERIFY_DATE       DATETIME COMMENT '确认人时间',
  REMARK            VARCHAR(2000) COMMENT '备注',
  ORIGIN            CHAR(1) NOT NULL COMMENT '来源，1 岸基；2 船舶端',
  SHIP_ID           CHAR(36) COMMENT '船舶ID',
  COMPANY_ID        CHAR(36) NOT NULL COMMENT '企业ID',
  IS_DEL            CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME            TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='整改信息表';
ALTER TABLE SHIP_SAFETY_RECTIFY ADD CONSTRAINT FK_SHIP_SAFETY_RECTIFY_SHIP FOREIGN KEY (SHIP_ID) REFERENCES SYS_SHIPINFO (SHIP_ID);
ALTER TABLE SHIP_SAFETY_RECTIFY ADD CONSTRAINT FK_SHIP_SAFETY_RECTIFY_CHECK FOREIGN KEY (CHECKINFO_ID) REFERENCES SHIP_SAFETY_CHECKINFO (CHECKINFO_ID);
ALTER TABLE SHIP_SAFETY_RECTIFY ADD CONSTRAINT FK_SHIP_SAFETY_RECTIFY_DANGER FOREIGN KEY (DANGER_ID) REFERENCES SHIP_SAFETY_HIDDEN_DANGER (DANGER_ID);

-- ----------------------------
-- Table structure for SHIP_SAFETY_RECTIFY_RECORD
-- ----------------------------
DROP TABLE IF EXISTS SHIP_SAFETY_RECTIFY_RECORD;
CREATE TABLE SHIP_SAFETY_RECTIFY_RECORD (
  RECORD_ID       CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  RECTIFY_ID      CHAR(36) NOT NULL COMMENT '整改ID',
  DANGER_ID       CHAR(36) NOT NULL COMMENT '隐患ID',
  CHECKINFO_ID    CHAR(36) NOT NULL COMMENT '检查ID',
  RECORD_CONTENT  VARCHAR(2000) COMMENT '过程记录(支持附件)',
  REMARK          VARCHAR(2000) COMMENT '备注',
  CREATE_DATE     DATETIME COMMENT '创建日期',
  CREATOR         VARCHAR(200) COMMENT '创建人',
  CREATE_USER_ID  CHAR(36) COMMENT '创建人ID',
  ORIGIN          CHAR(1) NOT NULL COMMENT '来源1岸2船',
  SHIP_ID         CHAR(36) COMMENT '船舶ID',
  COMPANY_ID      CHAR(36) NOT NULL COMMENT '企业ID',
  IS_DEL          CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME          TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='整改信息明细表';
ALTER TABLE SHIP_SAFETY_RECTIFY_RECORD ADD CONSTRAINT FK_SHIP_SAFETY_RECTIFY_RECORD_SHIP FOREIGN KEY (SHIP_ID) REFERENCES SYS_SHIPINFO (SHIP_ID);
ALTER TABLE SHIP_SAFETY_RECTIFY_RECORD ADD CONSTRAINT FK_SHIP_SAFETY_RECTIFY_RECORD_CHECK FOREIGN KEY (CHECKINFO_ID) REFERENCES SHIP_SAFETY_CHECKINFO (CHECKINFO_ID);
ALTER TABLE SHIP_SAFETY_RECTIFY_RECORD ADD CONSTRAINT FK_SHIP_SAFETY_RECTIFY_RECORD_DANGER FOREIGN KEY (DANGER_ID) REFERENCES SHIP_SAFETY_HIDDEN_DANGER (DANGER_ID);
ALTER TABLE SHIP_SAFETY_RECTIFY_RECORD ADD CONSTRAINT FK_SHIP_SAFETY_RECTIFY_RECORD_RECTIFY FOREIGN KEY (RECTIFY_ID) REFERENCES SHIP_SAFETY_RECTIFY (RECTIFY_ID);

-- maintenance manage tables -------------------------------------------------------------------------------------------

-- ----------------------------
-- Table structure for SHIP_MAINTENANCE_SCHEME
-- ----------------------------
DROP TABLE IF EXISTS SHIP_MAINTENANCE_SCHEME;
CREATE TABLE SHIP_MAINTENANCE_SCHEME (
  SCHEME_ID             CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  SCHEME_MONTH          CHAR(2) COMMENT '保养计划月份',
  SCHEME_QUARTER        CHAR(2) COMMENT '保养计划季度',
  SCHEME_YEAR           CHAR(4) COMMENT '保养计划年份',
  APPROVAL_TYPE         CHAR(1) COMMENT '审批类型，1 五年；2 年度；3 季度；4 月度',
  SCHEME_APPROVAL_DATE  DATETIME DEFAULT '0000-00-00 00:00:00' COMMENT '保养计划审核时间',
  APPROVAL_STATUS       VARCHAR(200) COMMENT '单据申请状态：草稿、未发起（已经创建流程）、等待【xxx】审批、审批通过、审批未通过',
  IS_LAND               CHAR(1) COMMENT '单据提交来源，1 岸基；2 船舶端',
  WF_INST_ID            CHAR(36) COMMENT '工作流实例ID',
  CAPTAIN               VARCHAR(500) COMMENT '船长',
  CHIEFENGINEE          VARCHAR(500) COMMENT '轮机长',
  CHIEFMATE             VARCHAR(500) COMMENT '大副',
  REMARK                VARCHAR(2000) COMMENT '备注',
  POST_ID               CHAR(36) COMMENT '岗位ID',
  PERSON_ID             CHAR(36) COMMENT '用户ID',
  SHIP_ID               CHAR(36) COMMENT '船舶ID',
  DEPARTMENT_ID         CHAR(36) COMMENT '部门ID',
  COMPANY_ID            CHAR(36) COMMENT '企业ID',
  IS_DEL                CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME                TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='维护保养计划业务主表，与明细表配合使用';
ALTER TABLE SHIP_MAINTENANCE_SCHEME ADD CONSTRAINT FK_SHIP_MAINTENANCE_SCHEME_SHIP FOREIGN KEY (SHIP_ID) REFERENCES SYS_SHIPINFO (SHIP_ID);
ALTER TABLE SHIP_MAINTENANCE_SCHEME ADD CONSTRAINT FK_SHIP_MAINTENANCE_SCHEME_DEPARTMENT FOREIGN KEY (DEPARTMENT_ID) REFERENCES SYS_DEPARTMENT (DEPARTMENT_ID);
ALTER TABLE SHIP_MAINTENANCE_SCHEME ADD CONSTRAINT FK_SHIP_MAINTENANCE_SCHEME_POST FOREIGN KEY (POST_ID) REFERENCES SYS_POST (POST_ID);
ALTER TABLE SHIP_MAINTENANCE_SCHEME ADD CONSTRAINT FK_SHIP_MAINTENANCE_SCHEME_PERSON FOREIGN KEY (PERSON_ID) REFERENCES SYS_PERSON (PERSON_ID);

-- ----------------------------
-- Table structure for SHIP_MAINTENANCE_SCHEME_LTP
-- ----------------------------
DROP TABLE IF EXISTS SHIP_MAINTENANCE_SCHEME_LTP;
CREATE TABLE SHIP_MAINTENANCE_SCHEME_LTP (
  LTP_SCHEME_ID     CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  SCHEME_ID         CHAR(36) COMMENT '计划主表ID',
  COMPONENT_ID      CHAR(36) COMMENT '设备ID',
  PMS_CODE          VARCHAR(500) COMMENT 'PMS编号',
  CMS_CODE          VARCHAR(500) COMMENT 'CMS编号',
  PMS_GRADE         CHAR(1) COMMENT '维护保养等级',
  SCHEME_CODE       VARCHAR(500) COMMENT '工作信息编码',
  SCHEME_TITLE      VARCHAR(500) COMMENT '工作信息标题',
  SCHEME_CONTENT    VARCHAR(2000) COMMENT '工作信息内容',
  SCHEME_TYPE       CHAR(1) COMMENT '工作信息类型，1 定期；2 定时；3 定期&定时；4 视情况',
  REGULAR_CYCLE     DECIMAL(18,4) COMMENT '定期周期',
  REGULAR_UNIT      VARCHAR(500) COMMENT '定期单位日月年',
  TIMING_CYCLE      DECIMAL(18,4) COMMENT '定时周期',
  TIMING_UNIT       VARCHAR(500) COMMENT '定时单位默认小时',
  PRINCIPAL_POST_ID CHAR(36) COMMENT '负责人岗位ID',
  CONFIRM_POST_ID   CHAR(36) COMMENT '确认人岗位ID',
  ORIGIN            CHAR(1) COMMENT '来源，1 岸端制定；2 船端；3 上一年',
  JANUARY           CHAR(1) COMMENT '一月',
  FEBRUARY          CHAR(1) COMMENT '二月',
  MARCH             CHAR(1) COMMENT '三月',
  APRIL             CHAR(1) COMMENT '四月',
  MAY               CHAR(1) COMMENT '五月',
  JUNE              CHAR(1) COMMENT '六月',
  JULY              CHAR(1) COMMENT '七月',
  AUGUEST           CHAR(1) COMMENT '八月',
  SEPTEMBER         CHAR(1) COMMENT '九月',
  OCTOBER           CHAR(1) COMMENT '十月',
  NOVEMBER          CHAR(1) COMMENT '十一月',
  DECEMBER          CHAR(1) COMMENT '十二月',
  REMARK            VARCHAR(2000) COMMENT '备注',
  COMPANY_ID        CHAR(36) COMMENT '企业ID',
  SHIP_ID           CHAR(36) COMMENT '船舶ID',
  IS_DEL            CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME            TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间',
  PLANNED_EXEC_DATE DATETIME COMMENT '计划执行日期',
  CURRENT_VALUE     DECIMAL(18,4) COMMENT '当前表值，定时逻辑必填'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='当前表值，定时逻辑必填';
ALTER TABLE SHIP_MAINTENANCE_SCHEME_LTP ADD CONSTRAINT FK_SHIP_MAINTENANCE_SCHEME_LTP_SCHEME FOREIGN KEY (SCHEME_ID) REFERENCES SHIP_MAINTENANCE_SCHEME (SCHEME_ID);
ALTER TABLE SHIP_MAINTENANCE_SCHEME_LTP ADD CONSTRAINT FK_SHIP_MAINTENANCE_SCHEME_LTP_COMPONENT FOREIGN KEY (COMPONENT_ID) REFERENCES SHIP_COMPONENT (COMPONENT_ID);
ALTER TABLE SHIP_MAINTENANCE_SCHEME_LTP ADD CONSTRAINT FK_SHIP_MAINTENANCE_SCHEME_LTP_PRINCIPAL_POST FOREIGN KEY (PRINCIPAL_POST_ID) REFERENCES SYS_POST (POST_ID);
ALTER TABLE SHIP_MAINTENANCE_SCHEME_LTP ADD CONSTRAINT FK_SHIP_MAINTENANCE_SCHEME_LTP_CONFIRM_POST FOREIGN KEY (CONFIRM_POST_ID) REFERENCES SYS_POST (POST_ID);

-- ----------------------------
-- Table structure for SHIP_MAINTENANCE
-- ----------------------------
DROP TABLE IF EXISTS SHIP_MAINTENANCE;
CREATE TABLE SHIP_MAINTENANCE (
  MAINTENANCE_ID        CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  SCHEME_ID             CHAR(36) COMMENT '保养计划ID',
  COMPONENT_ID          CHAR(36) COMMENT '设备ID',
  PARENT_ID             CHAR(36) COMMENT '工单的父ID',
  PMS_CODE              VARCHAR(500) COMMENT 'PMS编号',
  CMS_CODE              VARCHAR(500) COMMENT 'CMS编号',
  PMS_GRADE             CHAR(1) COMMENT '维护保养等级A/B/C/D/E/F/G/H数据来源SHIP_PMS_GRADE表',
  MAINTENANCE_CODE      VARCHAR(500) COMMENT '工单信息编码',
  MAINTENANCE_TITLE     VARCHAR(500) COMMENT '工单信息标题',
  MAINTENANCE_CONTENT   VARCHAR(2000) COMMENT '工单信息内容',
  MAINTENANCE_TYPE      CHAR(1) COMMENT '工单信息类型，1 定期；2 定时；3 定期&定时；4 视情况',
  PLANNED_EXEC_VALUE    DECIMAL(18,4) COMMENT '计划执行表值(定时)',
  PLANNED_EXEC_DATE     DATETIME COMMENT '计划执行日期',
  REGULAR_CYCLE         DECIMAL(18,4) COMMENT '定期周期',
  REGULAR_UNIT          VARCHAR(500) COMMENT '定期单位日月年',
  REGULAR_AFTER_WINDOW  DECIMAL(8,2) COMMENT '定期后窗口',
  REGULAR_BEFOR_WINDOW  DECIMAL(8,2) COMMENT '定期前窗口',
  REGULAR_WINDOW_UNIT   VARCHAR(500) COMMENT '定期窗口单位日月年',
  TIMING_CYCLE          DECIMAL(18,4) COMMENT '定时周期',
  TIMING_UNIT           VARCHAR(500) COMMENT '定时单位默认小时',
  TIMING_AFTER_WINDOW   DECIMAL(18,4) COMMENT '定时后窗口',
  TIMING_BEFOR_WINDOW   DECIMAL(18,4) COMMENT '定时前窗口',
  TIMING_WINDOW_UNIT    VARCHAR(500) COMMENT '定时窗口单位默认小时',
  DEPARTMENT_ID         CHAR(36) COMMENT '部门ID',
  PRINCIPAL_POST_ID     CHAR(36) COMMENT '负责人岗位ID',
  CONFIRM_POST_ID       CHAR(36) COMMENT '确认人岗位ID',
  MAINTENANCE_PROPERTY  CHAR(1) COMMENT '保养性质，1 正常；2 检验；3 修理；4 PSC；5 FSC',
  ORIGIN                CHAR(1) COMMENT '来源，1 年度或五年计划；2 岸基新增；3 船端新增；4 PSC；5 FSC；6 修理',
  CHECK_STATUS          CHAR(1) COMMENT '计划审核状态，1 年度计划审核完成；2 月度计划审核完成；9 月度计划提交',
  MAINTENANCE_STATUS    CHAR(2) COMMENT '保养状态，01 计划；02 停止；03 提前完成；04 按时完成(前)；05 按时完成；06 按时完成(后)；07 超期完成；08 免做完成；09 推迟完成',
  REMARK                VARCHAR(2000) COMMENT '备注',
  SHIP_ID               CHAR(36) COMMENT '船舶ID',
  COMPANY_ID            CHAR(36) COMMENT '企业ID',
  IS_DEL                CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME                TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='维护保养表';
ALTER TABLE SHIP_MAINTENANCE ADD CONSTRAINT FK_SHIP_MAINTENANCE_SHIP FOREIGN KEY (SHIP_ID) REFERENCES SYS_SHIPINFO (SHIP_ID);
ALTER TABLE SHIP_MAINTENANCE ADD CONSTRAINT FK_SHIP_MAINTENANCE_DEPARTMENT FOREIGN KEY (DEPARTMENT_ID) REFERENCES SYS_DEPARTMENT (DEPARTMENT_ID);
ALTER TABLE SHIP_MAINTENANCE ADD CONSTRAINT FK_SHIP_MAINTENANCE_PRINCIPAL_POST FOREIGN KEY (PRINCIPAL_POST_ID) REFERENCES SYS_POST (POST_ID);
ALTER TABLE SHIP_MAINTENANCE ADD CONSTRAINT FK_SHIP_MAINTENANCE_CONFIRM_POST FOREIGN KEY (CONFIRM_POST_ID) REFERENCES SYS_POST (POST_ID);
ALTER TABLE SHIP_MAINTENANCE ADD CONSTRAINT FK_SHIP_MAINTENANCE_SCHEME FOREIGN KEY (SCHEME_ID) REFERENCES SHIP_MAINTENANCE_SCHEME (SCHEME_ID);
ALTER TABLE SHIP_MAINTENANCE ADD CONSTRAINT FK_SHIP_MAINTENANCE_COMPONENT FOREIGN KEY (COMPONENT_ID) REFERENCES SHIP_COMPONENT (COMPONENT_ID);

-- ----------------------------
-- Table structure for SHIP_MAINTENANCE_SCHEME_MONTH
-- ----------------------------
DROP TABLE IF EXISTS SHIP_MAINTENANCE_SCHEME_MONTH;
CREATE TABLE SHIP_MAINTENANCE_SCHEME_MONTH (
  MONTH_SCHEME_ID     CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  SCHEME_ID           CHAR(36) COMMENT '保养计划主表ID',
  MAINTENANCE_ID      CHAR(36) COMMENT '保养ID',
  COMPONENT_ID        CHAR(36) COMMENT '设备ID',
  PMS_CODE            VARCHAR(500) COMMENT 'PMS编号',
  CMS_CODE            VARCHAR(500) COMMENT 'CMS编号',
  PMS_GRADE           CHAR(1) COMMENT '维护保养等级',
  MAINTENANCE_CODE    VARCHAR(500) COMMENT '工作信息编码',
  MAINTENANCE_TITLE   VARCHAR(500) COMMENT '工作信息标题',
  MAINTENANCE_CONTENT VARCHAR(2000) COMMENT '工作信息内容',
  MAINTENANCE_TYPE    CHAR(1) COMMENT '工作信息类型，1 定期；2 定时；3 定期&定时；4 视情况',
  REGULAR_CYCLE       DECIMAL(18,4) COMMENT '定期周期',
  REGULAR_UNIT        VARCHAR(500) COMMENT '定期单位日月年',
  TIMING_CYCLE        DECIMAL(18,4) COMMENT '定时周期',
  TIMING_UNIT         VARCHAR(500) COMMENT '定时单位默认小时',
  PRINCIPAL_POST_ID   CHAR(36) COMMENT '负责人岗位ID',
  CONFIRM_POST_ID     CHAR(36) COMMENT '确认人岗位ID',
  ORIGIN              CHAR(1) COMMENT '来源，1 计划，2 新增',
  REMARK              VARCHAR(2000) COMMENT '备注',
  COMPANY_ID          CHAR(36) COMMENT '企业ID',
  IS_DEL              CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME              TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间',
  SHIP_ID             CHAR(36) NOT NULL COMMENT '船舶ID'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='月度计划明细表';
ALTER TABLE SHIP_MAINTENANCE_SCHEME_MONTH ADD CONSTRAINT FK_SHIP_MAINTENANCE_SCHEME_MONTH_SHIP FOREIGN KEY (SHIP_ID) REFERENCES SYS_SHIPINFO (SHIP_ID);
ALTER TABLE SHIP_MAINTENANCE_SCHEME_MONTH ADD CONSTRAINT FK_SHIP_MAINTENANCE_SCHEME_MONTH_SCHEME FOREIGN KEY (SCHEME_ID) REFERENCES SHIP_MAINTENANCE_SCHEME (SCHEME_ID);
ALTER TABLE SHIP_MAINTENANCE_SCHEME_MONTH ADD CONSTRAINT FK_SHIP_MAINTENANCE_SCHEME_MONTH_MAINTENANCE FOREIGN KEY (MAINTENANCE_ID) REFERENCES SHIP_MAINTENANCE (MAINTENANCE_ID);
ALTER TABLE SHIP_MAINTENANCE_SCHEME_MONTH ADD CONSTRAINT FK_SHIP_MAINTENANCE_SCHEME_MONTH_COMPONENT FOREIGN KEY (COMPONENT_ID) REFERENCES SHIP_COMPONENT (COMPONENT_ID);
ALTER TABLE SHIP_MAINTENANCE_SCHEME_MONTH ADD CONSTRAINT FK_SHIP_MAINTENANCE_SCHEME_MONTH_PRINCIPAL_POST FOREIGN KEY (PRINCIPAL_POST_ID) REFERENCES SYS_POST (POST_ID);
ALTER TABLE SHIP_MAINTENANCE_SCHEME_MONTH ADD CONSTRAINT FK_SHIP_MAINTENANCE_SCHEME_MONTH_CONFIRM_POST FOREIGN KEY (CONFIRM_POST_ID) REFERENCES SYS_POST (POST_ID);

-- ----------------------------
-- Table structure for SHIP_MAINTENANCE_COMPLETE
-- ----------------------------
DROP TABLE IF EXISTS SHIP_MAINTENANCE_COMPLETE;
CREATE TABLE SHIP_MAINTENANCE_COMPLETE (
  COMPLETE_ID       CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  MAINTENANCE_ID    CHAR(36) COMMENT '保养ID',
  COMPLETE_DATE     DATETIME NOT NULL,
  COMPLETE_VALUE    DECIMAL(18,4),
  COMPLETE_PERSON   VARCHAR(500) COMMENT '保养完工人',
  SURE_PERSON       VARCHAR(500) COMMENT '完工确认人',
  SURE_USER_ID      VARCHAR(500) COMMENT '完工确认人ID可以是13状态',
  COMPLETE_CONTENT  VARCHAR(2000) COMMENT '保养完工内容若是是13状态此字段必须填写',
  COMPLETE_TYPE     CHAR(2) COMMENT '完工类型，03 提前完成；04 按时完成(前)；05 按时完成；06 按时完成(后)；07 超期完成；08 免做完成；09 推迟完成',
  REMARK            VARCHAR(2000) COMMENT '备注',
  COMPANY_ID        CHAR(36) COMMENT '企业ID',
  SHIP_ID           CHAR(36) COMMENT '船舶ID',
  IS_DEL            CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME            TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间',
  COMPLETE_USER_ID  CHAR(36) COMMENT '保养完工人ID',
  SURE_DATE         DATETIME COMMENT '确认时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='完工记录表';
ALTER TABLE SHIP_MAINTENANCE_COMPLETE ADD CONSTRAINT FK_SHIP_MAINTENANCE_COMPLETE_SHIP FOREIGN KEY (SHIP_ID) REFERENCES SYS_SHIPINFO (SHIP_ID);
ALTER TABLE SHIP_MAINTENANCE_COMPLETE ADD CONSTRAINT FK_SHIP_MAINTENANCE_COMPLETE_USER FOREIGN KEY (COMPLETE_USER_ID) REFERENCES SYS_USER (USER_ID);
ALTER TABLE SHIP_MAINTENANCE_COMPLETE ADD CONSTRAINT FK_SHIP_MAINTENANCE_COMPLETE_MAINTENANCE FOREIGN KEY (MAINTENANCE_ID) REFERENCES SHIP_MAINTENANCE (MAINTENANCE_ID);

-- ----------------------------
-- Table structure for SHIP_MAINTENANCE_DELAY
-- ----------------------------
DROP TABLE IF EXISTS SHIP_MAINTENANCE_DELAY;
CREATE TABLE SHIP_MAINTENANCE_DELAY (
  DELAY_ID            CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  DELAY_APPLAY_POSTID CHAR(36) COMMENT '申请人岗位',
  DELAY_APPLAY_USERID CHAR(36) COMMENT '申请人ID',
  DELAY_APPLAY_PERSON VARCHAR(500) COMMENT '申请人姓名',
  APPLY_TYPE          CHAR(1) NOT NULL COMMENT '申请类型，1 免做；2 提前；3 延误',
  AUDIT_USER_ID       CHAR(36) COMMENT '部门长审核人ID(船)',
  AUDIT_PERSON        VARCHAR(500) COMMENT '部门长审核人姓名(船)',
  DELAY_REASON        VARCHAR(2000) COMMENT '申请原因',
  REMARK              VARCHAR(2000) COMMENT '备注',
  STATUS              CHAR(2) COMMENT '状态，10 申请中；20 部门长拒绝；30 部门长同意；40 机务主管拒绝；50 机务主管同意',
  COMPANY_ID          CHAR(36) COMMENT '企业ID',
  SHIP_ID             CHAR(36) COMMENT '船舶ID',
  IS_DEL              CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME              TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='免做、延误申请表';
ALTER TABLE SHIP_MAINTENANCE_DELAY ADD CONSTRAINT FK_SHIP_MAINTENANCE_DELAY_SHIP FOREIGN KEY (SHIP_ID) REFERENCES SYS_SHIPINFO (SHIP_ID);
ALTER TABLE SHIP_MAINTENANCE_DELAY ADD CONSTRAINT FK_SHIP_MAINTENANCE_DELAY_POST FOREIGN KEY (DELAY_APPLAY_POSTID) REFERENCES SYS_POST (POST_ID);
ALTER TABLE SHIP_MAINTENANCE_DELAY ADD CONSTRAINT FK_SHIP_MAINTENANCE_DELAY_APPLY_USER FOREIGN KEY (DELAY_APPLAY_USERID) REFERENCES SYS_USER (USER_ID);
ALTER TABLE SHIP_MAINTENANCE_DELAY ADD CONSTRAINT FK_SHIP_MAINTENANCE_DELAY_AUDIT_USER FOREIGN KEY (AUDIT_USER_ID) REFERENCES SYS_USER (USER_ID);

-- ----------------------------
-- Table structure for SHIP_MAINTENANCE_RELATION_DELAY
-- ----------------------------
DROP TABLE IF EXISTS SHIP_MAINTENANCE_RELATION_DELAY;
CREATE TABLE SHIP_MAINTENANCE_RELATION_DELAY (
  RELATION_DELAY_ID CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  DELAY_ID          CHAR(36) NOT NULL COMMENT '延误申请ID',
  MAINTENANCE_ID    CHAR(36) COMMENT '维护保养ID',
  COMPANY_ID        CHAR(36) COMMENT '企业ID',
  SHIP_ID           CHAR(36) COMMENT '船舶ID',
  IS_DEL            CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME            TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='免做、延误申请与保养关系表';
ALTER TABLE SHIP_MAINTENANCE_RELATION_DELAY ADD CONSTRAINT FK_SHIP_MAINTENANCE_RELATION_DELAY_MAINTENANCE FOREIGN KEY (MAINTENANCE_ID) REFERENCES SHIP_MAINTENANCE (MAINTENANCE_ID);
ALTER TABLE SHIP_MAINTENANCE_RELATION_DELAY ADD CONSTRAINT FK_SHIP_MAINTENANCE_RELATION_DELAY_DELAY FOREIGN KEY (DELAY_ID) REFERENCES SHIP_MAINTENANCE_DELAY (DELAY_ID);

-- ----------------------------
-- Table structure for SHIP_MAINTENANCE_PERFORMANCE_APPROVAL
-- ----------------------------
DROP TABLE IF EXISTS SHIP_MAINTENANCE_PERFORMANCE_APPROVAL;
CREATE TABLE SHIP_MAINTENANCE_PERFORMANCE_APPROVAL (
  APPROVAL_ID             CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  PERFORMANCE_MONTH       CHAR(2) COMMENT '完成月份',
  PERFORMANCE_QUARTER     CHAR(2) COMMENT '完成季度',
  PERFORMANCE_YEAR        CHAR(4) COMMENT '完成年份',
  PERFORMANCE_DATE        DATETIME COMMENT '完成时间',
  PERFORMANCE_LAST_USERID CHAR(36) COMMENT '岸基已阅人ID',
  PERFORMANCE_PERSON      VARCHAR(500) COMMENT '岸基已阅人',
  CAPTAIN_ID              CHAR(36) COMMENT '审核人船长ID',
  CAPTAIN                 VARCHAR(500) COMMENT '船长',
  CHIEFENGINEE_ID         CHAR(36) COMMENT '提交人轮机长ID',
  CHIEFENGINEE            VARCHAR(500) COMMENT '轮机长',
  CHIEFMATE_ID            CHAR(36) COMMENT '提交人大副ID',
  CHIEFMATE               VARCHAR(500) COMMENT '大副',
  STATUS                  VARCHAR(200) COMMENT '单据申请状态，草稿、未发起（已经创建流程）、等待【xxx】审批、审批通过、审批未通过',
  IS_LAND                 CHAR(1) COMMENT '单据提交来源，1 岸基；2 船舶端',
  WF_INST_ID              CHAR(36) COMMENT '工作流实例ID',
  REMARK                  VARCHAR(2000) COMMENT '备注',
  APPROVAL_TYPE           CHAR(1) COMMENT '审批类型，1 年度；2 季度；3 月度',
  SHIP_ID                 CHAR(36) COMMENT '船舶ID',
  DEPARTMENT_ID           CHAR(36) COMMENT '部门ID',
  COMPANY_ID              CHAR(36) COMMENT '企业ID',
  IS_DEL                  CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME                  TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='完成情况审批表';
ALTER TABLE SHIP_MAINTENANCE_PERFORMANCE_APPROVAL ADD CONSTRAINT FK_SHIP_MAINTENANCE_PERFORMANCE_APPROVAL_SHIP FOREIGN KEY (SHIP_ID) REFERENCES SYS_SHIPINFO (SHIP_ID);
ALTER TABLE SHIP_MAINTENANCE_PERFORMANCE_APPROVAL ADD CONSTRAINT FK_SHIP_MAINTENANCE_PERFORMANCE_APPROVAL_DEPARTMENT FOREIGN KEY (DEPARTMENT_ID) REFERENCES SYS_DEPARTMENT (DEPARTMENT_ID);

-- ----------------------------
-- Table structure for SHIP_MAINTENANCE_MONTH_PERFORMANCE
-- ----------------------------
DROP TABLE IF EXISTS SHIP_MAINTENANCE_MONTH_PERFORMANCE;
CREATE TABLE SHIP_MAINTENANCE_MONTH_PERFORMANCE (
  PERFORMANCE_ID        CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  MAINTENANCE_ID        CHAR(36) NOT NULL COMMENT '保养ID',
  COMPONENT_ID          CHAR(36) COMMENT '设备ID',
  APPROVAL_ID           CHAR(36) COMMENT '完成情况审核ID',
  PARENT_ID             CHAR(36) COMMENT '工单的父ID',
  PMS_CODE              VARCHAR(200) COMMENT 'PMS编号',
  CMS_CODE              VARCHAR(200) COMMENT 'CMS编号',
  PMS_GRADE             CHAR(1) COMMENT '维护保养等级A/B/C/D/E/F/G/H数据来源SHIP_PMS_GRADE表',
  MAINTENANCE_CODE      VARCHAR(200) COMMENT '工单信息编码',
  MAINTENANCE_TITLE     VARCHAR(200) COMMENT '工单信息标题',
  MAINTENANCE_CONTENT   VARCHAR(2000) COMMENT '工单信息内容',
  MAINTENANCE_TYPE      CHAR(1) COMMENT '工单信息类型，1 定期；2 定时；3 定期&定时；4 视情况',
  PLANNED_EXEC_VALUE    DECIMAL(18,4) COMMENT '计划执行表值(定时)',
  PLANNED_EXEC_DATE     DATETIME COMMENT '计划执行日期',
  REGULAR_CYCLE         DECIMAL(8,2) COMMENT '定期周期',
  REGULAR_UNIT          VARCHAR(200) COMMENT '定期单位日月年',
  REGULAR_AFTER_WINDOW  DECIMAL(8,2) COMMENT '定期前窗口',
  REGULAR_BEFOR_WINDOW  DECIMAL(8,2) COMMENT '定期后窗口',
  REGULAR_WINDOW_UNIT   VARCHAR(200) COMMENT '定期窗口单位日月年',
  TIMING_CYCLE          DECIMAL(18,4) COMMENT '定时周期',
  TIMING_UNIT           VARCHAR(200) COMMENT '定时单位默认小时',
  TIMING_AFTER_WINDOW   DECIMAL(8,2) COMMENT '定时前窗口',
  TIMING_BEFOR_WINDOW   DECIMAL(8,2) COMMENT '定时后窗口',
  TIMING_WINDOW_UNIT    VARCHAR(200) COMMENT '定时窗口单位默认小时',
  DEPARTMENT_ID         CHAR(36) COMMENT '部门ID',
  PRINCIPAL_POST_ID     CHAR(36) COMMENT '负责人岗位ID',
  CONFIRM_POST_ID       CHAR(36) COMMENT '确认人岗位ID',
  MAINTENANCE_PROPERTY  CHAR(1) COMMENT '保养性质，1 正常；2 修理；3 PSC；4 FSC；5 年检；6 中间检验；7 特检',
  CHECK_STATUS          CHAR(1) COMMENT '计划审核状态，1 年度计划审核完成；2 月度计划审核完成',
  ORIGIN                CHAR(1) COMMENT '来源，1 计划；2 岸基新增；3 船端新增；4 PSC；5 FSC；6 修理',
  ISSURE                CHAR(3) COMMENT '部门长是否确认，MAINTENANCE_STATUS保养状态03后才可以确认，103 提前完成；104 按时完成(前)；105 按时完成；106 按时完成(后)；107 超期完成；108 免做完成；109 推迟完成；未确认之前均为000',
  MAINTENANCE_STATUS    CHAR(2) COMMENT '保养状态，01 计划；02 停止；03 提前完成；04 按时完成(前)；05 按时完成；06 按时完成(后)；07 超期完成；08 免做完成；09 推迟完成',
  REMARK                VARCHAR(2000) COMMENT '备注',
  SHIP_ID               CHAR(36) COMMENT '船舶ID',
  COMPANY_ID            CHAR(36) COMMENT '企业ID',
  IS_DEL                CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME                TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='完成情况审批明细表';
ALTER TABLE SHIP_MAINTENANCE_MONTH_PERFORMANCE ADD CONSTRAINT FK_SHIP_MAINTENANCE_MONTH_PERFORMANCE_APPROVAL FOREIGN KEY (APPROVAL_ID) REFERENCES SHIP_MAINTENANCE_PERFORMANCE_APPROVAL (APPROVAL_ID);
ALTER TABLE SHIP_MAINTENANCE_MONTH_PERFORMANCE ADD CONSTRAINT FK_SHIP_MAINTENANCE_MONTH_PERFORMANCE_SHIP FOREIGN KEY (SHIP_ID) REFERENCES SYS_SHIPINFO (SHIP_ID);
ALTER TABLE SHIP_MAINTENANCE_MONTH_PERFORMANCE ADD CONSTRAINT FK_SHIP_MAINTENANCE_MONTH_PERFORMANCE_DEPARTMENT FOREIGN KEY (DEPARTMENT_ID) REFERENCES SYS_DEPARTMENT (DEPARTMENT_ID);
ALTER TABLE SHIP_MAINTENANCE_MONTH_PERFORMANCE ADD CONSTRAINT FK_SHIP_MAINTENANCE_MONTH_PERFORMANCE_MAINTENANCE FOREIGN KEY (MAINTENANCE_ID) REFERENCES SHIP_MAINTENANCE (MAINTENANCE_ID);
ALTER TABLE SHIP_MAINTENANCE_MONTH_PERFORMANCE ADD CONSTRAINT FK_SHIP_MAINTENANCE_MONTH_PERFORMANCE_COMPONENT FOREIGN KEY (COMPONENT_ID) REFERENCES SHIP_COMPONENT (COMPONENT_ID);

-- ----------------------------
-- Table structure for SHIP_MAINTENANCE_CONSUME
-- ----------------------------
DROP TABLE IF EXISTS SHIP_MAINTENANCE_CONSUME;
CREATE TABLE SHIP_MAINTENANCE_CONSUME (
  CONSUME_ID        CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  MAINTENANCE_ID    CHAR(36) COMMENT '保养ID',
  CONSUME_TYPE      CHAR(1) COMMENT '消耗物品类型，1 备件；2 物料；3 滑油；4 燃油；5 其他',
  ITEM_ID           CHAR(36) COMMENT '物料ID',
  CONSUME_NUMBER    DECIMAL(8,2) COMMENT '默认消耗数量',
  OPERATION_USERID  CHAR(36) COMMENT '操作人ID',
  SHIP_ID           CHAR(36) COMMENT '船舶ID',
  COMPANY_ID        CHAR(36) COMMENT '企业ID',
  IS_DEL            CHAR(1) COMMENT '是否删除，0 否；1 是',
  U_TIME            TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='维护保养消耗表';
ALTER TABLE SHIP_MAINTENANCE_CONSUME ADD CONSTRAINT FK_SHIP_MAINTENANCE_CONSUME_SHIP FOREIGN KEY (SHIP_ID) REFERENCES SYS_SHIPINFO (SHIP_ID);
ALTER TABLE SHIP_MAINTENANCE_CONSUME ADD CONSTRAINT FK_SHIP_MAINTENANCE_CONSUME_MAINTENANCE FOREIGN KEY (MAINTENANCE_ID) REFERENCES SHIP_MAINTENANCE (MAINTENANCE_ID);

-- ----------------------------
-- Table structure for SHIP_MATERIAL_INFO
-- ----------------------------
DROP TABLE IF EXISTS SHIP_MATERIAL_INFO;
CREATE TABLE SHIP_MATERIAL_INFO (
  MATERIAL_ID       CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  MATERIAL_CNAME    VARCHAR(500) NOT NULL COMMENT '物料中文名称',
  MATERIAL_ENAME    VARCHAR(500) COMMENT '物料英文名称',
  MATERIAL_TYPE     CHAR(1) COMMENT '物料类型，1 系统；2 企业',
  MATERIAL_SPEC     VARCHAR(500) COMMENT '规格',
  MATERIAL_MODEL    VARCHAR(500) COMMENT '型号',
  MATERIAL_MEMO     VARCHAR(2000) COMMENT '物料描述',
  IMPA_CODE         VARCHAR(500) COMMENT 'IMPA编码',
  MATERIAL_CODE     VARCHAR(500) COMMENT '物料编码',
  EXTERNAL_CODE     VARCHAR(500) COMMENT '物料外码，用户自行录入的编码或者与第三方对应的编码(如SAP)',
  EXTERNAL_PROPERTY VARCHAR(500) COMMENT '物料扩展属性',
  MATERIAL_UNIT     VARCHAR(500) COMMENT '单位',
  REMARK            VARCHAR(2000) COMMENT '备注',
  COMPANY_ID        CHAR(36) COMMENT '企业ID',
  IS_DEL            CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME            TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='物料表';

-- ----------------------------
-- Table structure for SHIP_MATERIAL_CATEGORY
-- ----------------------------
DROP TABLE IF EXISTS SHIP_MATERIAL_CATEGORY;
CREATE TABLE SHIP_MATERIAL_CATEGORY (
  CATEGORY_ID   CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  PARENT_ID     CHAR(36) COMMENT '分类上级ID',
  CATEGORY_NAME VARCHAR(500) NOT NULL COMMENT '分类名称',
  CATEGORY_CODE VARCHAR(500) NOT NULL COMMENT '分类编码',
  CATEGORY_TYPE CHAR(1) COMMENT '1 标准分类；2 IMPA；3 ABC；4 统计分类；5 框架协议',
  SORTID        INTEGER(11) COMMENT '排序号',
  REMARK        VARCHAR(2000) COMMENT '备注',
  COMPANY_ID    CHAR(36) COMMENT '企业ID',
  IS_DEL        CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME        TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='物料分类表';

-- ----------------------------
-- Table structure for SHIP_MATERIAL_CATEGORY_DEPARTMENT
-- ----------------------------
DROP TABLE IF EXISTS SHIP_MATERIAL_CATEGORY_DEPARTMENT;
CREATE TABLE SHIP_MATERIAL_CATEGORY_DEPARTMENT (
  RELATION_ID   CHAR(36) NOT NULL PRIMARY KEY  COMMENT '主键',
  CATEGORY_ID   CHAR(36) NOT NULL COMMENT '物料分类ID',
  DEPARTMENT_ID CHAR(36) NOT NULL COMMENT '部门ID',
  COMPANY_ID    CHAR(36) NOT NULL COMMENT '企业ID',
  IS_DEL        CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME        TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='物料分类与部门关系表';
ALTER TABLE SHIP_MATERIAL_CATEGORY_DEPARTMENT ADD CONSTRAINT FK_SHIP_MATERIAL_CATEGORY_DEPARTMENT_CATEGORY FOREIGN KEY (CATEGORY_ID) REFERENCES SHIP_MATERIAL_CATEGORY (CATEGORY_ID);
ALTER TABLE SHIP_MATERIAL_CATEGORY_DEPARTMENT ADD CONSTRAINT FK_SHIP_MATERIAL_CATEGORY_DEPARTMENT_DEPARTMENT FOREIGN KEY (DEPARTMENT_ID) REFERENCES SYS_DEPARTMENT (DEPARTMENT_ID);

-- ----------------------------
-- Table structure for SHIP_MATERIAL_REF
-- ----------------------------
DROP TABLE IF EXISTS SHIP_MATERIAL_REF;
CREATE TABLE SHIP_MATERIAL_REF (
  REF_ID      CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  MATERIAL_ID CHAR(36) COMMENT '物料ID',
  CATEGORY_ID CHAR(36) COMMENT '分类ID',
  COMPANY_ID  CHAR(36) COMMENT '企业ID',
  IS_DEL      CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME      TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='物料与分类关系表';
ALTER TABLE SHIP_MATERIAL_REF ADD CONSTRAINT FK_SHIP_MATERIAL_REF_CATEGORY FOREIGN KEY (CATEGORY_ID) REFERENCES SHIP_MATERIAL_CATEGORY (CATEGORY_ID);
ALTER TABLE SHIP_MATERIAL_REF ADD CONSTRAINT FK_SHIP_MATERIAL_REF_MATERIAL FOREIGN KEY (MATERIAL_ID) REFERENCES SHIP_MATERIAL_INFO (MATERIAL_ID);

-- ----------------------------
-- Table structure for SHIP_MATERIAL_APPLY
-- ----------------------------
DROP TABLE IF EXISTS SHIP_MATERIAL_APPLY;
CREATE TABLE SHIP_MATERIAL_APPLY (
  MATERIAL_APPLY_ID       CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  SCHEDULING_ID           CHAR(36) COMMENT '航次计划ID',
  MATERIAL_APPLY_CODE     VARCHAR(200) NOT NULL COMMENT '申请单编码',
  MATERIAL_APPLY_TYPE     CHAR(1) NOT NULL COMMENT '申请单类型，1 常规；2季度申请；3 应急申请；4 大修申请；5.其他',
  MATERIAL_APPLY_CATEGORY CHAR(2) COMMENT '申请类别，00 全部；01 通用物料；11 航保资料；12海图；13 劳保用品；14 办公室用品；15 药品；16；伙食 99其他',
  MATERIAL_APPLY_DATE     DATETIME NOT NULL COMMENT '申请日期',
  APPLY_DEP_ID            CHAR(36) COMMENT '船舶端申请部门',
  PORT                    VARCHAR(200) COMMENT '送货港口',
  WF_INST_ID              CHAR(36) COMMENT '工作流实例ID',
  APPLY_PERSON_POST_ID    CHAR(36) COMMENT '申请人岗位ID',
  APPLY_USER_ID           VARCHAR(200) COMMENT '申请人姓名',
  HOD_NAME                VARCHAR(200) COMMENT '部门长姓名',
  CAP_NAME                VARCHAR(200) COMMENT '船长姓名',
  CAP_CHECKDATE           DATETIME COMMENT '船长审批时间',
  STATUS                  VARCHAR(200) COMMENT '单据申请状态，草稿、未发起（已经创建流程）、等待【xxx】审批、审批通过、审批未通过',
  IS_LAND                 CHAR(1) COMMENT '单据提交来源，1：岸基；2：船舶端',
  REMARK                  VARCHAR(2000) COMMENT '备注',
  SHIP_ID                 CHAR(36) COMMENT '船舶ID',
  COMPANY_ID              CHAR(36) COMMENT '企业ID',
  IS_DEL                  CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME                  TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='物料申请表';
ALTER TABLE SHIP_MATERIAL_APPLY ADD CONSTRAINT FK_SHIP_MATERIAL_APPLY_SHIP FOREIGN KEY (SHIP_ID) REFERENCES SYS_SHIPINFO (SHIP_ID);
ALTER TABLE SHIP_MATERIAL_APPLY ADD CONSTRAINT FK_SHIP_MATERIAL_APPLY_DEPARTMENT FOREIGN KEY (APPLY_DEP_ID) REFERENCES SYS_DEPARTMENT (DEPARTMENT_ID);
ALTER TABLE SHIP_MATERIAL_APPLY ADD CONSTRAINT FK_SHIP_MATERIAL_APPLY_POST FOREIGN KEY (APPLY_PERSON_POST_ID) REFERENCES SYS_POST (POST_ID);
-- ALTER TABLE SHIP_MATERIAL_APPLY ADD CONSTRAINT FK_SHIP_MATERIAL_APPLY_SCHEDULING FOREIGN KEY (SCHEDULING_ID) REFERENCES SHIP_VOYAGE_SCHEDULING (SCHEDULING_ID);

-- ----------------------------
-- Table structure for SHIP_MATERIAL_APPLY_DETAIL
-- ----------------------------
DROP TABLE IF EXISTS SHIP_MATERIAL_APPLY_DETAIL;
CREATE TABLE SHIP_MATERIAL_APPLY_DETAIL (
  MATERIAL_APPLY_DETAIL_ID  CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  MATERIAL_APPLY_ID         CHAR(36) NOT NULL COMMENT '物料申请单ID',
  MATERIAL_CATEGORY         VARCHAR(500) COMMENT '物料分类名称',
  MATERIAL_ID               CHAR(36) COMMENT '物料ID',
  IMPA_CODE                 VARCHAR(200) COMMENT 'IMPA编码',
  MATERIAL_CNAME            VARCHAR(200) NOT NULL COMMENT '物料中文名称',
  MATERIAL_TYPE             CHAR(1) NOT NULL COMMENT '物料类型，1 系统；2 企业；隐藏字段一定是2',
  MATERIAL_SPEC             VARCHAR(200) NOT NULL COMMENT '规格',
  MATERIAL_MODEL            VARCHAR(200) COMMENT '型号',
  MATERIAL_MEMO             VARCHAR(1000) COMMENT '物料描述',
  MATERIAL_UNIT             VARCHAR(200) COMMENT '单位',
  APPLY_COUNT               DECIMAL(18,4) COMMENT '申请数量',
  RATIFY_COUNT              DECIMAL(18,4) COMMENT '批准数量',
  SHIP_STORAGE              DECIMAL(18,4) COMMENT '船存数量',
  ORIGIN                    CHAR(1) COMMENT '来源，1 船舶；2 手工',
  ORDER_ID                  VARCHAR(20) COMMENT '排序',
  REMARK                    VARCHAR(2000) COMMENT '备注',
  SHIP_ID                   CHAR(36) COMMENT '船舶ID',
  COMPANY_ID                CHAR(36) COMMENT '企业ID',
  IS_DEL                    CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME                    TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='物料申请明细表\r\n超过20%手工录入的物料给以提示';
ALTER TABLE SHIP_MATERIAL_APPLY_DETAIL ADD CONSTRAINT FK_SHIP_MATERIAL_APPLY_DETAIL_SHIP FOREIGN KEY (SHIP_ID) REFERENCES SYS_SHIPINFO (SHIP_ID);
ALTER TABLE SHIP_MATERIAL_APPLY_DETAIL ADD CONSTRAINT FK_SHIP_MATERIAL_APPLY_DETAIL_APPLY FOREIGN KEY (MATERIAL_APPLY_ID) REFERENCES SHIP_MATERIAL_APPLY (MATERIAL_APPLY_ID);
ALTER TABLE SHIP_MATERIAL_APPLY_DETAIL ADD CONSTRAINT FK_SHIP_MATERIAL_APPLY_DETAIL_MATERIAL FOREIGN KEY (MATERIAL_ID) REFERENCES SHIP_MATERIAL_INFO (MATERIAL_ID);

-- ----------------------------
-- Table structure for SHIP_SPARE_APPLY
-- ----------------------------
DROP TABLE IF EXISTS SHIP_SPARE_APPLY;
CREATE TABLE SHIP_SPARE_APPLY (
  SPARE_APPLY_ID        CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  SCHEDULING_ID         CHAR(36) COMMENT '航次计划ID',
  COMPONENT_ID          CHAR(36) COMMENT '设备ID',
  COMPONENT_NAME        VARCHAR(200) COMMENT '设备名称',
  COMPONENT_MODEL       VARCHAR(200) COMMENT '设备型号',
  SPARE_APPLY_CODE      VARCHAR(500) COMMENT '申请单编码',
  SPARE_APPLY_TYPE      CHAR(1) COMMENT '申请单类型',
  SPARE_APPLY_CATEGORY  CHAR(1) COMMENT '申请类别',
  SPARE_APPLY_DATE      DATETIME COMMENT '申请时间',
  APPLY_DEP_ID          CHAR(36) COMMENT '船舶端申请部门',
  APPLY_PERSON_POST_ID  CHAR(36) COMMENT '申请人岗位ID',
  APPLY_USER_ID         CHAR(36) COMMENT '申请人ID',
  HOD_NAME              VARCHAR(500) COMMENT '部门长姓名',
  CAP_NAME              VARCHAR(500) COMMENT '船长姓名',
  CAP_CHECKDATE         DATETIME COMMENT '船长审批时间',
  LAND_CHECKER_NAME     VARCHAR(500) COMMENT '岸端确认人姓名',
  LAND_CHECKDATE        DATETIME COMMENT '岸端确认时间',
  PORT                  VARCHAR(500) COMMENT '送货港口',
  WF_INST_ID            CHAR(36) COMMENT '工作流实例ID',
  STATUS                VARCHAR(200) COMMENT '单据申请状态：未发起（已经创建流程）、等待【xxx】审批、审批通过、审批未通过',
  IS_LAND               CHAR(1) COMMENT '来源，1 岸基；2 船端',
  REMARK                VARCHAR(2000) COMMENT '备注',
  SHIP_ID               CHAR(36) COMMENT '船舶ID',
  COMPANY_ID            CHAR(36) COMMENT '企业ID',
  IS_DEL                CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME                TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='备件申请表';
ALTER TABLE SHIP_SPARE_APPLY ADD CONSTRAINT FK_SHIP_SPARE_APPLY_SHIP FOREIGN KEY (SHIP_ID) REFERENCES SYS_SHIPINFO (SHIP_ID);
ALTER TABLE SHIP_SPARE_APPLY ADD CONSTRAINT FK_SHIP_SPARE_APPLY_DEPARTMENT FOREIGN KEY (APPLY_DEP_ID) REFERENCES SYS_DEPARTMENT (DEPARTMENT_ID);
ALTER TABLE SHIP_SPARE_APPLY ADD CONSTRAINT FK_SHIP_SPARE_APPLY_POST FOREIGN KEY (APPLY_PERSON_POST_ID) REFERENCES SYS_POST (POST_ID);
ALTER TABLE SHIP_SPARE_APPLY ADD CONSTRAINT FK_SHIP_SPARE_APPLY_SCHEDULING FOREIGN KEY (SCHEDULING_ID) REFERENCES SHIP_VOYAGE_SCHEDULING (SCHEDULING_ID);
ALTER TABLE SHIP_SPARE_APPLY ADD CONSTRAINT FK_SHIP_SPARE_APPLY_COMPONENT FOREIGN KEY (COMPONENT_ID) REFERENCES SHIP_COMPONENT (COMPONENT_ID);

-- ----------------------------
-- Table structure for SHIP_SPARE_APPLY_DETAIL
-- ----------------------------
DROP TABLE IF EXISTS SHIP_SPARE_APPLY_DETAIL;
CREATE TABLE SHIP_SPARE_APPLY_DETAIL (
  SPARE_APPLY_DETAIL_ID CHAR(36) NOT NULL PRIMARY KEY COMMENT '备件申请明细ID',
  SPARE_APPLY_ID        CHAR(36) NOT NULL COMMENT '备件申请单ID',
  COMPONENT_ID          CHAR(36) COMMENT '设备ID',
  COMPONENT_NAME        VARCHAR(200) COMMENT '设备名称',
  COMPONENT_MODEL       VARCHAR(500) COMMENT '设备型号',
  SPARE_ID              CHAR(36) COMMENT '备件ID',
  SPARE_CODE            VARCHAR(500) COMMENT '备件编码',
  SPARE_CNAME           VARCHAR(500) COMMENT '备件中文名称',
  SPARE_SPEC            VARCHAR(500) COMMENT '规格',
  SPARE_UNIT            VARCHAR(500) COMMENT '单位',
  REMARK                VARCHAR(2000) COMMENT '备注',
  ORDER_ID              VARCHAR(20) COMMENT '排序',
  APPLY_COUNT           DECIMAL(8,2) COMMENT '申请数量',
  RATIFY_COUNT          DECIMAL(8,2) COMMENT '批准数量',
  SHIP_STORAGE          DECIMAL(8,2) COMMENT '船存数量',
  ORIGIN                CHAR(1) COMMENT '来源，1 岸基；2 船端',
  SHIP_ID               CHAR(36) COMMENT '船舶ID',
  COMPANY_ID            CHAR(36) COMMENT '企业ID',
  IS_DEL                CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME                TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='备件申请明细表';
ALTER TABLE SHIP_SPARE_APPLY_DETAIL ADD CONSTRAINT FK_SHIP_SPARE_APPLY_DETAIL_SHIP FOREIGN KEY (SHIP_ID) REFERENCES SYS_SHIPINFO (SHIP_ID);
ALTER TABLE SHIP_SPARE_APPLY_DETAIL ADD CONSTRAINT FK_SHIP_SPARE_APPLY_DETAIL_COMPONENT FOREIGN KEY (COMPONENT_ID) REFERENCES SHIP_COMPONENT (COMPONENT_ID);
ALTER TABLE SHIP_SPARE_APPLY_DETAIL ADD CONSTRAINT FK_SHIP_SPARE_APPLY_DETAIL_APPLY FOREIGN KEY (SPARE_APPLY_ID) REFERENCES SHIP_SPARE_APPLY (SPARE_APPLY_ID);
ALTER TABLE SHIP_SPARE_APPLY_DETAIL ADD CONSTRAINT FK_SHIP_SPARE_APPLY_DETAIL_SPARE FOREIGN KEY (SPARE_ID) REFERENCES SHIP_SPARE (SPARE_ID);

-- ----------------------------
-- Table structure for SHIP_GREASE_OIL
-- ----------------------------
DROP TABLE IF EXISTS SHIP_GREASE_OIL;
CREATE TABLE SHIP_GREASE_OIL (
  GREASE_OIL_ID     CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  GREASE_OIL_CODE   VARCHAR(500) COMMENT '滑油编码',
  GREASE_OIL_CNAME  VARCHAR(500) NOT NULL COMMENT '中文名称',
  GREASE_OIL_ENAME  VARCHAR(500) COMMENT '英文名称',
  GREASE_OIL_SPEC   VARCHAR(500) COMMENT '规格',
  GREASE_OIL_MODEL  VARCHAR(500) COMMENT '型号',
  UNIT_NAME         VARCHAR(500) COMMENT '单位',
  GREASE_OIL_MEMO   VARCHAR(2000) COMMENT '参数',
  MANUFAC           VARCHAR(1000) COMMENT '厂家',
  REMARK            VARCHAR(2000) COMMENT '备注',
  ITEM_CATEGORY     CHAR(1) COMMENT '物品种类，1 滑油；2 化学试剂',
  ITEM_TYPE         CHAR(3) COMMENT '物品分类-滑油类型，101 主机齿轮油；102 副机齿轮油；199 其他； -化学试剂类型，201 压载水处理剂；202 燃油添加剂；203 生活水处理剂；204 锅炉水处理剂；205 缸套水处理剂；299 其他',
  COMPANY_ID        CHAR(36) COMMENT '企业ID',
  IS_DEL            CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME            TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='滑油表';

-- ----------------------------
-- Table structure for SHIP_GREASE_USE
-- ----------------------------
DROP TABLE IF EXISTS SHIP_GREASE_USE;
CREATE TABLE SHIP_GREASE_USE (
  GREASE_USE_ID CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  GREASE_OIL_ID CHAR(36) NOT NULL COMMENT '滑油ID',
  GREASE_USE    VARCHAR(2000) NOT NULL COMMENT '用途主要是适用于哪些设备',
  COMPONENT_ID  CHAR(36) COMMENT '设备ID',
  SHIP_ID       CHAR(36) NOT NULL COMMENT '船舶ID',
  COMPANY_ID    CHAR(36) COMMENT '企业ID',
  IS_DEL        CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME        TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='滑油用途表';
ALTER TABLE SHIP_GREASE_USE ADD CONSTRAINT FK_SHIP_GREASE_USE_SHIP FOREIGN KEY (SHIP_ID) REFERENCES SYS_SHIPINFO (SHIP_ID);
ALTER TABLE SHIP_GREASE_USE ADD CONSTRAINT FK_SHIP_GREASE_USE_COMPONENT FOREIGN KEY (COMPONENT_ID) REFERENCES SHIP_COMPONENT (COMPONENT_ID);
ALTER TABLE SHIP_GREASE_USE ADD CONSTRAINT FK_SHIP_GREASE_USE_GREASE FOREIGN KEY (GREASE_OIL_ID) REFERENCES SHIP_GREASE_OIL (GREASE_OIL_ID);

-- ----------------------------
-- Table structure for SHIP_GREASE_ALLOT
-- ----------------------------
DROP TABLE IF EXISTS SHIP_GREASE_ALLOT;
CREATE TABLE SHIP_GREASE_ALLOT (
  GREASE_ALLOT_ID CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  GREASE_OIL_ID   CHAR(36) NOT NULL COMMENT '滑油ID',
  SHIP_ID         CHAR(36) NOT NULL COMMENT '船舶ID',
  COMPANY_ID      CHAR(36) COMMENT '企业ID',
  IS_DEL          CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME          TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间',
  REMARK          VARCHAR(2000) COMMENT '备注'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='滑油分配表';
ALTER TABLE SHIP_GREASE_ALLOT ADD CONSTRAINT FK_SHIP_GREASE_ALLOT_SHIP FOREIGN KEY (SHIP_ID) REFERENCES SYS_SHIPINFO (SHIP_ID);
ALTER TABLE SHIP_GREASE_ALLOT ADD CONSTRAINT FK_SHIP_GREASE_ALLOT_GREASE FOREIGN KEY (GREASE_OIL_ID) REFERENCES SHIP_GREASE_OIL (GREASE_OIL_ID);

-- ----------------------------
-- Table structure for SHIP_GREASE_APPLY
-- ----------------------------
DROP TABLE IF EXISTS SHIP_GREASE_APPLY;
CREATE TABLE SHIP_GREASE_APPLY (
  GREASE_APPLY_ID     CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  SCHEDULING_ID       CHAR(36) COMMENT '航次ID',
  GREASE_APPLY_CODE   VARCHAR(500) NOT NULL COMMENT '滑油申请编码',
  GREASE_APPLY_DATE   DATE NOT NULL COMMENT '申请日期',
  GREASE_SENDOIL_DATE DATE COMMENT '送货日期',
  APPLY_DEPARTMENT_ID CHAR(36) NOT NULL COMMENT '船舶端申请部门',
  APPLY_PERSON_POSTID CHAR(36) NOT NULL COMMENT '申请人岗位ID',
  APPLY_PERSON_NAME   VARCHAR(500) NOT NULL COMMENT '申请人姓名',
  PORT                VARCHAR(500) COMMENT '送货港口',
  REMARK              VARCHAR(2000) COMMENT '备注',
  STATE               VARCHAR(200) COMMENT '单据申请状态：草稿、未发起（已经创建流程）、等待【xxx】审批、审批通过、审批未通过',
  WF_INST_ID          CHAR(36) COMMENT '工作流实例ID',
  ORIGIN              CHAR(1) COMMENT '单据提交来源，1 岸基；2 船舶端',
  ITEM_CATEGORY       CHAR(1) COMMENT '物品种类，1 滑油；2 化学试剂',
  SHIP_ID             CHAR(36) NOT NULL COMMENT '船舶ID',
  COMPANY_ID          CHAR(36) COMMENT '企业ID',
  IS_DEL              CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME              TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='滑油申请表';
ALTER TABLE SHIP_GREASE_APPLY ADD CONSTRAINT FK_SHIP_GREASE_APPLY_SHIP FOREIGN KEY (SHIP_ID) REFERENCES SYS_SHIPINFO (SHIP_ID);
ALTER TABLE SHIP_GREASE_APPLY ADD CONSTRAINT FK_SHIP_GREASE_APPLY_DEPARTMENT FOREIGN KEY (APPLY_DEPARTMENT_ID) REFERENCES SYS_DEPARTMENT (DEPARTMENT_ID);
ALTER TABLE SHIP_GREASE_APPLY ADD CONSTRAINT FK_SHIP_GREASE_APPLY_POST FOREIGN KEY (APPLY_PERSON_POSTID) REFERENCES SYS_POST (POST_ID);
ALTER TABLE SHIP_GREASE_APPLY ADD CONSTRAINT FK_SHIP_GREASE_APPLY_SCHEDULING FOREIGN KEY (SCHEDULING_ID) REFERENCES SHIP_VOYAGE_SCHEDULING (SCHEDULING_ID);

-- ----------------------------
-- Table structure for SHIP_GREASE_APPLY_DETAIL
-- ----------------------------
DROP TABLE IF EXISTS SHIP_GREASE_APPLY_DETAIL;
CREATE TABLE SHIP_GREASE_APPLY_DETAIL (
  GREASE_APPLY_DETAIL_ID  CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  GREASE_APPLY_ID         CHAR(36) NOT NULL COMMENT '滑油申请ID',
  GREASE_OIL_ID           CHAR(36) COMMENT '滑油ID',
  GREASE_OIL_CNAME        VARCHAR(500) NOT NULL COMMENT '名称',
  GREASELOIL_SPEC         VARCHAR(500) COMMENT '规格',
  GREASE_OIL_MODEL        VARCHAR(500) COMMENT '型号',
  UNIT_NAME               VARCHAR(500) COMMENT '单位（吨）',
  GREASEL_OIL_MEMO        VARCHAR(2000) COMMENT '参数',
  MANUFAC                 VARCHAR(1000) COMMENT '厂家',
  GREASE_OIL_USE          VARCHAR(2000) COMMENT '用途',
  GREASE_OIL_COMPONMENT   VARCHAR(2000) COMMENT '使用设备',
  APPLY_COUNT             DECIMAL(18,4) NOT NULL COMMENT '申请数量',
  APPROVE_COUNT           DECIMAL(18,4) COMMENT '批准数量',
  ORDER_ID                VARCHAR(20) COMMENT '排序',
  SHIP_STORAGE            DECIMAL(18,4) COMMENT '船存数量',
  REMARK                  VARCHAR(2000) COMMENT '备注',
  SHIP_ID                 CHAR(36) NOT NULL COMMENT '船舶ID',
  COMPANY_ID              CHAR(36) COMMENT '企业ID',
  IS_DEL                  CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME                  TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='滑油申请明细表';
ALTER TABLE SHIP_GREASE_APPLY_DETAIL ADD CONSTRAINT FK_SHIP_GREASE_APPLY_DETAIL_SHIP FOREIGN KEY (SHIP_ID) REFERENCES SYS_SHIPINFO (SHIP_ID);
ALTER TABLE SHIP_GREASE_APPLY_DETAIL ADD CONSTRAINT FK_SHIP_GREASE_APPLY_DETAIL_APPLY FOREIGN KEY (GREASE_APPLY_ID) REFERENCES SHIP_GREASE_APPLY (GREASE_APPLY_ID);
ALTER TABLE SHIP_GREASE_APPLY_DETAIL ADD CONSTRAINT FK_SHIP_GREASE_APPLY_DETAIL_GREASE FOREIGN KEY (GREASE_OIL_ID) REFERENCES SHIP_GREASE_OIL (GREASE_OIL_ID);

-- ----------------------------
-- Table structure for SHIP_FUEL_OIL
-- ----------------------------
DROP TABLE IF EXISTS SHIP_FUEL_OIL;
CREATE TABLE SHIP_FUEL_OIL (
  FUEL_OIL_ID     CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  FUEL_OIL_CODE   VARCHAR(500) COMMENT '燃油编码',
  FUEL_OIL_CNAME  VARCHAR(500) NOT NULL COMMENT '中文名称',
  FUEL_OIL_ENAME  VARCHAR(500) COMMENT '英文名称',
  FUEL_OIL_SPEC   VARCHAR(500) NOT NULL COMMENT '规格',
  FUEL_OIL_MODEL  VARCHAR(500) COMMENT '型号',
  UNIT_NAME       VARCHAR(500) NOT NULL COMMENT '单位',
  FUEL_OIL_MEMO   VARCHAR(2000) COMMENT '参数',
  FUEL_TYPE       CHAR(1) NOT NULL COMMENT '燃油类型，1 轻油；2 重油',
  COMPANY_ID      CHAR(36) COMMENT '企业ID',
  IS_DEL          CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME          TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='燃油表';

-- ----------------------------
-- Table structure for SHIP_FUEL_APPLY
-- ----------------------------
DROP TABLE IF EXISTS SHIP_FUEL_APPLY;
CREATE TABLE SHIP_FUEL_APPLY (
  FUEL_APPLY_ID       CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  SCHEDULING_ID       CHAR(36) COMMENT '航次ID',
  FUEL_APPLY_CODE     VARCHAR(500) NOT NULL COMMENT '燃油申请编码',
  FUEL_APPLY_DATE     DATETIME NOT NULL COMMENT '申请日期',
  FUEL_SENDOIL_DATE   DATETIME COMMENT '送货日期',
  APPLY_DEPARTMENT_ID CHAR(36) COMMENT '船舶端申请部门ID',
  APPLY_PERSON_POSTID CHAR(36) NOT NULL COMMENT '申请人岗位ID',
  APPLY_PERSON_NAME   VARCHAR(500) NOT NULL COMMENT '申请人姓名',
  PORT                VARCHAR(500) COMMENT '送货港口',
  REMARK              VARCHAR(2000) COMMENT '备注',
  STATE               CHAR(200) COMMENT '单据申请状态：草稿、未发起（已经创建流程）、等待【xxx】审批、审批通过、审批未通过',
  WF_INST_ID          CHAR(36) COMMENT '工作流实例ID',
  ORIGIN              CHAR(1) COMMENT '单据提交来源，1 岸基；2 船舶端',
  SHIP_ID             CHAR(36) NOT NULL COMMENT '船舶ID',
  COMPANY_ID          CHAR(36) COMMENT '企业ID',
  IS_DEL              CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME              TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='燃油申请表';
ALTER TABLE SHIP_FUEL_APPLY ADD CONSTRAINT FK_SHIP_FUEL_APPLY_SHIP FOREIGN KEY (SHIP_ID) REFERENCES SYS_SHIPINFO (SHIP_ID);
ALTER TABLE SHIP_FUEL_APPLY ADD CONSTRAINT FK_SHIP_FUEL_APPLY_DEPARTMENT FOREIGN KEY (APPLY_DEPARTMENT_ID) REFERENCES SYS_DEPARTMENT (DEPARTMENT_ID);
ALTER TABLE SHIP_FUEL_APPLY ADD CONSTRAINT FK_SHIP_FUEL_APPLY_POST FOREIGN KEY (APPLY_PERSON_POSTID) REFERENCES SYS_POST (POST_ID);
ALTER TABLE SHIP_FUEL_APPLY ADD CONSTRAINT FK_SHIP_FUEL_APPLY_SCHEDULING FOREIGN KEY (SCHEDULING_ID) REFERENCES SHIP_VOYAGE_SCHEDULING (SCHEDULING_ID);

-- ----------------------------
-- Table structure for SHIP_FUEL_APPLY_DETAIL
-- ----------------------------
DROP TABLE IF EXISTS SHIP_FUEL_APPLY_DETAIL;
CREATE TABLE SHIP_FUEL_APPLY_DETAIL (
  FUEL_APPLY_DETAIL_ID  CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  FUEL_APPLY_ID         CHAR(36) NOT NULL COMMENT '燃油申请ID',
  FUEL_OIL_ID           CHAR(36) COMMENT '燃油ID(允许为空)',
  FUEL_OIL_CNAME        VARCHAR(500) NOT NULL COMMENT '名称',
  FUEL_OIL_SPEC         VARCHAR(500) COMMENT '规格',
  FUEL_OIL_MODEL        VARCHAR(500) COMMENT '型号',
  UNIT_NAME             VARCHAR(500) COMMENT '单位（吨）',
  FUEL_OIL_MEMO         VARCHAR(2000) COMMENT '参数',
  FUEL_TYPE             CHAR(1) COMMENT '1 轻油；2 重油',
  APPLY_COUNT           DECIMAL(18,4) NOT NULL COMMENT '申请数量',
  APPROVE_COUNT         DECIMAL(18,4) COMMENT '批准数量',
  ORDER_ID              VARCHAR(20) COMMENT '排序',
  SHIP_STORAGE          DECIMAL(18,4) COMMENT '船存数量',
  REMARK                VARCHAR(2000) COMMENT '备注',
  SHIP_ID               CHAR(36) COMMENT '船舶ID',
  COMPANY_ID            CHAR(36) COMMENT '企业ID',
  IS_DEL                CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME                TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='燃油申请明细表\r\n明细内容填写后需要对燃油信息表进行更新，抑或直接让起在燃油基础信息里面选择';
ALTER TABLE SHIP_FUEL_APPLY_DETAIL ADD CONSTRAINT FK_SHIP_FUEL_APPLY_DETAIL_SHIP FOREIGN KEY (SHIP_ID) REFERENCES SYS_SHIPINFO (SHIP_ID);
ALTER TABLE SHIP_FUEL_APPLY_DETAIL ADD CONSTRAINT FK_SHIP_FUEL_APPLY_DETAIL_APPLY FOREIGN KEY (FUEL_APPLY_ID) REFERENCES SHIP_FUEL_APPLY (FUEL_APPLY_ID);
ALTER TABLE SHIP_FUEL_APPLY_DETAIL ADD CONSTRAINT FK_SHIP_FUEL_APPLY_DETAIL_FUEL FOREIGN KEY (FUEL_OIL_ID) REFERENCES SHIP_FUEL_OIL (FUEL_OIL_ID);

-- ----------------------------
-- Table structure for SHIP_TANK
-- ----------------------------
DROP TABLE IF EXISTS SHIP_TANK;
CREATE TABLE SHIP_TANK (
  TANK_ID         CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  TANK_TYPE       CHAR(1) NOT NULL COMMENT '舱类型，1 燃油；2 滑油；3 淡水；4 压载；5 液位；6 货舱；7化学试剂；8其他',
  TANK_CNAME      VARCHAR(500) NOT NULL COMMENT '中文名称',
  TANK_ENAME      VARCHAR(500) COMMENT '英文名称',
  TANK_VOLUME     DECIMAL(8,2) NOT NULL COMMENT '净容积单位立方米',
  TANK_DEP        DECIMAL(8,2) NOT NULL COMMENT '总深单位M',
  CABIN_POSITION  VARCHAR(500) COMMENT '舱柜位置',
  MEMO            VARCHAR(2000) COMMENT '备注',
  ORIGIN          CHAR(1) NOT NULL COMMENT '数据来源，1 岸基；2 船端；3 初始化',
  SHIP_ID         CHAR(36) NOT NULL COMMENT '船舶ID',
  COMPANY_ID      CHAR(36) COMMENT '企业ID',
  IS_DEL          CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME          TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='船舱信息表';
ALTER TABLE SHIP_TANK ADD CONSTRAINT FK_SHIP_TANK_SHIP FOREIGN KEY (SHIP_ID) REFERENCES SYS_SHIPINFO (SHIP_ID);

-- ----------------------------
-- Table structure for SHIP_STORAGE
-- ----------------------------
DROP TABLE IF EXISTS SHIP_STORAGE;
CREATE TABLE SHIP_STORAGE (
  STORAGE_ID      CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  STORAGE_NAME    VARCHAR(500) NOT NULL COMMENT '仓库名称',
  STORAGE_CODE    VARCHAR(500) COMMENT '仓库编码',
  STORAGE_IS_LAND CHAR(1) COMMENT '是否岸端，0 否；1 是',
  STORAGE_TYPE    CHAR(2) COMMENT '仓库类型，1 备件；2 物料；3 滑油；4 燃油；5 水',
  STORAGE_PLACE   VARCHAR(500) COMMENT '仓库地点',
  SORTID          INTEGER(11) COMMENT '排序号',
  REMARK          VARCHAR(2000) COMMENT '备注',
  SHIP_ID         CHAR(36) COMMENT '船舶ID',
  COMPANY_ID      CHAR(36) COMMENT '企业ID',
  IS_DEL          CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME          TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='仓库信息表';
ALTER TABLE SHIP_STORAGE ADD CONSTRAINT FK_SHIP_STORAGE_SHIP FOREIGN KEY (SHIP_ID) REFERENCES SYS_SHIPINFO (SHIP_ID);

-- ----------------------------
-- Table structure for SHIP_STORAGE_DEPARTMENT
-- ----------------------------
DROP TABLE IF EXISTS SHIP_STORAGE_DEPARTMENT;
CREATE TABLE SHIP_STORAGE_DEPARTMENT (
  RELATION_ID   CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  STORAGE_ID    CHAR(36) NOT NULL COMMENT '仓库ID',
  DEPARTMENT_ID CHAR(36) COMMENT '部门ID',
  SHIP_ID       CHAR(36) COMMENT '船舶ID',
  COMPANY_ID    CHAR(36) COMMENT '企业ID',
  IS_DEL        CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME        TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='仓库部门关系表';
ALTER TABLE SHIP_STORAGE_DEPARTMENT ADD CONSTRAINT FK_SHIP_STORAGE_DEPARTMENT_SHIP FOREIGN KEY (SHIP_ID) REFERENCES SYS_SHIPINFO (SHIP_ID);
ALTER TABLE SHIP_STORAGE_DEPARTMENT ADD CONSTRAINT FK_SHIP_STORAGE_DEPARTMENT_DEPARTMENT FOREIGN KEY (DEPARTMENT_ID) REFERENCES SYS_DEPARTMENT (DEPARTMENT_ID);

-- ----------------------------
-- Table structure for SHIP_STORAGE_LOCATION
-- ----------------------------
DROP TABLE IF EXISTS SHIP_STORAGE_LOCATION;
CREATE TABLE SHIP_STORAGE_LOCATION (
  LOCATION_ID   CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  STORAGE_ID    CHAR(36) NOT NULL COMMENT '仓库ID',
  LOCATION_NAME VARCHAR(500) NOT NULL COMMENT '库位名称',
  LOCATION_CODE VARCHAR(500) COMMENT '库位编码',
  LOCATION_AREA VARCHAR(500) COMMENT '库位区域',
  REMARK        VARCHAR(2000) COMMENT '备注',
  SHIP_ID       CHAR(36) COMMENT '船舶ID',
  COMPANY_ID    CHAR(36) COMMENT '企业ID',
  IS_DEL        CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME        TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='仓库库位表';
ALTER TABLE SHIP_STORAGE_LOCATION ADD CONSTRAINT FK_SHIP_STORAGE_LOCATION_STORAGE FOREIGN KEY (STORAGE_ID) REFERENCES SHIP_STORAGE (STORAGE_ID);

-- ----------------------------
-- Table structure for SHIP_STOCKS
-- ----------------------------
DROP TABLE IF EXISTS SHIP_STOCKS;
CREATE TABLE SHIP_STOCKS (
  STOCKS_ID       CHAR(36) NOT NULL PRIMARY KEY COMMENT '库存ID',
  ITEM_ID         CHAR(36) NOT NULL COMMENT '物品ID可以是备件、物理、燃油、滑油和淡水的ID',
  POST_ID         CHAR(36) COMMENT '岗位ID',
  STORAGE_ID      CHAR(36) NOT NULL COMMENT '仓库ID',
  LOCATION_ID     CHAR(36) COMMENT '库位ID',
  STOCKS_TYPE     CHAR(2) NOT NULL COMMENT '物品类型，01 备件；02 物料；03 燃油；04 滑油；05 淡水；99 其他',
  ITEM_BATCH      VARCHAR(200) NOT NULL COMMENT '物品采购批次',
  ITEM_PRICE      DECIMAL(8,2) NOT NULL COMMENT '物品价格',
  EFFECTIVE_DATE  DATETIME COMMENT '物品有效期',
  ITEM_NUMBER     DECIMAL(18,4) NOT NULL COMMENT '物品数量',
  REMARK          VARCHAR(2000) COMMENT '备注',
  SORTID          INTEGER(11) NOT NULL COMMENT '排序号',
  SHIP_OR_LAND    CHAR(1) NOT NULL COMMENT '船端或岸基，0 岸基；1 船端',
  SHIP_ID         CHAR(36) COMMENT '船舶ID，当是岸基库存的时候此字段为空',
  COMPANY_ID      CHAR(36) NOT NULL COMMENT '企业ID',
  IS_DEL          CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME          TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='库存表\r\n初始情况与SHIP_INITIALIZE_STOCKS表内数据一致，待盘点后出现变化';
ALTER TABLE SHIP_STOCKS ADD CONSTRAINT FK_SHIP_STOCKS_SHIP FOREIGN KEY (SHIP_ID) REFERENCES SYS_SHIPINFO (SHIP_ID);
ALTER TABLE SHIP_STOCKS ADD CONSTRAINT FK_SHIP_STOCKS_POST FOREIGN KEY (POST_ID) REFERENCES SYS_POST (POST_ID);

-- ----------------------------
-- Table structure for SHIP_STOCKS_WARN
-- ----------------------------
DROP TABLE IF EXISTS SHIP_STOCKS_WARN;
CREATE TABLE SHIP_STOCKS_WARN (
  STOCKS_WARN_ID  CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  ITEM_ID         CHAR(36) COMMENT '物品ID',
  MAX_STOCK       DECIMAL(18,4) COMMENT '最大库存',
  MIN_STOCK       DECIMAL(18,4) NOT NULL COMMENT '最低库存',
  REMARK          VARCHAR(2000) COMMENT '备注',
  COMPANY_ID      CHAR(36) COMMENT '企业ID',
  IS_DEL          CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME          TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间',
  SHIP_ID         CHAR(36)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='库存报警表';
ALTER TABLE SHIP_STOCKS_WARN ADD CONSTRAINT FK_SHIP_STOCKS_WARN_SHIP FOREIGN KEY (SHIP_ID) REFERENCES SYS_SHIPINFO (SHIP_ID);

-- ----------------------------
-- Table structure for SHIP_STOCK_INOUT
-- ----------------------------
DROP TABLE IF EXISTS SHIP_STOCK_INOUT;
CREATE TABLE SHIP_STOCK_INOUT (
  STOCK_INOUT_ID        CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  SCHEDULING_ID         CHAR(36) COMMENT '航次计划ID',
  STOCK_INOUT_CODE      VARCHAR(200) COMMENT '出入库编码',
  STOCK_INOUT_DATE      DATETIME NOT NULL COMMENT '出入库时间',
  STOCK_INOUT_TYPE      CHAR(1) NOT NULL COMMENT '出入库动作，1 出库；2 入库',
  STOCK_INOUT_CATEGORY  CHAR(3) COMMENT '出入库类型，101 正常出库；102 保养出库；103 修理出库；104 盘点出库；105 报废出库；106故障出库；201 正常入库；202 翻新入库；204 盘点入库',
  STOCK_INOUT_USERID    CHAR(36) COMMENT '出入库操作人ID',
  APPLY_DEP_ID          CHAR(36) COMMENT '船舶端申请部门',
  STOCK_INOUT_POSTID    CHAR(36) COMMENT '出入库人岗位ID',
  STOCK_INOUT_NATURE    CHAR(2) COMMENT '物品类型，01 备件；02 物料；03 燃油；04 滑油；05 淡水；07化学试剂；99 其他',
  STOCK_CHECK_STATUS    CHAR(1) COMMENT '盘点状态，1 未盘点；2 已盘点',
  REMARK                VARCHAR(2000) COMMENT '备注',
  IS_LAND               CHAR(1) COMMENT '来源，1 岸基；2 船端',
  STATUS                VARCHAR(200) COMMENT '单据申请状态：未提交、未提交（已经创建流程）、等待【xxx】审批、审批通过、审批未通过',
  WF_INST_ID            CHAR(36) COMMENT '工作流实例ID',
  SHIP_ID               CHAR(36) COMMENT '船舶ID',
  COMPANY_ID            CHAR(36) COMMENT '企业ID',
  IS_DEL                CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME                TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='出入库主表';
ALTER TABLE SHIP_STOCK_INOUT ADD CONSTRAINT FK_SHIP_STOCK_INOUT_SHIP FOREIGN KEY (SHIP_ID) REFERENCES SYS_SHIPINFO (SHIP_ID);
ALTER TABLE SHIP_STOCK_INOUT ADD CONSTRAINT FK_SHIP_STOCK_INOUT_POST FOREIGN KEY (STOCK_INOUT_POSTID) REFERENCES SYS_POST (POST_ID);
ALTER TABLE SHIP_STOCK_INOUT ADD CONSTRAINT FK_SHIP_STOCK_INOUT_USER FOREIGN KEY (STOCK_INOUT_USERID) REFERENCES SYS_USER (USER_ID);
ALTER TABLE SHIP_STOCK_INOUT ADD CONSTRAINT FK_SHIP_STOCK_INOUT_SCHEDULING FOREIGN KEY (SCHEDULING_ID) REFERENCES SHIP_VOYAGE_SCHEDULING (SCHEDULING_ID);

-- ----------------------------
-- Table structure for SHIP_STOCKS_IN
-- ----------------------------
DROP TABLE IF EXISTS SHIP_STOCKS_IN;
CREATE TABLE SHIP_STOCKS_IN (
  STOCKS_IN_ID      CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  STOCK_INOUT_ID    CHAR(36) NOT NULL COMMENT '出入库主表ID',
  ITEM_ID           CHAR(36) COMMENT '物品ID',
  POST_ID           CHAR(36) COMMENT '岗位ID',
  STORAGE_ID        CHAR(36) COMMENT '仓库ID',
  LOCATION_ID       CHAR(36) COMMENT '库位ID',
  STOCKS_IN_NUMBER  DECIMAL(8,2) NOT NULL COMMENT '入库数量',
  STOCKS_TYPE       CHAR(2) COMMENT '物品类型，01 备件；02 物料；03 燃油；04 滑油；05 淡水；99 其他',
  ITEM_BATCH        VARCHAR(200) COMMENT '物品采购批次',
  ITEM_PRICE        DECIMAL(8,2) COMMENT '物品价格',
  EFFECTIVE_DATE    DATETIME COMMENT '物品有效期',
  SORTID            INTEGER(11) COMMENT '排序号',
  SHIP_ID           CHAR(36) NOT NULL COMMENT '船舶ID',
  COMPANY_ID        CHAR(36) COMMENT '企业ID',
  IS_DEL            CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME            TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='入库明细表';
ALTER TABLE SHIP_STOCKS_IN ADD CONSTRAINT FK_SHIP_STOCKS_IN_SHIP FOREIGN KEY (SHIP_ID) REFERENCES SYS_SHIPINFO (SHIP_ID);
ALTER TABLE SHIP_STOCKS_IN ADD CONSTRAINT FK_SHIP_STOCKS_IN_POST FOREIGN KEY (POST_ID) REFERENCES SYS_POST (POST_ID);
ALTER TABLE SHIP_STOCKS_IN ADD CONSTRAINT FK_SHIP_STOCKS_IN_MAIN FOREIGN KEY (STOCK_INOUT_ID) REFERENCES SHIP_STOCK_INOUT (STOCK_INOUT_ID);

-- ----------------------------
-- Table structure for SHIP_STOCKS_OUT
-- ----------------------------
DROP TABLE IF EXISTS SHIP_STOCKS_OUT;
CREATE TABLE SHIP_STOCKS_OUT (
  STOCKS_OUT_ID     CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  STOCK_INOUT_ID    CHAR(36) NOT NULL COMMENT '出入库主表ID',
  ITEM_ID           CHAR(36) COMMENT '物品ID',
  POST_ID           CHAR(36) COMMENT '岗位ID',
  STORAGE_ID        CHAR(36) COMMENT '仓库ID',
  LOCATION_ID       CHAR(36) COMMENT '库位ID',
  STOCKS_OUT_NUMBER DECIMAL(8,2) COMMENT '出库数量',
  STOCKS_TYPE       CHAR(2) COMMENT '物品类型，01 备件；02 物料；03 燃油；04 滑油；05 淡水；99 其他',
  ITEM_BATCH        VARCHAR(200) COMMENT '物品采购批次',
  ITEM_PRICE        DECIMAL(8,2) COMMENT '物品价格',
  EFFECTIVE_DATE    DATETIME COMMENT '物品有效期',
  SORTID            INTEGER(11) COMMENT '排序号',
  SHIP_ID           CHAR(36) NOT NULL COMMENT '船舶ID',
  COMPANY_ID        CHAR(36) COMMENT '企业ID',
  IS_DEL            CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME            TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='出库明细表';
ALTER TABLE SHIP_STOCKS_OUT ADD CONSTRAINT FK_SHIP_STOCKS_OUT_SHIP FOREIGN KEY (SHIP_ID) REFERENCES SYS_SHIPINFO (SHIP_ID);
ALTER TABLE SHIP_STOCKS_OUT ADD CONSTRAINT FK_SHIP_STOCKS_OUT_POST FOREIGN KEY (POST_ID) REFERENCES SYS_POST (POST_ID);
ALTER TABLE SHIP_STOCKS_OUT ADD CONSTRAINT FK_SHIP_STOCKS_OUT_MAIN FOREIGN KEY (STOCK_INOUT_ID) REFERENCES SHIP_STOCK_INOUT (STOCK_INOUT_ID);

-- ----------------------------
-- Table structure for SHIP_INITIALIZE_STOCKS
-- ----------------------------
DROP TABLE IF EXISTS SHIP_INITIALIZE_STOCKS;
CREATE TABLE SHIP_INITIALIZE_STOCKS (
  STOCKS_ID       CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  ITEM_ID         CHAR(36) COMMENT '物品ID',
  POST_ID         CHAR(36) COMMENT '岗位ID',
  STORAGE_ID      CHAR(36) COMMENT '仓库ID',
  LOCATION_ID     CHAR(36) COMMENT '库位ID',
  STOCKS_TYPE     CHAR(2) COMMENT '物品类型，01 备件；02 物料；03 燃油；04 滑油；05 淡水；99 其他',
  ITEM_BATCH      VARCHAR(200) COMMENT '物品批次，初始化的时候统一为一个值即可',
  ITEM_PRICE      DECIMAL(8,2) COMMENT '物品价格',
  EFFECTIVE_DATE  DATETIME COMMENT '物品有效期',
  ITEM_NUMBER     DECIMAL(18,4) COMMENT '物品数量',
  SORTID          INTEGER(11) COMMENT '排序号',
  SHIP_ID         CHAR(36) COMMENT '船舶ID当是岸基库存的时候此字段为空',
  COMPANY_ID      CHAR(36) COMMENT '企业ID',
  IS_DEL          CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME          TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='初始化的库存表';
ALTER TABLE SHIP_INITIALIZE_STOCKS ADD CONSTRAINT FK_SHIP_INITIALIZE_STOCKS_SHIP FOREIGN KEY (SHIP_ID) REFERENCES SYS_SHIPINFO (SHIP_ID);
ALTER TABLE SHIP_INITIALIZE_STOCKS ADD CONSTRAINT FK_SHIP_INITIALIZE_STOCKS_POST FOREIGN KEY (POST_ID) REFERENCES SYS_POST (POST_ID);

-- ----------------------------
-- Table structure for SHIP_REPAIR_SCHEME
-- ----------------------------
DROP TABLE IF EXISTS SHIP_REPAIR_SCHEME;
CREATE TABLE SHIP_REPAIR_SCHEME (
  SCHEME_ID             CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  SCHEDULING_ID         CHAR(36) COMMENT '航次计划ID',
  SCHEME_DATE           DATETIME COMMENT '修理计划时间',
  REPAIR_SCHEME_TYPE    CHAR(1) COMMENT '修理计划类型，1 五年；2 年度',
  REPAIR_TYPE           CHAR(1) COMMENT '修理类型，1 甲板机械；2 机舱；3 通讯导航；4 办公用品',
  SCHEME_APPROVAL_DATE  DATETIME COMMENT '修理计划审核时间',
  APPROVAL_STATUS       CHAR(1) COMMENT '状态，9 岸基同意下发',
  WF_INST_ID            CHAR(36) COMMENT '工作流实例ID',
  STATUS                VARCHAR(200) COMMENT '单据申请状态：草稿、未发起（已经创建流程）、等待【xxx】审批、审批通过、审批未通过',
  IS_LAND               CHAR(1) COMMENT '来源，1 岸基；2 船端',
  REPAIR_DATE           DATETIME COMMENT '进厂时间',
  PERSON_ID             CHAR(36) COMMENT '申请人',
  CAPTAIN               VARCHAR(200) COMMENT '船长',
  CHIEFENGINEE          VARCHAR(200) COMMENT '轮机长',
  CHIEFMATE             VARCHAR(200) COMMENT '大副',
  REMARK                VARCHAR(2000) COMMENT '备注',
  DEPARTMENT_ID         VARCHAR(36) COMMENT '部门ID',
  SHIP_ID               CHAR(36) NOT NULL COMMENT '船舶ID',
  COMPANY_ID            CHAR(36) COMMENT '企业ID',
  IS_DEL                CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME                TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='修理（大修）计划表';
ALTER TABLE SHIP_REPAIR_SCHEME ADD CONSTRAINT FK_SHIP_REPAIR_SCHEME_SHIP FOREIGN KEY (SHIP_ID) REFERENCES SYS_SHIPINFO (SHIP_ID);
ALTER TABLE SHIP_REPAIR_SCHEME ADD CONSTRAINT FK_SHIP_REPAIR_SCHEME_PERSON FOREIGN KEY (PERSON_ID) REFERENCES SYS_PERSON (PERSON_ID);
ALTER TABLE SHIP_REPAIR_SCHEME ADD CONSTRAINT FK_SHIP_REPAIR_SCHEME_SCHEDULING FOREIGN KEY (SCHEDULING_ID) REFERENCES SHIP_VOYAGE_SCHEDULING (SCHEDULING_ID);

-- ----------------------------
-- Table structure for SHIP_REPAIR_SCHEME_DETAIL
-- ----------------------------
DROP TABLE IF EXISTS SHIP_REPAIR_SCHEME_DETAIL;
CREATE TABLE SHIP_REPAIR_SCHEME_DETAIL (
  REPAIR_SCHEME_DETAIL_ID   CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  SCHEME_ID                 CHAR(36) COMMENT '修理计划ID',
  MAINTENANCE_ID            CHAR(36) COMMENT '维护保养ID',
  COMPONENT_ID              CHAR(36) COMMENT '设备ID',
  COMPONENT_NAME            VARCHAR(200) COMMENT '设备名称',
  REPAIR_TYPE               CHAR(1) NOT NULL COMMENT '修理类型，1 甲板机械；2 机舱；3 通讯导航；4 办公用品',
  REPAIR_CONTENT            VARCHAR(2000) COMMENT '修理内容',
  REPAIR_COMPLETED_DATE     DATETIME COMMENT '修理完成日期',
  REPAIR_COMPLETED_CONTENT  VARCHAR(2000) COMMENT '修理完成内容',
  REMARK                    VARCHAR(2000) COMMENT '备注',
  REPAIR_STATUS             CHAR(1) COMMENT '修理状态，1 未完成；9 完成',
  STATUS                    CHAR(200) COMMENT '单据申请状态：草稿、未发起（已经创建流程）、等待【xxx】审批、审批通过、审批未通过',
  SHIP_ID                   CHAR(36) NOT NULL COMMENT '船舶ID',
  COMPANY_ID                CHAR(36) COMMENT '企业ID',
  IS_DEL                    CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME                    TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='大修计划明细表';
ALTER TABLE SHIP_REPAIR_SCHEME_DETAIL ADD CONSTRAINT FK_SHIP_REPAIR_SCHEME_DETAIL_SHIP FOREIGN KEY (SHIP_ID) REFERENCES SYS_SHIPINFO (SHIP_ID);
ALTER TABLE SHIP_REPAIR_SCHEME_DETAIL ADD CONSTRAINT FK_SHIP_REPAIR_SCHEME_DETAIL_SCHEME FOREIGN KEY (SCHEME_ID) REFERENCES SHIP_REPAIR_SCHEME (SCHEME_ID);
ALTER TABLE SHIP_REPAIR_SCHEME_DETAIL ADD CONSTRAINT FK_SHIP_REPAIR_SCHEME_DETAIL_COMPONENT FOREIGN KEY (COMPONENT_ID) REFERENCES SHIP_COMPONENT (COMPONENT_ID);
ALTER TABLE SHIP_REPAIR_SCHEME_DETAIL ADD CONSTRAINT FK_SHIP_REPAIR_SCHEME_DETAIL_MAINTENANCE FOREIGN KEY (MAINTENANCE_ID) REFERENCES SHIP_MAINTENANCE (MAINTENANCE_ID);

-- ----------------------------
-- Table structure for SHIP_REPAIR_SCHEDULING
-- ----------------------------
DROP TABLE IF EXISTS SHIP_REPAIR_SCHEDULING;
CREATE TABLE SHIP_REPAIR_SCHEDULING (
  REPAIR_SCHEDULING_ID  CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  REPAIR_CONVERT_ID     CHAR(36) COMMENT '航修转自修或自修转航修，两个主表单对应的ID属性信息',
  SCHEDULING_ID         CHAR(36) COMMENT '航次计划ID',
  REPAIR_CATEGORY       CHAR(1) COMMENT '修理分类，1 航次修理；2 扩大自修',
  REPAIR_TYPE           CHAR(2) COMMENT '修理审批类型，01 轮机；02 甲板；03 通导；04 电器；99 其他',
  REPAIR_SCHEME_DATE    DATETIME COMMENT '计划修理时间',
  REPAIR_SCHEME_PORT    VARCHAR(200) COMMENT '计划修理港口',
  IS_LAND               CHAR(1) COMMENT '单据提交来源，1 岸基；2 船舶端',
  STATUS                VARCHAR(200) COMMENT '单据申请状态：未提交、未提交（已经创建流程）、等待【xxx】审批、审批通过、审批未通过',
  WF_INST_ID            CHAR(36) COMMENT '工作流实例ID',
  CAPTAIN               VARCHAR(200) COMMENT '船长',
  PERSON_ID             CHAR(36) COMMENT '申请人',
  CHIEFENGINEE          VARCHAR(200) COMMENT '轮机长',
  CHIEFMATE             VARCHAR(200) COMMENT '大副',
  REMARK                VARCHAR(2000) COMMENT '备注',
  APPROVAL_DATE         DATETIME COMMENT '申请日期',
  APPROVAL_STATUS       CHAR(2) COMMENT '状态，9 岸基同意下发',
  DEPARTMENT_ID         VARCHAR(36) COMMENT '部门ID',
  SHIP_ID               CHAR(36) NOT NULL COMMENT '船舶ID',
  COMPANY_ID            CHAR(36) COMMENT '企业ID',
  IS_DEL                CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME                TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='航修、扩大自修表';
ALTER TABLE SHIP_REPAIR_SCHEDULING ADD CONSTRAINT FK_SHIP_REPAIR_SCHEDULING_SHIP FOREIGN KEY (SHIP_ID) REFERENCES SYS_SHIPINFO (SHIP_ID);
ALTER TABLE SHIP_REPAIR_SCHEDULING ADD CONSTRAINT FK_SHIP_REPAIR_SCHEDULING_PERSON FOREIGN KEY (PERSON_ID) REFERENCES SYS_PERSON (PERSON_ID);
ALTER TABLE SHIP_REPAIR_SCHEDULING ADD CONSTRAINT FK_SHIP_REPAIR_SCHEDULING_SCHEDULING FOREIGN KEY (SCHEDULING_ID) REFERENCES SHIP_VOYAGE_SCHEDULING (SCHEDULING_ID);

-- ----------------------------
-- Table structure for SHIP_REPAIR_SCHEDULING_DETAIL
-- ----------------------------
DROP TABLE IF EXISTS SHIP_REPAIR_SCHEDULING_DETAIL;
CREATE TABLE SHIP_REPAIR_SCHEDULING_DETAIL (
  REPAIR_SCHEDULING_DETAIL_ID CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  REPAIR_SCHEDULING_ID        CHAR(36) COMMENT '航次修理ID',
  MAINTENANCE_ID              CHAR(36) COMMENT '维护保养ID',
  COMPONENT_ID                CHAR(36) COMMENT '设备ID',
  COMPONENT_NAME              VARCHAR(200) COMMENT '设备名称',
  REPAIR_TYPE                 CHAR(1) NOT NULL COMMENT '修理类型，1 甲板机械；2 机舱；3 通讯导航；4 办公用品',
  REPAIR_CONTENT              VARCHAR(2000) COMMENT '修理内容',
  REPAIR_SCHEME_DATE          DATETIME COMMENT '计划修理时间',
  REPAIR_COMPLETED_DATE       DATETIME COMMENT '修理完成日期',
  REPAIR_COMPLETED_CONTENT    VARCHAR(2000) COMMENT '修理完成内容',
  REMARK                      VARCHAR(2000) COMMENT '备注',
  REPAIR_STATUS               CHAR(1) COMMENT '修理状态，1 未提交；2 审批中；3 已委托；4 已审批；5 已委托并已审批；6 未完成；9 完成',
  IS_BONUS_STATUS             CHAR(1) COMMENT '是否已经申请过奖金，0 未申请；1 申请中；8 申请未通过；9 申请通过',
  STATUS                      CHAR(200) COMMENT '单据申请状态：草稿、未发起（已经创建流程）、等待【xxx】审批、审批通过、审批未通过',
  REPAIR_USER_ID              CHAR(36) COMMENT '修理申请人',
  REPAIR_POST_ID              CHAR(36) COMMENT '修理人岗位',
  SHIP_ID                     CHAR(36) NOT NULL COMMENT '船舶ID',
  COMPANY_ID                  CHAR(36) COMMENT '企业ID',
  IS_DEL                      CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME                      TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='航修、扩大自修明细表';
ALTER TABLE SHIP_REPAIR_SCHEDULING_DETAIL ADD CONSTRAINT FK_SHIP_REPAIR_SCHEDULING_DETAIL_SHIP FOREIGN KEY (SHIP_ID) REFERENCES SYS_SHIPINFO (SHIP_ID);
ALTER TABLE SHIP_REPAIR_SCHEDULING_DETAIL ADD CONSTRAINT FK_SHIP_REPAIR_SCHEDULING_DETAIL_SCHEDULING FOREIGN KEY (REPAIR_SCHEDULING_ID) REFERENCES SHIP_REPAIR_SCHEDULING (REPAIR_SCHEDULING_ID);
ALTER TABLE SHIP_REPAIR_SCHEDULING_DETAIL ADD CONSTRAINT FK_SHIP_REPAIR_SCHEDULING_DETAIL_COMPONENT FOREIGN KEY (COMPONENT_ID) REFERENCES SHIP_COMPONENT (COMPONENT_ID);
ALTER TABLE SHIP_REPAIR_SCHEDULING_DETAIL ADD CONSTRAINT FK_SHIP_REPAIR_SCHEDULING_DETAIL_MAINTENANCE FOREIGN KEY (MAINTENANCE_ID) REFERENCES SHIP_MAINTENANCE (MAINTENANCE_ID);

-- ----------------------------
-- Table structure for SHIP_REPAIR_COMPLETED
-- ----------------------------
DROP TABLE IF EXISTS SHIP_REPAIR_COMPLETED;
CREATE TABLE SHIP_REPAIR_COMPLETED (
  REPAIR_COMPLETED_ID         CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  REPAIR_SCHEDULING_DETAIL_ID CHAR(36) COMMENT '修理单ID',
  REPAIR_SCHEME_DETAIL_ID     CHAR(36) COMMENT '工作信息计划ID',
  REPAIR_SUPPLIER_ID          CHAR(36) COMMENT '修理厂商ID',
  REPAIR_SUPPLIER_NAME        VARCHAR(200) COMMENT '修理厂商名称',
  REPAIR_COMPLETED_USER_ID    CHAR(36) COMMENT '修理申请人',
  REPAIR_COMPLETED_POST_ID    CHAR(36) COMMENT '修理人岗位',
  REPAIR_COMPLETED_DATE       DATETIME COMMENT '修理完成日期',
  REPAIR_STATUS               CHAR(1) COMMENT '修理状态，1 未完成；9 完成',
  REPAIR_COST                 DECIMAL(8,2) NOT NULL COMMENT '修理费用',
  COST_UNIT                   VARCHAR(200) NOT NULL COMMENT '费用单位',
  COST_TYPE                   CHAR(1) NOT NULL COMMENT '费用类型，1 修理；2 检验；3 保险',
  REMARKT                     VARCHAR(2000) COMMENT '备注',
  SHIP_ID                     CHAR(36) NOT NULL COMMENT '船舶ID',
  COMPANY_ID                  CHAR(36) COMMENT '企业ID',
  IS_DEL                      CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME                      TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='修理完工表';
ALTER TABLE SHIP_REPAIR_COMPLETED ADD CONSTRAINT FK_SHIP_REPAIR_COMPLETED_SHIP FOREIGN KEY (SHIP_ID) REFERENCES SYS_SHIPINFO (SHIP_ID);
ALTER TABLE SHIP_REPAIR_COMPLETED ADD CONSTRAINT FK_SHIP_REPAIR_COMPLETED_POST FOREIGN KEY (REPAIR_COMPLETED_POST_ID) REFERENCES SYS_POST (POST_ID);
ALTER TABLE SHIP_REPAIR_COMPLETED ADD CONSTRAINT FK_SHIP_REPAIR_COMPLETED_USER FOREIGN KEY (REPAIR_COMPLETED_USER_ID) REFERENCES SYS_USER (USER_ID);
ALTER TABLE SHIP_REPAIR_COMPLETED ADD CONSTRAINT FK_SHIP_REPAIR_COMPLETED_SCHEME_DETAIL FOREIGN KEY (REPAIR_SCHEME_DETAIL_ID) REFERENCES SHIP_REPAIR_SCHEME_DETAIL (REPAIR_SCHEME_DETAIL_ID);
ALTER TABLE SHIP_REPAIR_COMPLETED ADD CONSTRAINT FK_SHIP_REPAIR_COMPLETED_SCHEDULING_DETAIL FOREIGN KEY (REPAIR_SCHEDULING_DETAIL_ID) REFERENCES SHIP_REPAIR_SCHEDULING_DETAIL (REPAIR_SCHEDULING_DETAIL_ID);

-- ----------------------------
-- Table structure for SHIP_REPAIR_ENTRUST
-- ----------------------------
DROP TABLE IF EXISTS SHIP_REPAIR_ENTRUST;
CREATE TABLE SHIP_REPAIR_ENTRUST (
  REPAIR_ENTRUST_ID           CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  REPAIR_SCHEDULING_DETAIL_ID CHAR(36) COMMENT '修理单ID',
  ENTRUST_USER_ID             CHAR(36) COMMENT '修理申请人',
  ENTRUST_POST_ID             CHAR(36) COMMENT '修理人岗位',
  ENTRUST_SUPPLIER_ID         CHAR(36) COMMENT '修理厂商ID',
  ENTRUST_SUPPLIER_NAME       VARCHAR(200) COMMENT '修理厂商名称',
  SHIP_ID                     CHAR(36) NOT NULL COMMENT '船舶ID',
  COMPANY_ID                  CHAR(36) COMMENT '企业ID',
  IS_DEL                      CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME                      TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='修理委托表';
ALTER TABLE SHIP_REPAIR_ENTRUST ADD CONSTRAINT FK_SHIP_REPAIR_ENTRUST_SHIP FOREIGN KEY (SHIP_ID) REFERENCES SYS_SHIPINFO (SHIP_ID);
ALTER TABLE SHIP_REPAIR_ENTRUST ADD CONSTRAINT FK_SHIP_REPAIR_ENTRUST_POST FOREIGN KEY (ENTRUST_POST_ID) REFERENCES SYS_POST (POST_ID);
ALTER TABLE SHIP_REPAIR_ENTRUST ADD CONSTRAINT FK_SHIP_REPAIR_ENTRUST_USER FOREIGN KEY (ENTRUST_USER_ID) REFERENCES SYS_USER (USER_ID);
ALTER TABLE SHIP_REPAIR_ENTRUST ADD CONSTRAINT FK_SHIP_REPAIR_ENTRUST_SCHEDULING_DETAIL FOREIGN KEY (REPAIR_SCHEDULING_DETAIL_ID) REFERENCES SHIP_REPAIR_SCHEDULING_DETAIL (REPAIR_SCHEDULING_DETAIL_ID);

-- ----------------------------
-- Table structure for SHIP_REPAIR_FEEDBACK
-- ----------------------------
DROP TABLE IF EXISTS SHIP_REPAIR_FEEDBACK;
CREATE TABLE SHIP_REPAIR_FEEDBACK (
  REPAIR_FEEDBACK_ID          CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  REPAIR_SCHEDULING_DETAIL_ID CHAR(36) NOT NULL COMMENT '修理单ID',
  FEEDBACK_USER_ID            CHAR(36) COMMENT '修理申请人',
  FEEDBACK_POST_ID            CHAR(36) COMMENT '修理人岗位',
  FEEDBACK_CONTENT            VARCHAR(2000) COMMENT '修理反馈内容',
  SHIP_ID                     CHAR(36) NOT NULL COMMENT '船舶ID',
  COMPANY_ID                  CHAR(36) COMMENT '企业ID',
  IS_DEL                      CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME                      TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='修理反馈表';
ALTER TABLE SHIP_REPAIR_FEEDBACK ADD CONSTRAINT FK_SHIP_REPAIR_FEEDBACK_SHIP FOREIGN KEY (SHIP_ID) REFERENCES SYS_SHIPINFO (SHIP_ID);
ALTER TABLE SHIP_REPAIR_FEEDBACK ADD CONSTRAINT FK_SHIP_REPAIR_FEEDBACK_POST FOREIGN KEY (FEEDBACK_POST_ID) REFERENCES SYS_POST (POST_ID);
ALTER TABLE SHIP_REPAIR_FEEDBACK ADD CONSTRAINT FK_SHIP_REPAIR_FEEDBACK_USER FOREIGN KEY (FEEDBACK_USER_ID) REFERENCES SYS_USER (USER_ID);
ALTER TABLE SHIP_REPAIR_FEEDBACK ADD CONSTRAINT FK_SHIP_REPAIR_FEEDBACK_SCHEDULING_DETAIL FOREIGN KEY (REPAIR_SCHEDULING_DETAIL_ID) REFERENCES SHIP_REPAIR_SCHEDULING_DETAIL (REPAIR_SCHEDULING_DETAIL_ID);

-- ----------------------------
-- Table structure for SHIP_REPAIR_BONUS
-- ----------------------------
DROP TABLE IF EXISTS SHIP_REPAIR_BONUS;
CREATE TABLE SHIP_REPAIR_BONUS (
  REPAIR_BONUS_ID     CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  SCHEDULING_ID       CHAR(36) COMMENT '航次计划ID',
  APPLY_DEPARTMENT_ID CHAR(36) COMMENT '奖金申请部门',
  APPLY_USER_ID       CHAR(36) COMMENT '奖金申请人',
  APPLY_POST_ID       CHAR(36) COMMENT '奖金申请人岗位ID',
  BONUS_APPLY_CODE    VARCHAR(500) COMMENT '奖金申请编码',
  CAPTAIN             VARCHAR(200) COMMENT '船长',
  CHIEFENGINEE        VARCHAR(200) COMMENT '轮机长',
  CHIEFMATE           VARCHAR(200) COMMENT '大副',
  REMARK              VARCHAR(2000) COMMENT '备注',
  AGREE_BONUS         DECIMAL(8,2) COMMENT '批准金额',
  APPLY_BONUS         DECIMAL(8,2) COMMENT '申请奖金',
  APPLY_DATE          DATETIME NOT NULL COMMENT '申请日期',
  STATUS              VARCHAR(200) NOT NULL COMMENT '单据申请状态：草稿、未发起（已经创建流程）、等待【xxx】审批、审批通过、审批未通过',
  IS_LAND             CHAR(1) COMMENT '单据提交来源，1 岸基；2 船舶端',
  SHIP_ID             CHAR(36) NOT NULL COMMENT '船舶ID',
  COMPANY_ID          CHAR(36) COMMENT '企业ID',
  IS_DEL              CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME              TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='扩大自修奖金申请主表';
ALTER TABLE SHIP_REPAIR_BONUS ADD CONSTRAINT FK_SHIP_REPAIR_BONUS_SHIP FOREIGN KEY (SHIP_ID) REFERENCES SYS_SHIPINFO (SHIP_ID);
ALTER TABLE SHIP_REPAIR_BONUS ADD CONSTRAINT FK_SHIP_REPAIR_BONUS_DEPARTMENT FOREIGN KEY (APPLY_DEPARTMENT_ID) REFERENCES SYS_DEPARTMENT (DEPARTMENT_ID);
ALTER TABLE SHIP_REPAIR_BONUS ADD CONSTRAINT FK_SHIP_REPAIR_BONUS_POST FOREIGN KEY (APPLY_POST_ID) REFERENCES SYS_POST (POST_ID);
ALTER TABLE SHIP_REPAIR_BONUS ADD CONSTRAINT FK_SHIP_REPAIR_BONUS_USER FOREIGN KEY (APPLY_USER_ID) REFERENCES SYS_USER (USER_ID);
ALTER TABLE SHIP_REPAIR_BONUS ADD CONSTRAINT FK_SHIP_REPAIR_BONUS_SCHEDULING FOREIGN KEY (SCHEDULING_ID) REFERENCES SHIP_VOYAGE_SCHEDULING (SCHEDULING_ID);

-- ----------------------------
-- Table structure for SHIP_REPAIR_BONUS_DETAIL
-- ----------------------------
DROP TABLE IF EXISTS SHIP_REPAIR_BONUS_DETAIL;
CREATE TABLE SHIP_REPAIR_BONUS_DETAIL (
  REPAIR_BONUS_DETAIL_ID      CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  REPAIR_BONUS_ID             CHAR(36) COMMENT '奖金申请单ID',
  REPAIR_SCHEDULING_DETAIL_ID CHAR(36) NOT NULL COMMENT '修理单ID',
  AFTER_REPAIR_STATUS         VARCHAR(200) COMMENT '修理后运转状态',
  REMARK                      VARCHAR(2000) COMMENT '备注',
  AGREE_BONUS                 DECIMAL(8,2) COMMENT '批准金额',
  APPLY_BONUS                 DECIMAL(8,2) COMMENT '申请奖金',
  ORDER_ID                    CHAR(1) COMMENT '排序号，按照申请单添加顺序',
  SHIP_ID                     CHAR(36) COMMENT '船舶ID',
  COMPANY_ID                  CHAR(36) COMMENT '企业ID',
  IS_DEL                      CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME                      TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='船舶扩大自修奖金申请单明细';
ALTER TABLE SHIP_REPAIR_BONUS_DETAIL ADD CONSTRAINT FK_SHIP_REPAIR_BONUS_DETAIL_SHIP FOREIGN KEY (SHIP_ID) REFERENCES SYS_SHIPINFO (SHIP_ID);
ALTER TABLE SHIP_REPAIR_BONUS_DETAIL ADD CONSTRAINT FK_SHIP_REPAIR_BONUS_DETAIL_SCHEDULING_DETAIL FOREIGN KEY (REPAIR_SCHEDULING_DETAIL_ID) REFERENCES SHIP_REPAIR_SCHEDULING_DETAIL (REPAIR_SCHEDULING_DETAIL_ID);
ALTER TABLE SHIP_REPAIR_BONUS_DETAIL ADD CONSTRAINT FK_SHIP_REPAIR_BONUS_DETAIL_BONUS FOREIGN KEY (REPAIR_BONUS_ID) REFERENCES SHIP_REPAIR_BONUS (REPAIR_BONUS_ID);

-- ----------------------------
-- Table structure for SYS_REPORT_FORM_TEMP
-- ----------------------------
DROP TABLE IF EXISTS SYS_REPORT_FORM_TEMP;
CREATE TABLE SYS_REPORT_FORM_TEMP (
  FORM_TEMP_ID 		CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  FORM_TEMP_CODE 	VARCHAR(50) COMMENT '模板编号',
  FORM_TEMP_TITLE VARCHAR(200) COMMENT '模板标题',
  REMARK 				  VARCHAR(2000) COMMENT '备注',
  COMPANY_ID 			CHAR(36) COMMENT '企业ID',
  IS_DEL 				  CHAR(1) NOT NULL COMMENT '是否删除',
  U_TIME 				  TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间',
  COLUMN_1 				VARCHAR(200) COMMENT '备用字段1',
  COLUMN_2 				VARCHAR(200) COMMENT '备用字段2',
  COLUMN_3 				VARCHAR(200) COMMENT '备用字段3',
  COLUMN_4 				VARCHAR(200) COMMENT '备用字段4',
  COLUMN_5 				VARCHAR(200) COMMENT '备用字段5'
) ENGINE=INNODB DEFAULT CHARSET=UTF8 COMMENT='报表模板主表';

-- ----------------------------
-- Table structure for SYS_REPORT_FORM_TEMP_DETAIL
-- ----------------------------
DROP TABLE IF EXISTS SYS_REPORT_FORM_TEMP_DETAIL;
CREATE TABLE SYS_REPORT_FORM_TEMP_DETAIL (
  FORM_TEMP_DETAIL_ID CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  FORM_TEMP_ID 			  CHAR(36) COMMENT '航次计划ID',
  CONTENT_CODE 				VARCHAR(20) COMMENT '内容编号',
  CONTENT 					  VARCHAR(500) COMMENT '内容',
  DEAL_TYPE 				  CHAR(1) COMMENT '元素类型1：CHECKBOX，2：TEXT',
  DEFAULT_VALUE 			VARCHAR(200) COMMENT '默认值',
  SORT 						    DECIMAL(11) COMMENT '排序号',
  REMARK 					    VARCHAR(2000) COMMENT '备注',
  COMPANY_ID 				  CHAR(36) COMMENT '企业ID',
  IS_DEL 					    CHAR(1) NOT NULL COMMENT '是否删除',
  U_TIME 					    TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间',
  COLUMN_1 					  VARCHAR(200) COMMENT '备用字段1',
  COLUMN_2 					  VARCHAR(200) COMMENT '备用字段2',
  COLUMN_3 					  VARCHAR(200) COMMENT '备用字段3',
  COLUMN_4 					  VARCHAR(200) COMMENT '备用字段4',
  COLUMN_5 					  VARCHAR(200) COMMENT '备用字段5'
) ENGINE=INNODB DEFAULT CHARSET=UTF8 COMMENT='报表模板明细表';

-- ----------------------------
-- Table structure for SYS_REPORT_FORM
-- ----------------------------
DROP TABLE IF EXISTS SYS_REPORT_FORM;
CREATE TABLE SYS_REPORT_FORM (
  FORM_ID 				CHAR(36) NOT NULL PRIMARY KEY COMMENT '表格ID',
  FORM_TEMP_CODE  VARCHAR(50) COMMENT '模板编号',
  FORM_TITLE 			VARCHAR(200) COMMENT ' 标题',
  SHIP_ID 				CHAR(36) COMMENT '船舶ID',
  SCHEDULING_ID 	CHAR(36) COMMENT '航次ID',
  START_PORT 			VARCHAR(200) COMMENT '出发港口',
  PURPOSE_PORT 		VARCHAR(200) COMMENT '目的港口',
  CHECK_DATE 			DATE COMMENT '检查日期',
  CHECK_PERSON 		VARCHAR(50) COMMENT '检查人',
  CAPTAIN 				VARCHAR(50) COMMENT '船长',
  STATUS 				  VARCHAR(200) COMMENT '报表状态',
  REMARK 				  VARCHAR(2000) COMMENT '备注',
  COMPANY_ID 			CHAR(36) COMMENT '企业ID',
  IS_DEL 				  CHAR(1) NOT NULL COMMENT '是否删除',
  U_TIME 				  TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间',
  COLUMN_1 				VARCHAR(200) COMMENT '备用字段1',
  COLUMN_2 				VARCHAR(200) COMMENT '备用字段2',
  COLUMN_3 				VARCHAR(200) COMMENT '备用字段3',
  COLUMN_4 				VARCHAR(200) COMMENT '备用字段4',
  COLUMN_5 				VARCHAR(200) COMMENT '备用字段5'
) ENGINE=INNODB DEFAULT CHARSET=UTF8 COMMENT='业务报表主表';

-- ----------------------------
-- Table structure for SYS_REPORT_FORM_DETAIL
-- ----------------------------
DROP TABLE IF EXISTS SYS_REPORT_FORM_DETAIL;
CREATE TABLE SYS_REPORT_FORM_DETAIL (
  FORM_DETAIL_ID  CHAR(36) NOT NULL PRIMARY KEY COMMENT '明细ID',
  FORM_ID 				CHAR(36) COMMENT '表格ID',
  SHIP_ID 				CHAR(36) COMMENT '船舶ID',
  CONTENT_CODE 		VARCHAR(20) COMMENT '内容编号',
  CONTENT 				VARCHAR(500) COMMENT '内容',
  DEAL_TYPE 			CHAR(1) COMMENT '元素类型，1 CHECKBOX；2 TEXT',
  REAL_VALUE 			VARCHAR(500) COMMENT '真实值',
  SORT 					  DECIMAL(11) COMMENT '排序号',
  REMARK 				  VARCHAR(2000) COMMENT '备注',
  COMPANY_ID 			CHAR(36) COMMENT '企业ID',
  IS_DEL 				  CHAR(1) NOT NULL COMMENT '是否删除',
  U_TIME 				  TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间',
  COLUMN_1 				VARCHAR(200) COMMENT '备用字段1',
  COLUMN_2 				VARCHAR(200) COMMENT '备用字段2',
  COLUMN_3 				VARCHAR(200) COMMENT '备用字段3',
  COLUMN_4 				VARCHAR(200) COMMENT '备用字段4',
  COLUMN_5 				VARCHAR(200) COMMENT '备用字段5'
) ENGINE=INNODB DEFAULT CHARSET=UTF8 COMMENT='业务报表明细表';

-- crew manage tables --------------------------------------------------------------------------------------------------

-- ----------------------------
-- Table structure for SYS_PERSON_CERT
-- ----------------------------
DROP TABLE IF EXISTS SYS_PERSON_CERT;
CREATE TABLE SYS_PERSON_CERT (
  CERT_ID       CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  PERSON_ID     CHAR(36) COMMENT '人员ID',
  CERT_TYPE     CHAR(36) COMMENT '证书分类：T_STAFF_DICT.ID WHERE CATEGORY = 201',
  CERT_NAME     VARCHAR(200) COMMENT '证书名称',
  CERT_CODE     VARCHAR(200) COMMENT '证书编号',
  CERT_POST     CHAR(36) COMMENT '证书职务：关联CODE_SHIP_POST（适任证）',
  CERT_LEVEL    INTEGER(11) COMMENT '证书等级（适任证），1 一等；2 二等；3 三等',
  CERT_CATEGORY INTEGER(11) COMMENT '适任证书类别(适任证)，J 甲类（无限航区）； Y 乙类（近洋航区）；B 丙类（沿海航区）； D 丁类（近岸航区）',
  ISSUE_DATE    TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00' COMMENT '签发日期',
  EXPIRE_DATE   TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00' COMMENT '期满日期',
  ISSUE_LOCAL   VARCHAR(200) COMMENT '签发地点',
  ISSUE_ORG     CHAR(36) COMMENT '签发机构',
  STATUS        INTEGER(11) COMMENT '证书状态，1 在用；2 过期；3 失效；4 遗失',
  MEMO          VARCHAR(2000) COMMENT '备注',
  COLUMN_1      VARCHAR(2000) COMMENT '备用字段1',
  COLUMN_2      VARCHAR(2000) COMMENT '备用字段2',
  COLUMN_3      VARCHAR(2000) COMMENT '备用字段3',
  COLUMN_4      VARCHAR(2000) COMMENT '备用字段4',
  COLUMN_5      VARCHAR(2000) COMMENT '备用字段5',
  COMPANY_ID    CHAR(36) COMMENT '企业ID',
  IS_DEL        CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME        TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='人员证书信息';
ALTER TABLE SYS_PERSON_CERT ADD CONSTRAINT FK_SYS_PERSON_CERT_POST FOREIGN KEY (CERT_POST) REFERENCES SYS_POST (POST_ID);
ALTER TABLE SYS_PERSON_CERT ADD CONSTRAINT FK_SYS_PERSON_CERT_PERSON FOREIGN KEY (PERSON_ID) REFERENCES SYS_PERSON (PERSON_ID);
ALTER TABLE SYS_PERSON_CERT ADD CONSTRAINT FK_SYS_PERSON_CERT_DIC FOREIGN KEY (CERT_TYPE) REFERENCES SYS_DIC (ID);
ALTER TABLE SYS_PERSON_CERT ADD CONSTRAINT FK_SYS_PERSON_CERT_ORG FOREIGN KEY (ISSUE_ORG) REFERENCES SYS_MARITIME_ORG (ORG_ID);

-- ----------------------------
-- Table structure for CREW_SHIP_DISPATCH
-- ----------------------------
DROP TABLE IF EXISTS CREW_SHIP_DISPATCH;
CREATE TABLE CREW_SHIP_DISPATCH (
  DISPATCH_ID           CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  COMPANY_ID            CHAR(36) COMMENT '企业ID',
  SHIP_ID               CHAR(36) COMMENT '船舶ID',
  DISPATCH_CODE         VARCHAR(100) NOT NULL COMMENT '调配单号',
  DISPATCH_TIME         DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '调配时间',
  DISPATCH_LOCAL        VARCHAR(1000) COMMENT '调配地点',
  CREATE_USER_ID        CHAR(36) COMMENT '调配单生成人',
  DISPATCH_EFFECT_TIME  DATETIME COMMENT '调配生效时间',
  STATUS                VARCHAR(2) COMMENT '审批状态，依据工作流执行，10 同意',
  ADVNC_1               VARCHAR(2000) COMMENT '意见1,机务科意见',
  ADVNC_2               VARCHAR(2000) COMMENT '意见2.船队意见',
  ADVNC_3               VARCHAR(2000) COMMENT '意见3.公司意见（如果有）',
  IS_DEL                CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME                TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间',
  COLUMN_1              VARCHAR(2000) COMMENT '备用字段1',
  COLUMN_2              VARCHAR(2000) COMMENT '备用字段2',
  COLUMN_3              VARCHAR(2000) COMMENT '备用字段3',
  COLUMN_4              VARCHAR(2000) COMMENT '备用字段4',
  COLUMN_5              VARCHAR(2000) COMMENT '备用字段5'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='船舶调配单';
ALTER TABLE CREW_SHIP_DISPATCH ADD CONSTRAINT FK_CREW_SHIP_DISPATCH_SHIP FOREIGN KEY (SHIP_ID) REFERENCES SYS_SHIPINFO (SHIP_ID);
ALTER TABLE CREW_SHIP_DISPATCH ADD CONSTRAINT FK_CREW_SHIP_DISPATCH_USER FOREIGN KEY (CREATE_USER_ID) REFERENCES SYS_USER (USER_ID);

-- ----------------------------
-- Table structure for CREW_SHIP_DISPATCH_DETAIL
-- ----------------------------
DROP TABLE IF EXISTS CREW_SHIP_DISPATCH_DETAIL;
CREATE TABLE CREW_SHIP_DISPATCH_DETAIL (
  DISPATCH_DETAIL_ID  CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  DISPATCH_ID         CHAR(36) COMMENT '调拨单ID',
  SHIP_ID             CHAR(36) COMMENT '船舶ID',
  PERSON_ID_A         CHAR(36) COMMENT '下船人ID可以为空',
  PERSON_ID_B         CHAR(36) COMMENT '上船人ID可以为空',
  CREW_POSTID_A       CHAR(36) COMMENT '上船人岗位ID',
  CREW_POSTID_B       CHAR(36) COMMENT '下船人岗位ID',
  ARRIVE_SHIP_DATE    DATETIME COMMENT '到船日期 报道日期精确至分钟，船长负责填写',
  POST_ID             CHAR(36) COMMENT '调配岗位ID',
  POST_NAME           VARCHAR(200) COMMENT '调配岗位名称',
  FINISH_TIME         DATETIME COMMENT '完成时间',
  COMPANY_ID          CHAR(36) COMMENT '企业ID',
  IS_DEL              CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME              TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间',
  MEMO                VARCHAR(500) COMMENT '备注',
  COLUMN_1            VARCHAR(2000) COMMENT '备用字段1',
  COLUMN_2            VARCHAR(2000) COMMENT '备用字段2',
  COLUMN_3            VARCHAR(2000) COMMENT '备用字段3',
  COLUMN_4            VARCHAR(2000) COMMENT '备用字段4',
  COLUMN_5            VARCHAR(2000) COMMENT '备用字段5'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='船舶调配明细';
ALTER TABLE CREW_SHIP_DISPATCH_DETAIL ADD CONSTRAINT FK_CREW_SHIP_DISPATCH_DETAIL_SHIP FOREIGN KEY (SHIP_ID) REFERENCES SYS_SHIPINFO (SHIP_ID);
ALTER TABLE CREW_SHIP_DISPATCH_DETAIL ADD CONSTRAINT FK_CREW_SHIP_DISPATCH_DETAIL_POST_A FOREIGN KEY (CREW_POSTID_A) REFERENCES SYS_POST (POST_ID);
ALTER TABLE CREW_SHIP_DISPATCH_DETAIL ADD CONSTRAINT FK_CREW_SHIP_DISPATCH_DETAIL_POST_B FOREIGN KEY (CREW_POSTID_B) REFERENCES SYS_POST (POST_ID);
ALTER TABLE CREW_SHIP_DISPATCH_DETAIL ADD CONSTRAINT FK_CREW_SHIP_DISPATCH_DETAIL_PERSON_A FOREIGN KEY (PERSON_ID_A) REFERENCES SYS_PERSON (PERSON_ID);
ALTER TABLE CREW_SHIP_DISPATCH_DETAIL ADD CONSTRAINT FK_CREW_SHIP_DISPATCH_DETAIL_PERSON_B FOREIGN KEY (PERSON_ID_B) REFERENCES SYS_PERSON (PERSON_ID);
ALTER TABLE CREW_SHIP_DISPATCH_DETAIL ADD CONSTRAINT FK_CREW_SHIP_DISPATCH_DETAIL_DISPATCH FOREIGN KEY (DISPATCH_ID) REFERENCES CREW_SHIP_DISPATCH (DISPATCH_ID);

-- ----------------------------
-- Table structure for CREW_TRAVEL_EXPENSE
-- ----------------------------
DROP TABLE IF EXISTS CREW_TRAVEL_EXPENSE;
CREATE TABLE CREW_TRAVEL_EXPENSE (
  TRAVEL_EXPENSE_ID   CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  TRAVEL_EXPENSE_TYPE CHAR(1) COMMENT '差旅费类型，1 上船费用；2 下船费用',
  PERSON_ID           CHAR(36) COMMENT '人员ID',
  DISPATCH_ID         CHAR(36) COMMENT '调令ID',
  SCHEDULING_ID       CHAR(36) COMMENT '航次ID',
  CREW_NAME           VARCHAR(200) NOT NULL COMMENT '船员姓名',
  CREW_POST           VARCHAR(200) NOT NULL COMMENT '岗位',
  CREW_POST_ID        VARCHAR(200) COMMENT '岗位ID',
  TRAVEL_COST         DECIMAL(8,2) NOT NULL COMMENT '差旅费，可以为0根据类型不同可以为上船的和下船的费用',
  ACC_COST            DECIMAL(8,2) NOT NULL COMMENT '住宿费用，可以为0',
  TRAVEL_ADDRESS      VARCHAR(200) COMMENT '车船开始结束地点',
  SHIP_S_WORKTIME     DATETIME COMMENT '在船工作时间（可查询）',
  SHIP_E_WORKTIME     DATETIME COMMENT '在船工作时间（可查询）',
  CREATEDATE          DATETIME COMMENT '创建日期',
  REMARK              VARCHAR(2000) COMMENT '备注',
  STATUS              CHAR(1) COMMENT '报销状态，1 已报销；2 未报销',
  COLUMN_1            VARCHAR(1000) COMMENT '备用字段1',
  COLUMN_2            VARCHAR(1000) COMMENT '备用字段2',
  COLUMN_3            VARCHAR(1000) COMMENT '备用字段3',
  COLUMN_4            VARCHAR(1000) COMMENT '备用字段4',
  COLUMN_5            VARCHAR(1000) COMMENT '备用字段5',
  SHIP_ID             CHAR(36) COMMENT '船舶ID',
  COMPANY_ID          CHAR(36) COMMENT '企业ID',
  IS_DEL              CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME              TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='人员差旅费';
ALTER TABLE CREW_TRAVEL_EXPENSE ADD CONSTRAINT FK_CREW_TRAVEL_EXPENSE_SHIP FOREIGN KEY (SHIP_ID) REFERENCES SYS_SHIPINFO (SHIP_ID);
ALTER TABLE CREW_TRAVEL_EXPENSE ADD CONSTRAINT FK_CREW_TRAVEL_EXPENSE_POST FOREIGN KEY (CREW_POST_ID) REFERENCES SYS_POST (POST_ID);
ALTER TABLE CREW_TRAVEL_EXPENSE ADD CONSTRAINT FK_CREW_TRAVEL_EXPENSE_PERSON FOREIGN KEY (PERSON_ID) REFERENCES SYS_PERSON (PERSON_ID);
ALTER TABLE CREW_TRAVEL_EXPENSE ADD CONSTRAINT FK_CREW_TRAVEL_EXPENSE_DISPATCH FOREIGN KEY (DISPATCH_ID) REFERENCES CREW_SHIP_DISPATCH (DISPATCH_ID);
ALTER TABLE CREW_TRAVEL_EXPENSE ADD CONSTRAINT FK_CREW_TRAVEL_EXPENSE_SCHEDULING FOREIGN KEY (SCHEDULING_ID) REFERENCES SHIP_VOYAGE_SCHEDULING (SCHEDULING_ID);

-- ----------------------------
-- Table structure for CREW_HOLIDAY_APPLY
-- ----------------------------
DROP TABLE IF EXISTS CREW_HOLIDAY_APPLY;
CREATE TABLE CREW_HOLIDAY_APPLY (
  HOLIDAY_APPLY_ID  CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  DISPATCH_ID       CHAR(36) NOT NULL COMMENT '调令ID',
  PERSON_ID         CHAR(36) COMMENT '人员ID',
  SCHEDULING_ID     CHAR(36) COMMENT '航次ID',
  CREW_NAME         VARCHAR(200) NOT NULL COMMENT '船员姓名',
  CREW_POST         VARCHAR(200) NOT NULL COMMENT '岗位',
  CREW_POST_ID      VARCHAR(200) COMMENT '岗位ID',
  HOLIDAY_DATE      DATETIME COMMENT '休假开始日期',
  HOLIDAY_REASEON   VARCHAR(2000) COMMENT '休假原因',
  INSHIP_REALDAY    DECIMAL(8,2) COMMENT '在船实际天数',
  REMARK            VARCHAR(2000) COMMENT '备注',
  STATUS            VARCHAR(200) COMMENT '单据申请状态：未提交（已经创建流程）、等待【xxx】审批、审批通过、审批未通过',
  WF_INST_ID        VARCHAR(36) COMMENT '工作流实例Id',
  IS_LAND           CHAR(1) COMMENT '来源，1 岸基；2 船端',
  COLUMN_1          VARCHAR(1000) COMMENT '备用字段1',
  COLUMN_2          VARCHAR(1000) COMMENT '备用字段2',
  COLUMN_3          VARCHAR(1000) COMMENT '备用字段3',
  COLUMN_4          VARCHAR(1000) COMMENT '备用字段4',
  COLUMN_5          VARCHAR(1000) COMMENT '备用字段5',
  SHIP_ID           CHAR(36) COMMENT '船舶ID',
  COMPANY_ID        CHAR(36) COMMENT '企业ID',
  IS_DEL            CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME            TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='休假申请';
ALTER TABLE CREW_HOLIDAY_APPLY ADD CONSTRAINT FK_CREW_HOLIDAY_APPLY_SHIP FOREIGN KEY (SHIP_ID) REFERENCES SYS_SHIPINFO (SHIP_ID);
ALTER TABLE CREW_HOLIDAY_APPLY ADD CONSTRAINT FK_CREW_HOLIDAY_APPLY_POST FOREIGN KEY (CREW_POST_ID) REFERENCES SYS_POST (POST_ID);
ALTER TABLE CREW_HOLIDAY_APPLY ADD CONSTRAINT FK_CREW_HOLIDAY_APPLY_PERSON FOREIGN KEY (PERSON_ID) REFERENCES SYS_PERSON (PERSON_ID);
ALTER TABLE CREW_HOLIDAY_APPLY ADD CONSTRAINT FK_CREW_HOLIDAY_APPLY_DISPATCH FOREIGN KEY (DISPATCH_ID) REFERENCES CREW_SHIP_DISPATCH (DISPATCH_ID);
ALTER TABLE CREW_HOLIDAY_APPLY ADD CONSTRAINT FK_CREW_HOLIDAY_APPLY_SCHEDULING FOREIGN KEY (SCHEDULING_ID) REFERENCES SHIP_VOYAGE_SCHEDULING (SCHEDULING_ID);

-- ----------------------------
-- Table structure for CREW_ARRIVE_RECORD
-- ----------------------------
DROP TABLE IF EXISTS CREW_ARRIVE_RECORD;
CREATE TABLE CREW_ARRIVE_RECORD (
  ARRIVE_ID           CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  DISPATCH_DETAIL_ID  CHAR(36) COMMENT '调拨单ID',
  ARRIVE_DATE         DATETIME COMMENT '到船日期',
  CREW_ID             CHAR(36) COMMENT '船员ID',
  SHIP_ID             CHAR(36) COMMENT '船舶ID',
  COMPANY_ID          CHAR(36) COMMENT '企业ID',
  IS_DEL              CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME              TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间',
  COLUMN_1            VARCHAR(1000) COMMENT '备用字段1',
  COLUMN_2            VARCHAR(1000) COMMENT '备用字段2',
  COLUMN_3            VARCHAR(1000) COMMENT '备用字段3',
  COLUMN_4            VARCHAR(1000) COMMENT '备用字段4',
  COLUMN_5            VARCHAR(1000) COMMENT '备用字段5'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='船员到船记录';
ALTER TABLE CREW_ARRIVE_RECORD ADD CONSTRAINT FK_CREW_ARRIVE_RECORD_SHIP FOREIGN KEY (SHIP_ID) REFERENCES SYS_SHIPINFO (SHIP_ID);
ALTER TABLE CREW_ARRIVE_RECORD ADD CONSTRAINT FK_CREW_ARRIVE_RECORD_PERSON FOREIGN KEY (CREW_ID) REFERENCES SYS_PERSON (PERSON_ID);
ALTER TABLE CREW_ARRIVE_RECORD ADD CONSTRAINT FK_CREW_ARRIVE_RECORD_DISPATCH_DETAIL FOREIGN KEY (DISPATCH_DETAIL_ID) REFERENCES CREW_SHIP_DISPATCH_DETAIL (DISPATCH_DETAIL_ID);

-- ----------------------------
-- Table structure for CREW_SHIFT_DUTY_RECORD
-- ----------------------------
DROP TABLE IF EXISTS CREW_SHIFT_DUTY_RECORD;
CREATE TABLE CREW_SHIFT_DUTY_RECORD (
  RECORD_ID           CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  RECORD_CODE         VARCHAR(200) COMMENT '记录单单号',
  DISPATCH_DETAIL_ID  CHAR(36) COMMENT '调配单明细ID',
  POST_ID             CHAR(36) COMMENT '交接班岗位ID',
  USERNAME_JIAO       VARCHAR(200) COMMENT '交班人姓名',
  USERNAME_JIE        VARCHAR(200) COMMENT '接班人姓名',
  USERNAME_JIAN       VARCHAR(200) COMMENT '监督人姓名',
  USER_ID_JIAO        CHAR(36) COMMENT '交班人ID',
  USER_ID_JIE         CHAR(36) COMMENT '接班人ID',
  USER_ID_JIAN        CHAR(36) COMMENT '监督人ID',
  SHIFT_DATE          DATETIME COMMENT '交接班时间',
  STATUS              VARCHAR(2) COMMENT '交接班状态，01 提交至船长；99 船长同意',
  MEMO                VARCHAR(2000) COMMENT '备注',
  SHIP_ID             CHAR(36) NOT NULL COMMENT '船舶ID',
  COMPANY_ID          CHAR(36) COMMENT '企业ID',
  IS_DEL              CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME              TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间',
  COLUMN_1            VARCHAR(1000) COMMENT '备用字段1',
  COLUMN_2            VARCHAR(1000) COMMENT '备用字段2',
  COLUMN_3            VARCHAR(1000) COMMENT '备用字段3',
  COLUMN_4            VARCHAR(1000) COMMENT '备用字段4',
  COLUMN_5            VARCHAR(1000) COMMENT '备用字段5',
  COLUMN_6            VARCHAR(1000) COMMENT '备用字段6',
  COLUMN_7            VARCHAR(1000) COMMENT '备用字段7',
  COLUMN_8            VARCHAR(1000) COMMENT '备用字段8',
  COLUMN_9            VARCHAR(1000) COMMENT '备用字段9',
  COLUMN_10           VARCHAR(1000) COMMENT '备用字段10'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='交接班记录';
ALTER TABLE CREW_SHIFT_DUTY_RECORD ADD CONSTRAINT FK_CREW_SHIFT_DUTY_RECORD_SHIP FOREIGN KEY (SHIP_ID) REFERENCES SYS_SHIPINFO (SHIP_ID);
ALTER TABLE CREW_SHIFT_DUTY_RECORD ADD CONSTRAINT FK_CREW_SHIFT_DUTY_RECORD_POST FOREIGN KEY (POST_ID) REFERENCES SYS_POST (POST_ID);
ALTER TABLE CREW_SHIFT_DUTY_RECORD ADD CONSTRAINT FK_CREW_SHIFT_DUTY_RECORD_JIAO_PERSON FOREIGN KEY (USER_ID_JIAO) REFERENCES SYS_PERSON (PERSON_ID);
ALTER TABLE CREW_SHIFT_DUTY_RECORD ADD CONSTRAINT FK_CREW_SHIFT_DUTY_RECORD_JIE_PERSON FOREIGN KEY (USER_ID_JIE) REFERENCES SYS_PERSON (PERSON_ID);
ALTER TABLE CREW_SHIFT_DUTY_RECORD ADD CONSTRAINT FK_CREW_SHIFT_DUTY_RECORD_JIAN_PERSON FOREIGN KEY (USER_ID_JIAN) REFERENCES SYS_PERSON (PERSON_ID);
ALTER TABLE CREW_SHIFT_DUTY_RECORD ADD CONSTRAINT FK_CREW_SHIFT_DUTY_RECORD_DISPATCH_DETAIL FOREIGN KEY (DISPATCH_DETAIL_ID) REFERENCES CREW_SHIP_DISPATCH_DETAIL (DISPATCH_DETAIL_ID);

-- ----------------------------
-- Table structure for CREW_SHIFT_DUTY_DETAIL
-- ----------------------------
DROP TABLE IF EXISTS CREW_SHIFT_DUTY_DETAIL;
CREATE TABLE CREW_SHIFT_DUTY_DETAIL (
  DETAIL_ID         CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  RECORD_ID         CHAR(36) COMMENT '交接班记录ID',
  TASK_CATEGORY_ID  CHAR(36) COMMENT '任务分类ID',
  DETAIL_CONTENT    VARCHAR(2000) COMMENT '交班内容',
  IS_SHIFTED        CHAR(1) COMMENT '是否交接，0 否；1 是',
  MEMO              VARCHAR(2000) COMMENT '备注',
  SORT_ID           INTEGER(11) NOT NULL COMMENT '顺序号',
  CREATE_DATE       DATETIME NOT NULL COMMENT '时间',
  SHIP_ID           CHAR(36) NOT NULL COMMENT '船舶ID',
  COMPANY_ID        CHAR(36) COMMENT '企业ID',
  IS_DEL            CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME            TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间',
  COLUMN_1          VARCHAR(1000) COMMENT '备用字段1',
  COLUMN_2          VARCHAR(1000) COMMENT '备用字段2',
  COLUMN_3          VARCHAR(1000) COMMENT '备用字段3',
  COLUMN_4          VARCHAR(1000) COMMENT '备用字段4',
  COLUMN_5          VARCHAR(1000) COMMENT '备用字段5',
  COLUMN_6          VARCHAR(1000) COMMENT '备用字段6',
  COLUMN_7          VARCHAR(1000) COMMENT '备用字段7',
  COLUMN_8          VARCHAR(1000) COMMENT '备用字段8',
  COLUMN_9          VARCHAR(1000) COMMENT '备用字段9',
  COLUMN_10         VARCHAR(1000) COMMENT '备用字段10'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='交接班记录明细';
ALTER TABLE CREW_SHIFT_DUTY_DETAIL ADD CONSTRAINT FK_CREW_SHIFT_DUTY_DETAIL_SHIP FOREIGN KEY (SHIP_ID) REFERENCES SYS_SHIPINFO (SHIP_ID);
ALTER TABLE CREW_SHIFT_DUTY_DETAIL ADD CONSTRAINT FK_CREW_SHIFT_DUTY_DETAIL_RECORD FOREIGN KEY (RECORD_ID) REFERENCES CREW_SHIFT_DUTY_RECORD (RECORD_ID);

-- ----------------------------
-- Table structure for EXAM_PAPER_CATEGORY
-- ----------------------------
DROP TABLE IF EXISTS EXAM_PAPER_CATEGORY;
CREATE TABLE EXAM_PAPER_CATEGORY (
  CATEGORY_ID   CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  CATEGORY_NAME VARCHAR(200) NOT NULL COMMENT '类别名称',
  REMARK        VARCHAR(1000) COMMENT '备注',
  STATUS        CHAR(1) COMMENT '状态，1 开发；2 关闭',
  CREATOR_ID    CHAR(36) COMMENT '创建人ID',
  COMPANY_ID    CHAR(36) COMMENT '企业ID',
  IS_DEL        CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME        TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间',
  COLUMN_1      VARCHAR(2000) COMMENT '备用字段1',
  COLUMN_2      VARCHAR(2000) COMMENT '备用字段2',
  COLUMN_3      VARCHAR(2000) COMMENT '备用字段3',
  COLUMN_4      VARCHAR(2000) COMMENT '备用字段4',
  COLUMN_5      VARCHAR(2000) COMMENT '备用字段5'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='考卷类别';

-- ----------------------------
-- Table structure for EXAM_STRATEGY
-- ----------------------------
DROP TABLE IF EXISTS EXAM_STRATEGY;
CREATE TABLE EXAM_STRATEGY (
  STRATEGY_ID   CHAR(36) NOT NULL PRIMARY KEY COMMENT '策略ID',
  STRATEGY_NAME VARCHAR(200) COMMENT '策略名称',
  STRATEGY_MEMO VARCHAR(200) COMMENT '策略说明',
  REMARK        VARCHAR(2000) COMMENT '备注',
  CREATOR_ID    CHAR(36) COMMENT '创建人ID',
  COMPANY_ID    CHAR(36) COMMENT '企业ID',
  IS_DEL        CHAR(1) NOT NULL COMMENT '是否删除',
  U_TIME        TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='考卷生成策略表';

-- ----------------------------
-- Table structure for EXAM_STRATEGY_DETAIL
-- ----------------------------
DROP TABLE IF EXISTS EXAM_STRATEGY_DETAIL;
CREATE TABLE EXAM_STRATEGY_DETAIL (
  STRATEGY_DETAIL_ID  CHAR(36) NOT NULL PRIMARY KEY COMMENT '策略明细ID',
  STRATEGY_ID         CHAR(36) COMMENT '策略ID',
  QUESTION_BLANK_ID   CHAR(36) COMMENT '题库ID',
  CHAPTER_NAME        VARCHAR(200) COMMENT '章节名称',
  CHAPTER_DEPT        VARCHAR(1000) COMMENT '章节描述',
  QUESTION_TYPE       CHAR(1) NOT NULL COMMENT '试题类型',
  QUESTION_COUNT      INTEGER(11) COMMENT '试题数量',
  QUESTION_VALUE      DECIMAL(8,2) COMMENT '每题分值',
  SORT_NO             INTEGER(11) COMMENT '排序号',
  QUESTION_GEN_TYPE   CHAR(1) COMMENT '题生成方式，1 随机；2 手动配置',
  CREATOR_ID          CHAR(36) NOT NULL COMMENT '创建人ID',
  REMARK              VARCHAR(2000) COMMENT '备注',
  COMPANY_ID          CHAR(36) COMMENT '企业ID',
  IS_DEL              CHAR(1) NOT NULL COMMENT '是否删除',
  U_TIME              TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='考卷生成策略明细表';
ALTER TABLE EXAM_STRATEGY_DETAIL ADD CONSTRAINT FK_EXAM_STRATEGY FOREIGN KEY (STRATEGY_ID) REFERENCES EXAM_STRATEGY (STRATEGY_ID);

-- ----------------------------
-- Table structure for EXAM_DIFFICULTY_CONF
-- ----------------------------
DROP TABLE IF EXISTS EXAM_DIFFICULTY_CONF;
CREATE TABLE EXAM_DIFFICULTY_CONF (
  DIFFICULTY_CONF_ID  CHAR(36) NOT NULL PRIMARY KEY COMMENT '难度配置ID',
  STRATEGY_DETAIL_ID  CHAR(36) COMMENT '策略明细ID',
  DIFFICULTY_TYPE     CHAR(1) COMMENT '难易程度类型，1 非常容易；2 比较容易；3 常规；4 较难；5 非常难',
  QUESTION_COUNT      INTEGER(11) COMMENT '试题数量',
  SORT_NO             INTEGER(11) COMMENT '排序号',
  CREATOR_ID          CHAR(36) NOT NULL COMMENT '创建人ID',
  REMARK              VARCHAR(2000) COMMENT '备注',
  COMPANY_ID          CHAR(36) COMMENT '企业ID',
  IS_DEL              CHAR(1) NOT NULL COMMENT '是否删除',
  U_TIME              TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='试题难度配置表';
ALTER TABLE EXAM_DIFFICULTY_CONF ADD CONSTRAINT FK_STRATEGY_DETAIL FOREIGN KEY (STRATEGY_DETAIL_ID) REFERENCES EXAM_STRATEGY_DETAIL (STRATEGY_DETAIL_ID);

-- ----------------------------
-- Table structure for EXAM_PAPER
-- ----------------------------
DROP TABLE IF EXISTS EXAM_PAPER;
CREATE TABLE EXAM_PAPER (
  PAPER_ID          CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  CATEGORY_ID       CHAR(36) COMMENT '类别ID',
  STRATEGY_ID       CHAR(36) COMMENT '策略ID',
  SHIP_ID           CHAR(36) COMMENT '船舶ID',
  POST_ID           CHAR(36) COMMENT '岗位ID',
  USER_ID           CHAR(36) COMMENT '人员ID',
  PAPER_NAME        VARCHAR(200) NOT NULL COMMENT '考卷名称',
  PAPER_START_DATE  DATETIME NOT NULL COMMENT '考试开始时间',
  PAPER_END_DATE    DATETIME NOT NULL COMMENT '考试结束时间',
  PAPER_DURATION    INTEGER(11) NOT NULL COMMENT '考试时间（分）',
  PAPER_TOTAL_SCORE INTEGER(11) NOT NULL COMMENT '试卷总分数',
  PAPER_PASS_SCORE  INTEGER(11) NOT NULL COMMENT '及格分数',
  REMARK            VARCHAR(1000) COMMENT '备注',
  STATUS            CHAR(1) NOT NULL COMMENT '状态，1 开放；2关闭',
  IS_SHOW_ANSWER    CHAR(1) NOT NULL COMMENT '是否公布答案，0 否；1 是',
  PAPER_SHOW_TYPE   CHAR(1) NOT NULL COMMENT '显示方式，1 整卷显示；2 单题显示',
  PAPER_TYPE        CHAR(1) NOT NULL COMMENT '试卷类型 1 普通试卷；2 随机试卷',
  CREATOR_ID        CHAR(36) COMMENT '创建人ID',
  COMPANY_ID        CHAR(36) COMMENT '企业ID',
  IS_DEL            CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME            TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间',
  COLUMN_1          VARCHAR(2000) COMMENT '备用字段1',
  COLUMN_2          VARCHAR(2000) COMMENT '备用字段2',
  COLUMN_3          VARCHAR(2000) COMMENT '备用字段3',
  COLUMN_4          VARCHAR(2000) COMMENT '备用字段4',
  COLUMN_5          VARCHAR(2000) COMMENT '备用字段5'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='考卷';
ALTER TABLE EXAM_PAPER ADD CONSTRAINT FK_EXAM_PAPER_CATEGORY FOREIGN KEY (CATEGORY_ID) REFERENCES EXAM_PAPER_CATEGORY (CATEGORY_ID);
ALTER TABLE EXAM_PAPER ADD CONSTRAINT FK_EXAM_STRATEGY FOREIGN KEY (STRATEGY_ID) REFERENCES EXAM_STRATEGY (STRATEGY_ID);
-- ----------------------------
-- Table structure for EXAM_QUESTION_BANK
-- ----------------------------
DROP TABLE IF EXISTS EXAM_QUESTION_BANK;
CREATE TABLE EXAM_QUESTION_BANK (
  QUESTION_BANK_ID    CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  QUESTION_BANK_NAME  VARCHAR(200) COMMENT '题库名称',
  QUESTION_BANK_MEMO  VARCHAR(200) COMMENT '题库说明',
  REMARK              VARCHAR(2000) COMMENT '备注',
  STATUS              CHAR(1) COMMENT '状态，1 开发；2 关闭',
  CREATOR_ID          CHAR(36) COMMENT '创建人ID',
  COMPANY_ID          CHAR(36) COMMENT '企业ID',
  IS_DEL              CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME              TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间',
  COLUMN_1            VARCHAR(2000) COMMENT '备用字段1',
  COLUMN_2            VARCHAR(2000) COMMENT '备用字段2',
  COLUMN_3            VARCHAR(2000) COMMENT '备用字段3',
  COLUMN_4            VARCHAR(2000) COMMENT '备用字段4',
  COLUMN_5            VARCHAR(2000) COMMENT '备用字段5'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='题库表';

-- ----------------------------
-- Table structure for EXAM_QUESTION_BANK_DETAIL
-- ----------------------------
DROP TABLE IF EXISTS EXAM_QUESTION_BANK_DETAIL;
CREATE TABLE EXAM_QUESTION_BANK_DETAIL (
  QUESTION_ID       CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  QUESTION_BANK_ID  CHAR(36) NOT NULL COMMENT '题库ID',
  QUESTION_TYPE     CHAR(1) NOT NULL COMMENT '题目类型，1 单选题；2 多选题；3 判断题；4 填空题；5 问答题',
  DIFFICULTY_TYPE   CHAR(1) NOT NULL COMMENT '试题难度，1 非常容易；2 比较容易；3 常规；4 较难；5 非常难',
  QUESTION_CONTENT  VARCHAR(1000) NOT NULL COMMENT '题干即问题',
  QUESTION_ANSWER   VARCHAR(1000) NOT NULL COMMENT '答案',
  REMARK            VARCHAR(1000) COMMENT '试题解析',
  STATUS            CHAR(1) NOT NULL COMMENT '状态，1 开发；2 关闭',
  CREATOR_ID        CHAR(36) NOT NULL COMMENT '创建人ID',
  COMPANY_ID        CHAR(36) COMMENT '企业ID',
  IS_DEL            CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME            TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间',
  COLUMN_1          VARCHAR(2000) COMMENT '备用字段1',
  COLUMN_2          VARCHAR(2000) COMMENT '备用字段2',
  COLUMN_3          VARCHAR(2000) COMMENT '备用字段3',
  COLUMN_4          VARCHAR(2000) COMMENT '备用字段4',
  COLUMN_5          VARCHAR(2000) COMMENT '备用字段5'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='题库明细表';
ALTER TABLE EXAM_QUESTION_BANK_DETAIL ADD CONSTRAINT FK_EXAM_QUESTION_BANK_DETAIL_QUESTION_BANK FOREIGN KEY (QUESTION_BANK_ID) REFERENCES EXAM_QUESTION_BANK (QUESTION_BANK_ID);

-- ----------------------------
-- Table structure for EXAM_CHOICE_QUESTION
-- ----------------------------
DROP TABLE IF EXISTS EXAM_CHOICE_QUESTION;
CREATE TABLE EXAM_CHOICE_QUESTION (
  CHOICE_QUESTION_ID  CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  QUESTION_ID         CHAR(36) COMMENT '题库明细ID',
  CHOICE_CONTENT      VARCHAR(200) NOT NULL COMMENT '选择题A-Z100个字符要注意',
  CREATOR_ID          CHAR(36) NOT NULL COMMENT '创建人ID',
  COMPANY_ID          CHAR(36) COMMENT '企业ID',
  IS_DEL              CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME              TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间',
  CHOICE_NO           CHAR(1) NOT NULL COMMENT '选项序号'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='选择题选项';
ALTER TABLE EXAM_CHOICE_QUESTION ADD CONSTRAINT FK_EXAM_CHOICE_QUESTION_QUESTION_BANK_DTL FOREIGN KEY (QUESTION_ID) REFERENCES EXAM_QUESTION_BANK_DETAIL (QUESTION_ID);

-- ----------------------------
-- Table structure for EXAM_PAPER_CHAPTER
-- ----------------------------
DROP TABLE IF EXISTS EXAM_PAPER_CHAPTER;
CREATE TABLE EXAM_PAPER_CHAPTER (
  PAPER_CHAPTER_ID    CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  PAPER_ID            CHAR(36) COMMENT '考卷ID',
  CHAPTER_NAME        VARCHAR(200) NOT NULL COMMENT '章节名称',
  SORT_NO             INTEGER(11) COMMENT '排序号',
  REMARK              VARCHAR(1000) COMMENT '章节备注',
  QUESTION_BANK_ID    CHAR(36) NOT NULL COMMENT '题库ID',
  QUESTION_TYPE       CHAR(1) NOT NULL COMMENT '题目类型，1 单选题；2 多选题；3 判断题；4 填空题；5 问答题',
  DIFFICULTY_TYPE     CHAR(1) NOT NULL COMMENT '试题难度，1 非常容易；2 比较容易；3 常规；4 较难；5 非常难',
  QUESTION_COUNT      INTEGER(11) UNSIGNED ZEROFILL NOT NULL COMMENT '试题数量',
  VALUE_PER_QUESTION  DECIMAL(8,2) UNSIGNED ZEROFILL NOT NULL COMMENT '每题分值',
  CREATOR_ID          CHAR(36) NOT NULL COMMENT '创建人ID',
  COMPANY_ID          CHAR(36) COMMENT '企业ID',
  IS_DEL              CHAR(1) NOT NULL COMMENT '是否删除',
  U_TIME              TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='考卷章节表';
ALTER TABLE EXAM_PAPER_CHAPTER ADD CONSTRAINT FK_EXAM_PAPER_CHAPTER_PAPER FOREIGN KEY (PAPER_ID) REFERENCES EXAM_PAPER (PAPER_ID);

-- ----------------------------
-- Table structure for EXAM_PAPER_CHAPTER_DETAIL
-- ----------------------------
DROP TABLE IF EXISTS EXAM_PAPER_CHAPTER_DETAIL;
CREATE TABLE EXAM_PAPER_CHAPTER_DETAIL (
  PAPER_CHAPTER_DETAIL_ID CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  PAPER_CHAPTER_ID        CHAR(36) COMMENT '章节ID',
  SORT_NO                 INTEGER(11) COMMENT '排序号',
  QUESTION_ID             CHAR(36) NOT NULL COMMENT '试题ID',
  QUESTION_VALUE          DECIMAL(8,2) COMMENT '分值',
  CREATOR_ID              CHAR(36) NOT NULL COMMENT '创建人ID',
  COMPANY_ID              CHAR(36) COMMENT '企业ID',
  IS_DEL                  CHAR(1) NOT NULL COMMENT '是否删除',
  U_TIME                  TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='考卷章节明细表';
ALTER TABLE EXAM_PAPER_CHAPTER_DETAIL ADD CONSTRAINT FK_EXAM_PAPER_CHAPTER_DETAIL_CHAPTER FOREIGN KEY (PAPER_CHAPTER_ID) REFERENCES EXAM_PAPER_CHAPTER (PAPER_CHAPTER_ID);

-- ----------------------------
-- Table structure for EXAM_ANSWER
-- ----------------------------
DROP TABLE IF EXISTS EXAM_ANSWER;
CREATE TABLE EXAM_ANSWER (
  ANSWER_ID         CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  PAPER_ID          CHAR(36) NOT NULL COMMENT '考卷ID',
  SHIP_ID           CHAR(36) NOT NULL COMMENT '船舶ID',
  POST_ID           CHAR(36) NOT NULL COMMENT '岗位ID',
  USER_ID           CHAR(36) NOT NULL COMMENT '人员ID',
  ANSWER_START_DATE DATETIME NOT NULL COMMENT '考卷答题开始时间',
  ANSWER_END_DATE   DATETIME NOT NULL COMMENT '考卷答题结束时间',
  ANSWER_DURATION   INTEGER(11) NOT NULL COMMENT '考卷答题时间',
  ANSWER_SCORE      INTEGER(11) NOT NULL COMMENT '得分',
  REMARK            VARCHAR(1000) COMMENT '备注',
  STATUS            CHAR(1) NOT NULL COMMENT '状态1开放2关闭',
  CREATOR_ID        CHAR(36) NOT NULL COMMENT '创建人ID',
  COMPANY_ID        CHAR(36) COMMENT '企业ID',
  IS_DEL            CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME            TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='答题表';
ALTER TABLE EXAM_ANSWER ADD CONSTRAINT FK_EXAM_ANSWER_PAPER FOREIGN KEY (PAPER_ID) REFERENCES EXAM_PAPER (PAPER_ID);

-- ----------------------------
-- Table structure for EXAM_ANSWER_DETAIL
-- ----------------------------
DROP TABLE IF EXISTS EXAM_ANSWER_DETAIL;
CREATE TABLE EXAM_ANSWER_DETAIL (
  ANSWER_DETAIL_ID        CHAR(36) NOT NULL PRIMARY KEY COMMENT '答题明细ID',
  ANSWER_ID               CHAR(36) COMMENT '答题ID',
  PAPER_CHAPTER_DETAIL_ID CHAR(36) COMMENT '章节明细ID',
  ANSWER_CONTENT          VARCHAR(2000) NOT NULL COMMENT '用户答案',
  IS_CORRECT              CHAR(1) COMMENT '是否正确，0 否；1 是',
  SCORE                   DECIMAL(8,2) NOT NULL COMMENT '得分',
  CREATOR_ID              CHAR(36) NOT NULL COMMENT '创建人ID',
  SHIP_ID                 CHAR(36) COMMENT '船舶ID',
  COMPANY_ID              CHAR(36) NOT NULL COMMENT '企业ID',
  IS_DEL                  CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME                  TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='答题明细表';
ALTER TABLE EXAM_ANSWER_DETAIL ADD CONSTRAINT FK_EXAM_ANSWER_DETAIL_CHAPTER_DETAIL FOREIGN KEY (PAPER_CHAPTER_DETAIL_ID) REFERENCES EXAM_PAPER_CHAPTER_DETAIL (PAPER_CHAPTER_DETAIL_ID);
ALTER TABLE EXAM_ANSWER_DETAIL ADD CONSTRAINT FK_EXAM_ANSWER_DETAIL_ANSWER FOREIGN KEY (ANSWER_ID) REFERENCES EXAM_ANSWER (ANSWER_ID);

-- ----------------------------
-- Table structure for EXAM_PAPER_DEPT_REF
-- ----------------------------
DROP TABLE IF EXISTS EXAM_PAPER_DEPT_REF;
CREATE TABLE EXAM_PAPER_DEPT_REF (
  PAPER_DEPT_REF_ID CHAR(36) NOT NULL PRIMARY KEY COMMENT '答题明细ID',
  PAPER_ID          CHAR(36) COMMENT '考卷ID',
  SHIP_ID           CHAR(36) COMMENT '船舶ID',
  DEPT_ID           CHAR(36) COMMENT '部门ID',
  POST_ID           CHAR(36) COMMENT '岗位ID',
  USER_ID           CHAR(36) NOT NULL COMMENT '用户ID',
  CREATOR_ID        CHAR(36) NOT NULL COMMENT '创建人ID',
  COMPANY_ID        CHAR(36) COMMENT '企业ID',
  IS_DEL            CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME            TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='考卷分配考生表';
ALTER TABLE EXAM_PAPER_DEPT_REF ADD CONSTRAINT FK_EXAM_PAPER_DEPT_REF_PAPER FOREIGN KEY (PAPER_ID) REFERENCES EXAM_PAPER (PAPER_ID);

-- portal tables -------------------------------------------------------------------------------------------------------

-- ----------------------------
-- Table structure for CMS_CHANNEL
-- ----------------------------
DROP TABLE IF EXISTS CMS_CHANNEL;
CREATE TABLE CMS_CHANNEL (
  CHANNEL_ID    CHAR(36) NOT NULL PRIMARY KEY COMMENT '栏目ID',
  CHANNEL_NO    INTEGER(11) NOT NULL,
  PARENT        CHAR(36) COMMENT '父栏目ID',
  SORT          INTEGER(11) COMMENT '排序',
  IS_DISPLAY    INTEGER(11) COMMENT '是否显示',
  CHANNEL_NAME  VARCHAR(500) NOT NULL COMMENT '名称',
  LINK          VARCHAR(500) COMMENT '外部链接',
  COMPANY_ID    CHAR(36) COMMENT '企业ID',
  U_TIME        TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间',
  IS_DEL        CHAR(1) NOT NULL COMMENT '是否删除',
  CHANNEL_TYPE  CHAR(1) COMMENT '栏目类型，1 单页；2 新闻；3 图库'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='CMS栏目表';

-- ----------------------------
-- Table structure for CMS_CONTENT
-- ----------------------------
DROP TABLE IF EXISTS CMS_CONTENT;
CREATE TABLE CMS_CONTENT (
  CONTENT_ID    CHAR(36) NOT NULL PRIMARY KEY COMMENT '内容ID',
  CHANNEL_ID    CHAR(36) NOT NULL COMMENT '栏目ID',
  USER_ID       CHAR(36) COMMENT '用户ID',
  TOP_LEVEL     INTEGER(11) COMMENT '置顶级别',
  HAS_TITLE_IMG INTEGER(11) COMMENT '是否标题图片',
  IS_RECOMMEND  INTEGER(11) COMMENT '是否推荐',
  STATUS        INTEGER(11) COMMENT '状态',
  VIEW_DAY      INTEGER(11) COMMENT '浏览次数',
  COMMENTS_DAY  INTEGER(11) COMMENT '评论次数',
  DOWNLOADS_DAY INTEGER(11) COMMENT '下载次数',
  UPS_DAY       INTEGER(11) COMMENT '上传次数',
  TITLE         VARCHAR(150) NOT NULL COMMENT '标题',
  SHORT_TITLE   VARCHAR(150) COMMENT '简短标题',
  AUTHOR        VARCHAR(100) COMMENT '作者',
  ORIGIN        VARCHAR(100) COMMENT '来源',
  ORIGIN_URL    VARCHAR(255) COMMENT '来源链接',
  DESCRIPTION   VARCHAR(255) COMMENT '描述',
  RELEASE_DATE  DATETIME COMMENT '发布日期',
  MEDIA_PATH    VARCHAR(255) COMMENT '媒体路径',
  MEDIA_TYPE    VARCHAR(20) COMMENT '媒体类型',
  TITLE_IMG     VARCHAR(100) COMMENT '标题图片',
  CONTENT_IMG   VARCHAR(100) COMMENT '内容图片',
  LINK          VARCHAR(255) COMMENT '外部链接',
  IS_DEL        CHAR(1) NOT NULL COMMENT '是否删除',
  COMPANY_ID    CHAR(36) COMMENT '企业ID',
  U_TIME        TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间',
  TXT           TEXT COMMENT '文本',
  TXT1          TEXT COMMENT '文本1',
  TXT2          TEXT COMMENT '文本2',
  TXT3          TEXT COMMENT '文本3'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='CMS内容表';
ALTER TABLE CMS_CONTENT ADD CONSTRAINT FK_CMS_CONTENT_CHANNEL FOREIGN KEY (CHANNEL_ID) REFERENCES CMS_CHANNEL (CHANNEL_ID);

-- ----------------------------
-- Table structure for CMS_FRIENDLINK
-- ----------------------------
DROP TABLE IF EXISTS CMS_FRIENDLINK;
CREATE TABLE CMS_FRIENDLINK (
  FRIENDLINK_ID CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  SITE_NAME     VARCHAR(150) NOT NULL COMMENT '网站名称',
  DOMAIN        VARCHAR(255) NOT NULL COMMENT '网站地址',
  LOGO          VARCHAR(150) COMMENT '图标',
  LOGO_GRAY     VARCHAR(150) COMMENT '灰色图标',
  EMAIL         VARCHAR(100) COMMENT '站长邮箱',
  DESCRIPTION   VARCHAR(255) COMMENT '描述',
  VIEWS         INTEGER(11) DEFAULT '0' COMMENT '点击次数',
  IS_ENABLED    CHAR(1) DEFAULT '1' COMMENT '是否显示',
  SORT          INTEGER(11) NOT NULL DEFAULT '10' COMMENT '排列顺序',
  COMPANY_ID    CHAR(36) COMMENT '企业ID',
  U_TIME        TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间',
  IS_DEL        CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='CMS友情链接';

-- ----------------------------
-- Table structure for CMS_SITE_CONFIG
-- ----------------------------
DROP TABLE IF EXISTS CMS_SITE_CONFIG;
CREATE TABLE CMS_SITE_CONFIG (
  ID                CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  DOMAIN_NAME       VARCHAR(200) COMMENT '域名',
  FAVICON           VARCHAR(200) COMMENT '站点ICON',
  BACK_SITE_PATH    VARCHAR(200) COMMENT '后台路径',
  BACK_SITE_NAME    VARCHAR(200) COMMENT '后台网站名称',
  BACK_KEYWORDS     VARCHAR(200) COMMENT '后台站点关键字',
  BACK_DESCRIPTION  VARCHAR(1000) COMMENT '后台站点描述',
  BACK_LOGO         VARCHAR(200) COMMENT '后台站点LOGO',
  FRONT_SITE_PATH   VARCHAR(200) COMMENT '后台路径',
  FRONT_SITE_NAME   VARCHAR(200) COMMENT '前台网站名称',
  FRONT_SITE_ENAME  VARCHAR(200) COMMENT '前台网站名称',
  FRONT_KEYWORDS    VARCHAR(200) COMMENT '前台站点关键字',
  FRONT_DESCRIPTION VARCHAR(1000) COMMENT '前台站点描述',
  FRONT_LOGO        VARCHAR(200) COMMENT '前台站点LOGO',
  SHIP_ID           CHAR(36) COMMENT '船舶ID',
  IS_DEL            CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  COMPANY_ID        CHAR(36) COMMENT '企业ID',
  U_TIME            TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='CMS站点配置表';

-- ----------------------------
-- Table structure for CMS_INTRODUCE
-- ----------------------------
DROP TABLE IF EXISTS CMS_INTRODUCE;
CREATE TABLE CMS_INTRODUCE (
  INTRODUCE_ID    CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  INTRODUCE_TYPE  CHAR(1) COMMENT '类型，1 船舶简介；2 公司简介；3 登船须知',
  INTRODUCE_DESC  TEXT COMMENT '简介内容',
  FILE_PATH       VARCHAR(200) COMMENT '图片路径',
  MAIN_HONOUR     VARCHAR(4000),
  SHIP_MAIN_EQU   VARCHAR(4000) COMMENT '船舶主要设备',
  SHIP_PARA       VARCHAR(4000) COMMENT '船舶参数',
  U_TIME          TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间',
  COMPANY_ID      CHAR(36) COMMENT '企业ID',
  IS_DEL          CHAR(1) NOT NULL COMMENT '是否删除，1 是；2 否'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='简介表';

-- ----------------------------
-- Table structure for CMS_HONOUR
-- ----------------------------
DROP TABLE IF EXISTS CMS_HONOUR;
CREATE TABLE CMS_HONOUR (
  HONOUR_ID       CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  HONOUR_NAME     VARCHAR(50) COMMENT '荣誉名称',
  HONOUR_IMG_URL  VARCHAR(200) COMMENT '图片URL',
  HONOUR_DESC     TEXT COMMENT '荣誉介绍',
  HONOUR_TIME     DATE COMMENT '获奖时间',
  U_TIME          TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间',
  COMPANY_ID      CHAR(36) COMMENT '企业ID',
  IS_DEL          CHAR(1) NOT NULL COMMENT '是否删除，1 是；2 否'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='荣誉表';

-- ----------------------------
-- Table structure for CMS_EXPEDITION_ORGANIZATION
-- ----------------------------
DROP TABLE IF EXISTS CMS_EXPEDITION_ORGANIZATION;
CREATE TABLE CMS_EXPEDITION_ORGANIZATION (
  ORGANIZATION_ID CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  CNAME           VARCHAR(200) COMMENT '机构中文名称',
  ENAME           VARCHAR(200) COMMENT '机构英文名称',
  ADDRESS         VARCHAR(200) COMMENT '地址',
  POST_CODE       VARCHAR(50) COMMENT '邮政编码',
  URL             VARCHAR(200) COMMENT '网址',
  IMG_URL         VARCHAR(200) COMMENT '图片',
  DESCRIPTION     TEXT COMMENT '描述',
  OLDID           DECIMAL(9),
  COMMON_ID       DECIMAL(10),
  U_TIME          TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间',
  COMPANY_ID      CHAR(36) COMMENT '企业ID',
  IS_DEL          CHAR(1) NOT NULL COMMENT '是否删除，1 是；2 否'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='科考人员的组织机构表';

-- ----------------------------
-- Table structure for CMS_PERSON
-- ----------------------------
DROP TABLE IF EXISTS CMS_PERSON;
CREATE TABLE CMS_PERSON (
  PERSON_ID         CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  CNAME             VARCHAR(200) COMMENT '中文名称',
  ENAME             VARCHAR(200) COMMENT '英文名称',
  COUNTRY           VARCHAR(200) COMMENT '国家',
  COMPANY           VARCHAR(200) COMMENT '单位',
  SEX               VARCHAR(2) COMMENT '性别，男；女',
  PHONE             VARCHAR(50) COMMENT '联系电话',
  MOBILE            VARCHAR(50) COMMENT '手机',
  EMAIL             VARCHAR(100) COMMENT '电子邮箱',
  ETHNIC            VARCHAR(100) COMMENT '民族',
  BIRTH_PLACE       VARCHAR(100) COMMENT '籍贯',
  BIRTHDAY          DATETIME COMMENT '生日',
  EDUCATION         VARCHAR(50) COMMENT '学历',
  SPECIALTY         VARCHAR(100) COMMENT '专业',
  SPECIALTYEN       VARCHAR(500) COMMENT '专业英文名称',
  POLITICAL_STATUS  VARCHAR(100) COMMENT '政治面貌',
  POSITION          VARCHAR(100) COMMENT '职称',
  FAX               VARCHAR(100) COMMENT '传真',
  PHOTO_URL         VARCHAR(200) COMMENT '头像图片URL',
  REMARK            VARCHAR(2000) COMMENT '备注',
  U_TIME            TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间',
  U_USERNAME        VARCHAR(100) COMMENT '操作人',
  OLDID             DECIMAL(9),
  COMMON_ID         DECIMAL(10),
  COMPANY_ID        CHAR(36) COMMENT '企业ID',
  IS_DEL            CHAR(1) NOT NULL COMMENT '是否删除，1 是；2 否'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='科考人员信息表';

-- ----------------------------
-- Table structure for CMS_EXPEDITION
-- ----------------------------
DROP TABLE IF EXISTS CMS_EXPEDITION;
CREATE TABLE CMS_EXPEDITION (
  EXPEDITION_ID   CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  EXPEDITION_TYPE CHAR(1) COMMENT '分类，1 南极；2 北极',
  NAME            VARCHAR(200) COMMENT '队次名称',
  EXPEDITION_NO   DECIMAL(9) COMMENT '按南北极分类排序',
  BEGIN_DATE      DATETIME COMMENT '开始时间',
  END_DATE        DATETIME COMMENT '截止时间',
  DESCRIPTION     TEXT COMMENT '简要介绍',
  DESCRIPTION_EN  TEXT COMMENT '简要介绍（英文）',
  VOYAGE_FILE     VARCHAR(200) COMMENT '航迹图url',
  REMARK          VARCHAR(2000) COMMENT '备注',
  U_TIME          TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间',
  U_USERNAME      VARCHAR(100) COMMENT '操作人',
  OLDID           DECIMAL(10),
  COMPANY_ID      CHAR(36) COMMENT '企业ID',
  IS_DEL          CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='科考队次信息表';

-- ----------------------------
-- Table structure for CMS_EXPEDITION_PERSON
-- ----------------------------
DROP TABLE IF EXISTS CMS_EXPEDITION_PERSON;
CREATE TABLE CMS_EXPEDITION_PERSON (
  EXPEDITION_PERSON_ID  CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  PERSON_ID             CHAR(36) COMMENT '人员ID',
  EXPEDITION_ID         CHAR(36) COMMENT '队次ID',
  ORGANIZATION_ID       CHAR(36) COMMENT '机构ID',
  INSPECTION_TYPE       CHAR(1) COMMENT '考察类型，1 越冬；2 度夏',
  WORK_PLACE            VARCHAR(50) COMMENT '工作地点，1 中山站；2 昆仑站；3 长城站；4 雪龙船；5 南大洋',
  WORK_PLACE_EN         VARCHAR(200) COMMENT '工作地点（英文）',
  INSPECTION_TASK       VARCHAR(4000) COMMENT '考察任务',
  INSPECTION_TASK_EN    VARCHAR(4000) COMMENT '考察任务（英文）',
  WORK_ROLE             VARCHAR(200) COMMENT '角色',
  WORK_ROLE_EN          VARCHAR(200) COMMENT '角色（英文）',
  WORK_DETAIL           VARCHAR(4000) COMMENT '工作详情',
  REMARK                VARCHAR(4000) COMMENT '备注',
  OLDID                 DECIMAL(10),
  EXPEDITION_ID_OLD2    DECIMAL(10),
  PERSON_ID_OLD2        DECIMAL(10),
  ORGANIZATION_ID_OLD2  DECIMAL(10),
  U_TIME                TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间',
  COMPANY_ID            CHAR(36) COMMENT '企业ID',
  IS_DEL                CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='科考队次与人员关系表';

-- ----------------------------
-- Table structure for CMS_STATION
-- ----------------------------
DROP TABLE IF EXISTS CMS_STATION;
CREATE TABLE CMS_STATION (
  STATION_ID      CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  FULL_CNAME      VARCHAR(200) COMMENT '中文全称',
  FULL_ENAME      VARCHAR(200) COMMENT '英文全称',
  CATEGORY        VARCHAR(100) COMMENT '性质',
  CATEGORY_EN     VARCHAR(500) COMMENT '性质（英文）',
  BUILD_DATE      DATETIME COMMENT '建立日期',
  CAPACITY        VARCHAR(100) COMMENT '人员容量',
  DESCRIPITON     TEXT COMMENT '详细描述',
  DESCRIPITON_EN  TEXT COMMENT '详细描述（英文）',
  PHOTO_URL       VARCHAR(200) COMMENT '图片URL',
  REMARK          VARCHAR(4000) COMMENT '备注',
  U_TIME          TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间',
  U_USERNAME      VARCHAR(100) COMMENT '操作人',
  OLDID           DECIMAL(10),
  COMMON_ID       DECIMAL(10),
  COMPANY_ID      CHAR(36) COMMENT '企业ID',
  IS_DEL          CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='观测系统信息表';

-- ----------------------------
-- Table structure for CMS_STATION_CONFIG
-- ----------------------------
DROP TABLE IF EXISTS CMS_STATION_CONFIG;
CREATE TABLE CMS_STATION_CONFIG (
  ID            CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  STATION_CNAME VARCHAR(200) COMMENT '站点名称',
  LONGITUDE     DECIMAL(12,7) COMMENT '经度',
  LATITUDE      DECIMAL(12,7) COMMENT '纬度',
  SORTNO        DECIMAL(12) COMMENT '序号',
  U_TIME        TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间',
  COMPANY_ID    CHAR(36) COMMENT '企业ID',
  IS_DEL        CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='站点配置表';

-- ----------------------------
-- Table structure for CMS_FILE
-- ----------------------------
DROP TABLE IF EXISTS CMS_FILE;
CREATE TABLE CMS_FILE (
  FILE_ID         CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  FILE_NAME       VARCHAR(200) COMMENT '文件名称',
  FILE_REAL_NAME  VARCHAR(200) COMMENT '文件真实名称',
  FILE_SIZE       DECIMAL(9) NOT NULL COMMENT '文件大小',
  FILE_TYPE       VARCHAR(20) COMMENT '文件类型',
  FILE_PATH       VARCHAR(200) COMMENT '文件磁盘路径',
  FILE_URL        VARCHAR(200) COMMENT '文件URL',
  COMPANY_ID      CHAR(36) COMMENT '企业ID',
  IS_DEL          CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME          TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='门户文件表';

-- ----------------------------
-- Table structure for CMS_FILE_MANAGE
-- ----------------------------
DROP TABLE IF EXISTS CMS_FILE_MANAGE;
CREATE TABLE CMS_FILE_MANAGE (
  FILE_MANAGE_ID  CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  FILE_ID         CHAR(36) COMMENT '文件ID',
  BUSINESS_ID     CHAR(36) COMMENT '业务ID',
  OPERATOR_ID     CHAR(36) NOT NULL COMMENT '上传人ID',
  OPERATOR_NAME   VARCHAR(200) COMMENT '上传人名称',
  CREATED_DATE    DATETIME COMMENT '文件上传时间',
  COMPANY_ID      CHAR(36) COMMENT '企业ID',
  IS_DEL          CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME          TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='门户文件管理表';

-- ----------------------------
-- Table structure for CMS_SYS_CONFIG
-- ----------------------------
DROP TABLE IF EXISTS CMS_SYS_CONFIG;
CREATE TABLE CMS_SYS_CONFIG (
  ID              CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  CONFIG_KEY      VARCHAR(500) NOT NULL COMMENT '配置键',
  CONFIG_VALUE    VARCHAR(500) COMMENT '配置值',
  CONFIG_EDITABLE DECIMAL(1) COMMENT '是否可编辑，0 否；1 是',
  CONFIG_ENABLE   DECIMAL(1) COMMENT '是否启用，0 否；1 是',
  CONFIG_REMARK   VARCHAR(2000) COMMENT '备注',
  OPERATOR        VARCHAR(500) NOT NULL COMMENT '操作人',
  COMPANY_ID      CHAR(36) COMMENT '企业ID',
  IS_DEL          CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME          TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='门户系统配置表';

-- ----------------------------
-- Table structure for CMS_BOOKS
-- ----------------------------
DROP TABLE IF EXISTS CMS_BOOKS;
CREATE TABLE CMS_BOOKS (
  BOOKS_ID      CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  BOOKS_NAME    VARCHAR(200) COMMENT '图书名称',
  AUTHOR        VARCHAR(200) COMMENT '图书作者',
  BOOKS_TYPE    VARCHAR(100) NOT NULL COMMENT '图书类型',
  BOOKS_IMG     VARCHAR(100) COMMENT '图书图片相对地址',
  BOOKS_PATH    VARCHAR(200) COMMENT '图书路径',
  PUBLISH_DATE  DATETIME COMMENT '发布时间',
  BYTE_SIZE     VARCHAR(200) COMMENT '图书字数',
  STATUS        VARCHAR(200) COMMENT '状态',
  REMARK        VARCHAR(2000) COMMENT '备注',
  COMPANY_ID    CHAR(36) COMMENT '企业ID',
  IS_DEL        CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME        TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='图书信息';

-- ----------------------------
-- Table structure for CMS_BOOKS_CATALOG
-- ----------------------------
DROP TABLE IF EXISTS CMS_BOOKS_CATALOG;
CREATE TABLE CMS_BOOKS_CATALOG (
  BOOKS_CATALOG_ID  CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  BOOKS_ID          CHAR(36) COMMENT '图书ID',
  CATALOG_NAME      VARCHAR(200) COMMENT '目录名称',
  PARENT_ID         CHAR(36) COMMENT '上级目录ID',
  ORDER_ID          INTEGER COMMENT '排序号',
  CATALOG_TYPE      CHAR(1) NOT NULL COMMENT '目录类型，1 目录；2 章节',
  PUBLISH_DATE      DATETIME COMMENT '发布时间',
  CONTENT_TYPE      CHAR(1) COMMENT '小说内容类型，1 附件；2 大文本',
  CONTENT_FILE      CHAR(200) COMMENT '小说附件路径',
  CONTENT_TEXT      TEXT COMMENT '小说正文',
  REMARK            VARCHAR(2000) COMMENT '备注',
  COMPANY_ID        CHAR(36) COMMENT '企业ID',
  IS_DEL            CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME            TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='图书目录信息';

-- ----------------------------
-- Table structure for CMS_BOOKS_TYPE
-- ----------------------------
DROP TABLE IF EXISTS CMS_BOOKS_TYPE;
CREATE TABLE CMS_BOOKS_TYPE (
  BOOKS_TYPE_ID   CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  BOOKS_TYPE_NAME VARCHAR(200) COMMENT '图书分类名称',
  BOOKS_TYPE_CODE VARCHAR(200) COMMENT '图书分类编号',
  ORDER_ID        INTEGER COMMENT '分类排序号',
  REMARK          VARCHAR(2000) COMMENT '备注',
  COMPANY_ID      CHAR(36) COMMENT '企业ID',
  IS_DEL          CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME          TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='CMS图书分类';

-- ----------------------------
-- TABLE STRUCTURE FOR CMS_DONATION_INFO
-- ----------------------------
DROP TABLE IF EXISTS CMS_DONATION_INFO;
CREATE TABLE CMS_DONATION_INFO (
  DONATION_ID   CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  DONATION_DATE DATETIME COMMENT '捐赠日期',
  DONATOR       VARCHAR(1000) COMMENT '捐赠人',
  DONATOR_TYPE  CHAR(1) COMMENT '捐赠人类别',
  REMARK        TEXT COMMENT '捐赠内容',
  DONATE_VALUE  DECIMAL(18,2) COMMENT '价值（人民币）',
  DONATE_USE    VARCHAR(200) COMMENT '捐赠用途',
  COMPANY_ID    CHAR(36) COMMENT '企业ID',
  U_TIME        TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间',
  IS_DEL        CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是'
) ENGINE=INNODB DEFAULT CHARSET=UTF8 COMMENT='厦门大学科考船捐赠信息表';

-- synchronization tables ----------------------------------------------------------------------------------------------

-- ----------------------------
-- Table structure for SYNCH_CORE_CONFIG
-- ----------------------------
DROP TABLE IF EXISTS SYNCH_CORE_CONFIG;
CREATE TABLE SYNCH_CORE_CONFIG (
  CORE_ID             CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  ISAUTO_SYNCH        CHAR(1) NOT NULL COMMENT '是否自动同步',
  ISZIP               CHAR(1) COMMENT '是否压缩文件',
  ISEXTRACT           CHAR(1) NOT NULL COMMENT '是否解压文件',
  AUTO_TIMES          INTEGER(11) COMMENT '自动同步周期单位秒',
  MAXZIP_VALUE        INTEGER(11) NOT NULL COMMENT '分卷压缩值',
  IS_SYNCH_LOB        CHAR(1) COMMENT '是否同步大文件',
  MAXLOB_VALUE        INTEGER(12) COMMENT '最大同步的文件',
  LAST_MAIL_TIME      DATETIME COMMENT '最后一次邮件收发时间',
  LAST_SYNCH_TIME     DATETIME COMMENT '最后一次同步时间，加密',
  IS_SYNCH_ATTACHMENT CHAR(1) COMMENT '是否同步附件，1 同步；0 不同步',
  ATTACHMENT_SIZE     INTEGER(8) COMMENT '同步附件大小限制，单位是（KB）',
  COMPANY_ID          CHAR(36) COMMENT '企业ID',
  IS_DEL              CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME              TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间',
  OTHER1              VARCHAR(2000) COMMENT '扩展字段1',
  OTHER2              VARCHAR(2000) COMMENT '扩展字段2',
  OTHER3              VARCHAR(2000) COMMENT '扩展字段3',
  OTHER4              VARCHAR(2000) COMMENT '扩展字段4',
  OTHER5              VARCHAR(2000) COMMENT '扩展字段5'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='同步核心配置';

-- ----------------------------
-- Table structure for SYNCH_PATH_CONFIG
-- ----------------------------
DROP TABLE IF EXISTS SYNCH_PATH_CONFIG;
CREATE TABLE SYNCH_PATH_CONFIG (
  PATH_ID             CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  SEND_PATH           VARCHAR(1000) COMMENT '发送路径',
  SENDBACK_PATH       VARCHAR(1000) NOT NULL COMMENT '发送备份路径',
  RYDEX_SEND_PATH     VARCHAR(1000) COMMENT 'Rydex、Amos相关邮件发送路径',
  RECEIVE_PATH        VARCHAR(1000) NOT NULL COMMENT '接收路径',
  RECEIVEBACK_PATH    VARCHAR(1000) NOT NULL COMMENT '接收备份路径',
  RYDEX_RECEIVE_PATH  VARCHAR(1000) COMMENT 'Rydex、Amos相关邮件接收路径',
  LOG_PATH            VARCHAR(1000) NOT NULL COMMENT '日志',
  ERROR_LOG_PATH      VARCHAR(1000) COMMENT '错误日志',
  ERRMAIL_PATH        VARCHAR(1000) COMMENT '错误邮件',
  COMPANY_ID          CHAR(36) COMMENT '企业ID',
  IS_RYDEX            CHAR(1) COMMENT '是否使用Rydex邮件处理，1 启用mailService；2 启用Rydex/amos；3 Rydex和mailServer同时使用',
  IS_DEL              CHAR(1) COMMENT '是否删除，0 否；1 是',
  U_TIME              TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间',
  OTHER1              VARCHAR(2000) COMMENT '扩展字段1',
  OTHER2              VARCHAR(2000) COMMENT '扩展字段2',
  OTHER3              VARCHAR(2000) COMMENT '扩展字段3',
  OTHER4              VARCHAR(2000) COMMENT '扩展字段4',
  OTHER5              VARCHAR(2000) COMMENT '扩展字段5'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='同步路径配置表';

-- ----------------------------
-- Table structure for SYNCH_DBBACK_CONFIG
-- ----------------------------
DROP TABLE IF EXISTS SYNCH_DBBACK_CONFIG;
CREATE TABLE SYNCH_DBBACK_CONFIG (
  DBBACK_ID         CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  DBBACK_TYPE       CHAR(1) COMMENT '备份数据库类型',
  DBBACK_CONFIG     VARCHAR(1000) COMMENT '备份数据的地址',
  DBBACK_PATH       VARCHAR(1000) COMMENT '数据库备份路径',
  DBBACK_NUMBER     INTEGER(11) COMMENT '备份数量',
  DBBACK_START_TIME DATETIME COMMENT '备份开始时间',
  DBBACK_END_TIME   DATETIME NOT NULL DEFAULT '0000-00-00 00:00:00' COMMENT '备份结束时间',
  SHIP_ID           CHAR(36) COMMENT '船舶ID',
  COMPANY_ID        CHAR(36) COMMENT '企业ID',
  IS_DEL            CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME            TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间',
  OTHER1            VARCHAR(2000) COMMENT '扩展字段1',
  OTHER2            VARCHAR(2000) COMMENT '扩展字段2',
  OTHER3            VARCHAR(2000) COMMENT '扩展字段3',
  OTHER4            VARCHAR(2000) COMMENT '扩展字段4',
  OTHER5            VARCHAR(2000) COMMENT '扩展字段5'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='同步数据库备份配置';
ALTER TABLE SYNCH_DBBACK_CONFIG ADD CONSTRAINT FK_SYNCH_DBBACK_CONFIG_SHIP FOREIGN KEY (SHIP_ID) REFERENCES SYS_SHIPINFO (SHIP_ID);

-- ----------------------------
-- Table structure for SYNCH_MAIL_CONFIG
-- ----------------------------
DROP TABLE IF EXISTS SYNCH_MAIL_CONFIG;
CREATE TABLE SYNCH_MAIL_CONFIG (
  MAIL_ID             CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  SMTP_MAILBOX        VARCHAR(1000) NOT NULL COMMENT 'SMTP邮箱',
  SMTP_ADDRESS        VARCHAR(1000) COMMENT 'SMTP服务器地址',
  SMTP_PASSWORD       VARCHAR(1000) NOT NULL COMMENT 'SMTP邮箱密码',
  SMTP_IS_SSL         CHAR(1) COMMENT 'SMTP是否开启SSL协议',
  SMTP_PORT           INTEGER(11) COMMENT 'SMTP端口号',
  POP3_MAILBOX        VARCHAR(1000) NOT NULL COMMENT 'POP3邮箱地址',
  POP3_ADDRESS        VARCHAR(1000) NOT NULL COMMENT 'POP3服务器地址',
  POP3_PASSWORD       VARCHAR(1000) COMMENT 'POP3邮箱密码',
  POP3_IS_SSL         CHAR(1) COMMENT 'POP3是否开启SSL协议',
  POP3_PORT           INTEGER(11) COMMENT 'POP3端口号',
  POP3_ISDOMIN        CHAR(1) COMMENT '是否使用域认证',
  POP3_DOMIN_ADDRESS  VARCHAR(1000) COMMENT '域服务器地址',
  IMAP_MAILBOX        VARCHAR(1000) COMMENT 'IMAP邮箱地址',
  IMAP_ADDRESS        VARCHAR(1000) COMMENT 'IMAP邮箱服务器',
  IMAP_PASSWORD       VARCHAR(1000) COMMENT 'IMAP邮箱密码',
  IMAP_PORT           VARCHAR(1000) COMMENT 'IMAP端口号',
  SHIP_ID             CHAR(36) COMMENT '船舶ID',
  COMPANY_ID          CHAR(36) COMMENT '企业ID',
  IS_DEL              CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME              TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间',
  OTHER1              VARCHAR(2000) COMMENT '扩展字段1',
  OTHER2              VARCHAR(2000) COMMENT '扩展字段2',
  OTHER3              VARCHAR(2000) COMMENT '扩展字段3',
  OTHER4              VARCHAR(2000) COMMENT '扩展字段4',
  OTHER5              VARCHAR(2000) COMMENT '扩展字段5'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='同步邮件配置表';
ALTER TABLE SYNCH_MAIL_CONFIG ADD CONSTRAINT FK_SYNCH_MAIL_CONFIG_SHIP FOREIGN KEY (SHIP_ID) REFERENCES SYS_SHIPINFO (SHIP_ID);

-- ----------------------------
-- Table structure for SYNCH_MAIL_REPORT_WARING
-- ----------------------------
DROP TABLE IF EXISTS SYNCH_MAIL_REPORT_WARING;
CREATE TABLE SYNCH_MAIL_REPORT_WARING (
  WARING_ID           CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  MAIL_ID             CHAR(36) COMMENT '邮件配置ID',
  SHIP_ID             CHAR(36) COMMENT '船舶ID，按船报警和发送周报',
  WARING_IS_START     CHAR(1) COMMENT '目标邮件是否开启，1 开启；0 未开启',
  WARING_CODE         VARCHAR(200) COMMENT '目标编码',
  WARING_TO_ADDRESS   VARCHAR(2000) COMMENT '目标地址可以是多个地址按照，号分割',
  WARING_CC_ADDRESS   VARCHAR(2000) COMMENT '目标抄送地址可以是多个地址按照，号分割',
  WARING_BCC_ADDRESS  VARCHAR(2000) COMMENT '目标暗送地址可以是多个地址按照，号分割',
  COMPANY_ID          CHAR(36) COMMENT '企业ID',
  IS_DEL              CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME              TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间',
  OTHER1              VARCHAR(2000) COMMENT '扩展字段1',
  OTHER2              VARCHAR(2000) COMMENT '扩展字段2',
  OTHER3              VARCHAR(2000) COMMENT '扩展字段3',
  OTHER4              VARCHAR(2000) COMMENT '扩展字段4',
  OTHER5              VARCHAR(2000) COMMENT '扩展字段5'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='邮件报警、报告表';
ALTER TABLE SYNCH_MAIL_REPORT_WARING ADD CONSTRAINT FK_SYNCH_MAIL_REPORT_WARING_MAIL_CONFIG FOREIGN KEY (MAIL_ID) REFERENCES SYNCH_MAIL_CONFIG (MAIL_ID);

-- ----------------------------
-- Table structure for SYNCH_SENDMAIL_TARGET
-- ----------------------------
DROP TABLE IF EXISTS SYNCH_SENDMAIL_TARGET;
CREATE TABLE SYNCH_SENDMAIL_TARGET (
  TARGET_ID           CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键,船舶ID或者企业ID',
  MAIL_ID             CHAR(36) COMMENT '邮件配置ID',
  TARGET_IS_START     CHAR(1) COMMENT '目标邮件是否开启，0 否；1 是',
  TARGET_CODE         VARCHAR(500) COMMENT '目标编码',
  TARGET_TO_ADDRESS   VARCHAR(2000) COMMENT '目标地址可以是多个地址按照，号分割',
  TARGET_CC_ADDRESS   VARCHAR(2000) COMMENT '目标抄送地址可以是多个地址按照，号分割',
  TARGET_BCC_ADDRESS  VARCHAR(2000) COMMENT '目标暗送地址可以是多个地址按照，号分割',
  TARGET_PATH         VARCHAR(1000) COMMENT '目标邮件附件路径',
  COMPANY_ID          CHAR(36) COMMENT '企业ID',
  IS_DEL              CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME              TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间',
  OTHER1              VARCHAR(2000) COMMENT '扩展字段1',
  OTHER2              VARCHAR(2000) COMMENT '扩展字段2',
  OTHER3              VARCHAR(2000) COMMENT '扩展字段3',
  OTHER4              VARCHAR(2000) COMMENT '扩展字段4',
  OTHER5              VARCHAR(2000) COMMENT '扩展字段5'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='邮件发送目标';
ALTER TABLE SYNCH_SENDMAIL_TARGET ADD CONSTRAINT FK_SYNCH_SENDMAIL_TARGET_MAIL_CONFIG FOREIGN KEY (MAIL_ID) REFERENCES SYNCH_MAIL_CONFIG (MAIL_ID);

-- ----------------------------
-- Table structure for SYNCH_COMPANY
-- ----------------------------
DROP TABLE IF EXISTS SYNCH_COMPANY;
CREATE TABLE SYNCH_COMPANY (
  SYNCH_COMPANY_ID  CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  COMPANY_ID        CHAR(36) COMMENT '企业ID',
  COMPANY_CNAME     VARCHAR(500) NOT NULL COMMENT '企业中文名称',
  COMPANY_CODE      VARCHAR(500) COMMENT '企业编码',
  COMPANY_STATUS    CHAR(1) COMMENT '状态，1 同步；0 不同步',
  LAST_SYNCH_TIME   DATETIME COMMENT '最后同步时间',
  REMARK            TEXT COMMENT '备注',
  IS_DEL            CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME            TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间',
  OTHER1            VARCHAR(2000) COMMENT '扩展字段1',
  OTHER2            VARCHAR(2000) COMMENT '扩展字段2',
  OTHER3            VARCHAR(2000) COMMENT '扩展字段3',
  OTHER4            VARCHAR(2000) COMMENT '扩展字段4',
  OTHER5            VARCHAR(2000) COMMENT '扩展字段5'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='同步的企业';

-- ----------------------------
-- Table structure for SYNCH_SHIP
-- ----------------------------
DROP TABLE IF EXISTS SYNCH_SHIP;
CREATE TABLE SYNCH_SHIP (
  SYNCH_SHIP_ID     CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  SYNCH_COMPANY_ID  CHAR(36) COMMENT '同步企业ID',
  SYNCH_SHIP_STATUS CHAR(1) NOT NULL COMMENT '状态，1 同步；0 不同步',
  SHIP_ID           CHAR(36) NOT NULL COMMENT '船舶ID',
  REMARK            VARCHAR(2000) COMMENT '备注',
  IS_DEL            CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME            TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间',
  COMPANY_ID        CHAR(36) COMMENT '企业ID',
  OTHER1            VARCHAR(2000) COMMENT '扩展字段1',
  OTHER2            VARCHAR(2000) COMMENT '扩展字段2',
  OTHER3            VARCHAR(2000) COMMENT '扩展字段3',
  OTHER4            VARCHAR(2000) COMMENT '扩展字段4',
  OTHER5            VARCHAR(2000) COMMENT '扩展字段5'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='同步的部门或船舶';

-- ----------------------------
-- Table structure for synch_log
-- ----------------------------
DROP TABLE IF EXISTS SYNCH_LOG;
CREATE TABLE SYNCH_LOG (
  LOG_ID            CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  SHIP_ID           CHAR(36) NOT NULL COMMENT '部门ID',
  FILE_SEQUENCE     VARCHAR(500) COMMENT '文件序列(000001)',
  FILE_TYPE         CHAR(1) COMMENT 'N 新文件；D 回执文件；S SQL文件；A 索取文件；V 索取文件-版本；U 升级文件；T 网络测试文件；E Error文件；M D的回执文件；B 业务文件；O 无需文件',
  FILE_ACTION       CHAR(1) COMMENT '发送还是接收，1 发送；2 接收(L|S)',
  FILE_NAME         VARCHAR(500) COMMENT '同步的文件名',
  FILE_MD5_VALUE    VARCHAR(500) COMMENT '文件MD5值，比对文件是否发生了变化',
  FILE_SIZE         DECIMAL(8,2) COMMENT '文件大小',
  FILE_ROW_COUNT    INTEGER(11) COMMENT '文件内记录数',
  FILE_CONTENT      TEXT COMMENT '文件内容',
  FILE_CREATE_TIME  TIMESTAMP COMMENT '文件生成时间或导入时间',
  LOG_SHOWN_CONTENT TEXT COMMENT '显示的内容，控制台和磁盘文件的日志内容，针对单个文件的',
  LOG_TYPE          INTEGER(11) COMMENT '日志类型，0 生成文件；1 接收到得文件；2 手动',
  LOG_DESC          VARCHAR(2000) COMMENT '日志的描述，生成：生成成功的描述，导入：导入成功或失败的描述',
  IMPORT_IS_SUCCESS CHAR(1) COMMENT '导入文件成功还是失败1成2败',
  SOFT_VERSION      VARCHAR(500) COMMENT '记录软件版本号',
  COMPANY_ID        CHAR(36) COMMENT '企业ID',
  IS_DEL            CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME            TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间',
  OTHER1            VARCHAR(2000) COMMENT '扩展字段1',
  OTHER2            VARCHAR(2000) COMMENT '扩展字段2',
  OTHER3            VARCHAR(2000) COMMENT '扩展字段3',
  OTHER4            VARCHAR(2000) COMMENT '扩展字段4',
  OTHER5            VARCHAR(2000) COMMENT '扩展字段5'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='同步日志';

-- ----------------------------
-- Table structure for SYNCH_LOG_DETAIL
-- ----------------------------
DROP TABLE IF EXISTS SYNCH_LOG_DETAIL;
CREATE TABLE SYNCH_LOG_DETAIL (
  DETAIL_ID     CHAR(36) NOT NULL PRIMARY KEY COMMENT '日志明细ID',
  LOG_ID        CHAR(36) NOT NULL COMMENT '日志ID',
  TABLE_NAME    VARCHAR(1000) NOT NULL COMMENT '表名称',
  ROW_COUNT     INTEGER(9) COMMENT '记录数，同步表记录数母',
  FILE_CONTENT  VARCHAR(2000) COMMENT '文件记录，主表有整体的，这里是单表部分的',
  OTHER1        VARCHAR(2000) COMMENT '扩展字段1',
  OTHER2        VARCHAR(2000) COMMENT '扩展字段2',
  OTHER3        VARCHAR(2000) COMMENT '扩展字段3',
  OTHER4        VARCHAR(2000) COMMENT '扩展字段4',
  OTHER5        VARCHAR(2000) COMMENT '扩展字段5',
  IS_DEL        CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  COMPANY_ID    CHAR(36) COMMENT '企业ID',
  U_TIME        TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='同步日志明细表';
ALTER TABLE SYNCH_LOG_DETAIL ADD CONSTRAINT FK_SYNCH_LOG_DETAIL_LOG FOREIGN KEY (LOG_ID) REFERENCES SYNCH_LOG (LOG_ID);

-- ----------------------------
-- Table structure for SYNCH_TABLE
-- ----------------------------
DROP TABLE IF EXISTS SYNCH_TABLE;
CREATE TABLE SYNCH_TABLE (
  TABLE_ID              CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  TABLE_NAME            VARCHAR(1000) NOT NULL COMMENT '系统内所有表的名称',
  TABLE_DISPLAYNAME     VARCHAR(1000) NOT NULL COMMENT '表显示名称',
  TABLE_INDEX           INTEGER(11) NOT NULL COMMENT '表在数据库中顺序即先后顺序',
  TABLE_IS_SYNCH        CHAR(1) NOT NULL COMMENT '是否同步，1 同步；0 不同步',
  TABLE_SYNCH_TYPE      CHAR(1) COMMENT '同步类型，1 全表同步；0 按字段同步',
  SYNCH_CONDITIONOFLAND TEXT COMMENT '同步条件格式为 AND Status=1 程序内置WHERE 1=1',
  SYNCH_CONDITIONOFSHIP TEXT COMMENT '同步条件格式为 AND Status=1 程序内置WHERE 1=1',
  LANDTOSHIP_CONDITION  TEXT COMMENT '岸基向船端发送的条件',
  IS_DEL                CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME                TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间',
  COMPANY_ID            CHAR(36) COMMENT '企业ID',
  OTHER1                VARCHAR(2000) COMMENT '扩展字段1',
  OTHER2                VARCHAR(2000) COMMENT '扩展字段2',
  OTHER3                VARCHAR(2000) COMMENT '扩展字段3',
  OTHER4                VARCHAR(2000) COMMENT '扩展字段4',
  OTHER5                VARCHAR(2000) COMMENT '扩展字段5'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='同步表配置';

-- ----------------------------
-- Table structure for SYNCH_TABLE_SHIP
-- ----------------------------
DROP TABLE IF EXISTS SYNCH_TABLE_SHIP;
CREATE TABLE SYNCH_TABLE_SHIP (
  TABLE_SHIP_ID CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  TABLE_ID      CHAR(36) NOT NULL COMMENT '同步配置表ID',
  SHIP_ID       CHAR(36) COMMENT '同步ShipID',
  IS_SYNCH      CHAR(1) COMMENT '是否同步',
  COMPANY_ID    CHAR(36) COMMENT '企业ID',
  IS_DEL        CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME        TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间',
  OTHER1        VARCHAR(2000) COMMENT '扩展字段1',
  OTHER2        VARCHAR(2000) COMMENT '扩展字段2',
  OTHER3        VARCHAR(2000) COMMENT '扩展字段3',
  OTHER4        VARCHAR(2000) COMMENT '扩展字段4',
  OTHER5        VARCHAR(2000) COMMENT '扩展字段5'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='同步表关联船舶';
ALTER TABLE SYNCH_TABLE_SHIP ADD CONSTRAINT FK_SYNCH_TABLE_SHIP_TABLE FOREIGN KEY (TABLE_ID) REFERENCES SYNCH_TABLE (TABLE_ID);
ALTER TABLE SYNCH_TABLE_SHIP ADD CONSTRAINT FK_SYNCH_TABLE_SHIP_SHIP FOREIGN KEY (SHIP_ID) REFERENCES SYS_SHIPINFO (SHIP_ID);

-- ----------------------------
-- Table structure for SYNCH_TABLE_FIELD
-- ----------------------------
DROP TABLE IF EXISTS SYNCH_TABLE_FIELD;
CREATE TABLE SYNCH_TABLE_FIELD (
  FIELD_ID              CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  TABLE_ID              CHAR(36) NOT NULL COMMENT '同步配置表ID',
  FIELD_NAME            VARCHAR(1000) NOT NULL COMMENT '字段名称',
  FIELD_DISPLAYNAME     VARCHAR(1000) NOT NULL COMMENT '字段示名称',
  FIELD_TYPE            CHAR(1) NOT NULL COMMENT '字段类型',
  FK_TABLE_NAME         VARCHAR(500) COMMENT '外键表名',
  FK_TABLE_FIELD_NAME   VARCHAR(500) COMMENT '外键表字段名',
  IS_SYNCH_SHIP         CHAR(1) COMMENT '是否同步船舶： 0 不同步；1 同步',
  SHIP_NULL_STATUS      CHAR(1) COMMENT '船端为空同步状态，0 为空不同步；1 为空全船同步',
  IS_CASCADE_SHIP_TABLE CHAR(1) COMMENT '是否开启级联查询SHIP_ID',
  CASCADE_TABLE_NAME    VARCHAR(2000) COMMENT '级联表信息',
  IS_DEL                CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME                TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间',
  OTHER1                VARCHAR(2000) COMMENT '扩展字段1',
  OTHER2                VARCHAR(2000) COMMENT '扩展字段2',
  OTHER3                VARCHAR(2000) COMMENT '扩展字段3',
  OTHER4                VARCHAR(2000) COMMENT '扩展字段4',
  OTHER5                VARCHAR(2000) COMMENT '扩展字段5',
  COMPANY_ID            CHAR(36) COMMENT '企业ID'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='同步表关联船舶';
ALTER TABLE SYNCH_TABLE_FIELD ADD CONSTRAINT FK_SYNCH_TABLE_FIELD_TABLE FOREIGN KEY (TABLE_ID) REFERENCES SYNCH_TABLE (TABLE_ID);

-- workflow tables -----------------------------------------------------------------------------------------------------

-- ----------------------------
-- Table structure for WF_FORM
-- ----------------------------
DROP TABLE IF EXISTS WF_FORM;
CREATE TABLE WF_FORM (
  FORM_ID           VARCHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  FORM_NAME         VARCHAR(100) NOT NULL COMMENT '表单名称',
  WF_BUSINESS_CODE  VARCHAR(100) COMMENT '表单业务代号',
  FORM_TYPE         VARCHAR(100) NOT NULL COMMENT '表单类型',
  USE_STATUS        VARCHAR(10) NOT NULL DEFAULT '0' COMMENT '是否启用，0 否；1 是',
  EDIT_LOCK_STATUS  CHAR(1) COMMENT '表单编辑锁状态，0 未锁定；1 锁定',
  OPERATOR          VARCHAR(36) COMMENT '操作人',
  OPERATEDATE       DATETIME COMMENT '操作时间',
  VERSION_NO        INTEGER(18) COMMENT '表单版本',
  SERIAL_NO_RULE    CHAR(36) COMMENT '表单序号规则',
  ORDER_ID          INTEGER(18) DEFAULT '1' COMMENT '序号',
  FORM_HTML         BLOB COMMENT '表单HTML代码',
  FORM_JS           BLOB COMMENT '表单JS',
  REMARK            VARCHAR(500) COMMENT '备注',
  COMPANY_ID        CHAR(36) COMMENT '企业ID',
  IS_DEL            CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME            TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='工作流表单';
ALTER TABLE WF_FORM ADD CONSTRAINT FK_WF_FORM_USER FOREIGN KEY (OPERATOR) REFERENCES SYS_USER (USER_ID);

-- ----------------------------
-- Table structure for WF_FORMDETAIL
-- ----------------------------
DROP TABLE IF EXISTS WF_FORMDETAIL;
CREATE TABLE WF_FORMDETAIL (
  ID            VARCHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  FORM_ID       VARCHAR(36) NOT NULL COMMENT '表单编号',
  PARAM_ID      VARCHAR(100) NOT NULL COMMENT '参数编号',
  PARAM_NAME    VARCHAR(100) COMMENT '参数名称',
  PARAM_VALUE   VARCHAR(2000) COMMENT '参数值',
  PARAM_TYPE    VARCHAR(50) DEFAULT 'T' COMMENT '参数类型',
  DATATYPE      VARCHAR(10) DEFAULT 'S' COMMENT '数据类型',
  IS_APP_SHOW   CHAR(1) COMMENT '是否移动端显示',
  APP_SHOW_NAME VARCHAR(100) COMMENT '移动端显示名',
  ORDERID       INTEGER(6) COMMENT '序号',
  REMARK        VARCHAR(500) COMMENT '备注',
  COMPANY_ID    CHAR(36) NOT NULL COMMENT '企业编号',
  IS_DEL        CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME        TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='工作流表单明细';
ALTER TABLE WF_FORMDETAIL ADD CONSTRAINT FK_WF_FORMDETAIL_FORM FOREIGN KEY (FORM_ID) REFERENCES WF_FORM (FORM_ID);

-- ----------------------------
-- Table structure for WF_PROJECT
-- ----------------------------
DROP TABLE IF EXISTS WF_PROJECT;
CREATE TABLE WF_PROJECT (
  PROJ_ID                 VARCHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  PROJ_NAME               VARCHAR(100) NOT NULL COMMENT '流程名称',
  PROJ_TYPE               VARCHAR(10) NOT NULL DEFAULT '外部' COMMENT '流程类型',
  ISPUBLISHED             VARCHAR(10) NOT NULL DEFAULT '0' COMMENT '是否发布',
  WF_BUSINESS_CODE        VARCHAR(50) COMMENT '业务流程代号，MATERIALAPPLY，SPAREAPPLY',
  WF_FOLDER_CODE          VARCHAR(50) COMMENT '流程上传附件存储位置',
  TIGGER_URL              VARCHAR(500) COMMENT '触发流程地址',
  TIGGER_URL_METHOD       VARCHAR(10) COMMENT '触发流程方法',
  BUSINESS_WF_TYPE        VARCHAR(20) COMMENT '业务类型，SINGLE 单例；INTEGRATION 集成',
  BUSINESS_WF_UPDATE_TYPE VARCHAR(20) COMMENT '业务数据更新方式，REALTIME 实时，FINISHTIME 结案更新',
  TIME_LIMIT              INTEGER(18) DEFAULT '0' COMMENT '时限',
  VERSION_NO              VARCHAR(36) COMMENT '版本号',
  BUSS_PROJ_ID            VARCHAR(36) COMMENT '业务流程编号',
  PANEL_WIDTH             INTEGER(18) COMMENT '流程图画板宽度',
  PANEL_HEIGHT            INTEGER(18) COMMENT '流程图画板高度',
  OPERATOR                VARCHAR(36) COMMENT '操作人',
  OPERATEDATE             DATETIME COMMENT '操作时间',
  REMARK                  VARCHAR(500) COMMENT '备注',
  IS_DEL                  CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME                  TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间',
  COMPANY_ID              VARCHAR(36) COMMENT '企业ID'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='工作流程定义';

-- ----------------------------
-- Table structure for WF_NODE
-- ----------------------------
DROP TABLE IF EXISTS WF_NODE;
CREATE TABLE WF_NODE (
  NODE_ID               CHAR(36) NOT NULL PRIMARY KEY COMMENT '节点编号',
  PROJ_ID               VARCHAR(36) NOT NULL COMMENT '流程编号',
  NODE_NAME             VARCHAR(100) NOT NULL COMMENT '节点名称',
  FORM_ID               VARCHAR(100) COMMENT '流程表单号',
  APPROVE_NODE_POSITION CHAR(1) COMMENT '审批对象类型：1：岸上审批，关联人船分配，2：船上审批，关联在船人员，3：船岸通用（一般用于发起）',
  NODE_POST_DEAL_STATUS CHAR(1) COMMENT '岗位处理模式：1：标准审批，2：同岗代处理',
  NODE_TYPE             VARCHAR(100) DEFAULT '0' COMMENT '节点类型',
  X                     INTEGER(18) COMMENT '横坐标',
  Y                     INTEGER(18) COMMENT '纵坐标',
  TIME_LIMIT            INTEGER(18) DEFAULT '0' COMMENT '节点时限',
  COUNTER_SIGN_NUM      INTEGER(18) DEFAULT '0' COMMENT '会签设置',
  DISAGREE_DEAL_STATUS  CHAR(1) COMMENT '退回处理状态，1：退回处理人，2：退回岗位',
  IS_AUTO_COMMIT        VARCHAR(1) COMMENT '是否自动提交',
  ATTACHMENT_STATUS     CHAR(1) COMMENT '流程附件处理状态',
  AUTO_PROCESS          VARCHAR(1) DEFAULT '0' COMMENT '自动处理标志',
  IS_SHOW_APPLICANT     VARCHAR(1) COMMENT '是否显示申请人',
  NODE_CTRL             VARCHAR(100) COMMENT '节点CTRL',
  NODE_CTRL_METHOD      VARCHAR(10) COMMENT 'CTRL的METHOD',
  REMARK                VARCHAR(500) COMMENT '备注',
  COMPANY_ID            CHAR(36) COMMENT '企业ID',
  IS_DEL                CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME                TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='工作流程节点';

-- ----------------------------
-- Table structure for WF_NODEROUTE
-- ----------------------------
DROP TABLE IF EXISTS WF_NODEROUTE;
CREATE TABLE WF_NODEROUTE (
  NODEROUTE_ID          VARCHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  PROJ_ID               VARCHAR(36) NOT NULL COMMENT '流程编号',
  NODE_ID               VARCHAR(36) NOT NULL COMMENT '节点编号',
  NEXT_NODE_ID          VARCHAR(36) NOT NULL COMMENT '下一个节点编号',
  ROUTE_NAME            VARCHAR(200) COMMENT '连接线名称，用于显示流程流转分支说明',
  PATHSQL               VARCHAR(500) COMMENT '路径条件',
  PATHSQLCHN            VARCHAR(500) COMMENT '路径条件中文',
  NODE_SOURCE_POSITION  VARCHAR(20) COMMENT '源节点位置',
  NODE_TARGET_POSITION  VARCHAR(20) COMMENT '目标节点位置',
  OPERATOR              VARCHAR(36) COMMENT '操作人',
  OPERATEDATE           DATETIME COMMENT '操作时间',
  COMPANY_ID            CHAR(36) COMMENT '企业ID',
  IS_DEL                CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME                TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='流程节点连线';

-- ----------------------------
-- Table structure for WF_NODEFORM
-- ----------------------------
DROP TABLE IF EXISTS WF_NODEFORM;
CREATE TABLE WF_NODEFORM (
  ID                VARCHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  PROJ_ID           VARCHAR(36) NOT NULL COMMENT '流程编号',
  NODE_ID           VARCHAR(36) NOT NULL COMMENT '节点编号',
  FORM_ID           VARCHAR(36) NOT NULL COMMENT '表单编号',
  PARAM_ID          VARCHAR(100) NOT NULL COMMENT '参数编号',
  PARAM_NODE_TYPE   CHAR(1) COMMENT '节点参数类型，0 通用参数；1 节点参数，该值跟着节点进行变化',
  PARAM_NODE_VALUE  VARCHAR(2000) COMMENT '节点参数值',
  IS_VISIBLE        VARCHAR(20) DEFAULT '1' COMMENT '是否可见，0 否；1 是',
  IS_EDIT           VARCHAR(20) DEFAULT '0' COMMENT '是否可编辑，0 否；1 是',
  NOT_NULL          VARCHAR(20) DEFAULT 'false' COMMENT '是否非空',
  COMPANY_ID        CHAR(36) COMMENT '企业ID',
  IS_DEL            CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME            TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='流程节点关联表单';

-- ----------------------------
-- Table structure for WF_NODEAPPROVE
-- ----------------------------
DROP TABLE IF EXISTS WF_NODEAPPROVE;
CREATE TABLE WF_NODEAPPROVE (
  ID                VARCHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  NODE_ID           VARCHAR(36) NOT NULL COMMENT '节点编号',
  APPROVE_OBJ_TYPE  CHAR(1) NOT NULL COMMENT '处理对象类型，1 岗位；2 人员；3 表单，不能为空！',
  APPROVE_OBJ_ID    VARCHAR(36) COMMENT '处理对象代号',
  ORDERID           INTEGER(6) COMMENT '序号',
  COMPANY_ID        CHAR(36) COMMENT '企业ID',
  IS_DEL            CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME            TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='节点审批规则';

-- ----------------------------
-- Table structure for WF_INSTANCE_MAIN
-- ----------------------------
DROP TABLE IF EXISTS WF_INSTANCE_MAIN;
CREATE TABLE WF_INSTANCE_MAIN (
  ID              VARCHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  PROJ_ID         VARCHAR(36) NOT NULL COMMENT '流程编号',
  INST_ID         VARCHAR(36) COMMENT '流程实例ID',
  REQUEST_URL     VARCHAR(500) COMMENT '请求地址',
  REQUEST_METHOD  VARCHAR(10) COMMENT '请求方式',
  WF_BUSINESS_ID  VARCHAR(36) COMMENT '申请业务主键ID',
  SUMMARY         VARCHAR(4000) COMMENT '摘要',
  URGENCY         CHAR(1) COMMENT '紧急程度，0 常规；1 紧急；2 特急',
  SHIP_ID         VARCHAR(36) COMMENT '申请人对应船舶ID，若非船人员发起，则该值为NULL',
  OPERATOR        VARCHAR(36) COMMENT '操作人',
  OPERATEDATE     DATETIME COMMENT '操作时间',
  COMPANY_ID      CHAR(36) NOT NULL COMMENT '企业ID',
  IS_DEL          CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME          TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='工作流实例主表';

-- ----------------------------
-- Table structure for WF_INSTANCE
-- ----------------------------
DROP TABLE IF EXISTS WF_INSTANCE;
CREATE TABLE WF_INSTANCE (
  ID                VARCHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  PROJ_ID           VARCHAR(36) NOT NULL COMMENT '流程编号',
  INST_ID           VARCHAR(36) NOT NULL COMMENT '实例编号',
  INST_STATUS       VARCHAR(3) NOT NULL DEFAULT '0' COMMENT '流程状态，0 草稿（未提交）；1 审批中；2 终止（管理员）；3 撤销（发起人）；4 不同意（审批人）；9 审批完成（正常审批）',
  PREV_NODE_ID      VARCHAR(36) COMMENT '上一个办理节点',
  PREV_AUTH_TYPE    CHAR(1) COMMENT '0 人员；1 岗位',
  PREV_AUTH_ID      VARCHAR(2000) COMMENT '上一个办理人ID',
  CURRENT_NODE_ID   VARCHAR(36) COMMENT '当前待办节点（完成后为NULL）',
  REQUESTER_USER_ID VARCHAR(36) COMMENT '申请人ID',
  REQUESTER_POST_ID VARCHAR(36) COMMENT '岗位ID',
  CREATED_TIME      DATETIME COMMENT '流程创建时间',
  COMPLETED_TIME    DATETIME COMMENT '流程审批完成时间',
  REMARK            VARCHAR(500) COMMENT '备注',
  SHIP_ID           VARCHAR(36) COMMENT '申请人对应船舶ID，若非船人员发起，则该值为NULL',
  COMPANY_ID        CHAR(36) NOT NULL COMMENT '企业ID',
  IS_DEL            CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME            TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='工作流实例';

-- ----------------------------
-- Table structure for WF_PARAMETER
-- ----------------------------
DROP TABLE IF EXISTS WF_PARAMETER;
CREATE TABLE WF_PARAMETER (
  ID          VARCHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  PROJ_ID     VARCHAR(36) NOT NULL COMMENT '流程编号',
  INST_ID     VARCHAR(36) NOT NULL COMMENT '实例编号',
  PARAM_ID    VARCHAR(100) NOT NULL COMMENT '参数编号',
  PARAM_VALUE LONGTEXT COMMENT '参数值',
  PARAM_TYPE  VARCHAR(20) COMMENT '参数类型',
  DATATYPE    VARCHAR(20) DEFAULT 'S' COMMENT '数据类型',
  OPERATOR    VARCHAR(36) COMMENT '操作人',
  OPERATEDATE DATETIME COMMENT '操作时间',
  ORDERID     INTEGER(6) COMMENT '序号',
  SHIP_ID     CHAR(36) COMMENT '船舶ID',
  COMPANY_ID  CHAR(36) NOT NULL COMMENT '企业ID',
  IS_DEL      CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME      TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='流程实例参数';

-- ----------------------------
-- Table structure for WF_NODEDATA
-- ----------------------------
DROP TABLE IF EXISTS WF_NODEDATA;
CREATE TABLE WF_NODEDATA (
  ID          VARCHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  PROJ_ID     VARCHAR(36) NOT NULL COMMENT '流程编号',
  INST_ID     VARCHAR(36) NOT NULL COMMENT '实例编号',
  NODE_ID     VARCHAR(36) NOT NULL COMMENT '节点编号',
  WORK_ID     VARCHAR(36) COMMENT '流水号',
  PARAM_ID    VARCHAR(100) NOT NULL COMMENT '参数编号',
  PARAM_VALUE LONGTEXT COMMENT '参数值',
  OPERATOR    VARCHAR(36) COMMENT '操作人',
  OPERATEDATE DATETIME COMMENT '操作时间',
  SHIP_ID     CHAR(36) COMMENT '船舶ID',
  COMPANY_ID  CHAR(36) COMMENT '企业ID',
  IS_DEL      CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME      TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='流程实例节点数据';

-- ----------------------------
-- Table structure for WF_INSTATTACH
-- ----------------------------
DROP TABLE IF EXISTS WF_INSTATTACH;
CREATE TABLE WF_INSTATTACH (
  ID              VARCHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  PROJ_ID         VARCHAR(36) NOT NULL COMMENT '流程编号',
  INST_ID         VARCHAR(36) NOT NULL COMMENT '实例编号',
  OPERATOR        VARCHAR(36) COMMENT '操作人',
  OPERATEDATE     DATETIME COMMENT '操作时间',
  FOLDER_FILE_ID  VARCHAR(36) NOT NULL COMMENT '附件编号',
  FILESIZE        VARCHAR(20) COMMENT '文件大小',
  FILENAME        VARCHAR(100) COMMENT '文件名称',
  ORDERID         INTEGER(18) COMMENT '序号',
  SHIP_ID         CHAR(36) COMMENT '船舶ID',
  COMPANY_ID      CHAR(36) NOT NULL COMMENT '企业ID',
  IS_DEL          CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME          TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=UTF8 COMMENT='流程附件';

-- ----------------------------
-- Table structure for WF_CONSIGN
-- ----------------------------
DROP TABLE IF EXISTS WF_CONSIGN;
CREATE TABLE WF_CONSIGN (
  ID              VARCHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  PROJ_ID         VARCHAR(36) COMMENT '流程名称',
  CONSIGN_ID      VARCHAR(36) NOT NULL COMMENT '代理人',
  CONSIGN_STATUS  CHAR(1) NOT NULL DEFAULT '1' COMMENT '委托状态',
  REMARK          VARCHAR(500) COMMENT '备注',
  OPERATOR        VARCHAR(36) COMMENT '操作人',
  OPERATEDATE     DATETIME COMMENT '操作时间',
  STARTDATE       DATETIME COMMENT '代理起始时间',
  ENDDATE         DATETIME COMMENT '代理结束时间',
  COMPANY_ID      CHAR(36) COMMENT '企业ID',
  U_TIME          TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间',
  IS_DEL          CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='流程代办';

-- ----------------------------
-- Table structure for WF_WORKITEM
-- ----------------------------
DROP TABLE IF EXISTS WF_WORKITEM;
CREATE TABLE WF_WORKITEM (
  ID                    VARCHAR(36) NOT NULL COMMENT '主键',
  PROJ_ID               VARCHAR(36) NOT NULL COMMENT '流程编号',
  INST_ID               VARCHAR(36) NOT NULL COMMENT '实例编号',
  NODE_ID               VARCHAR(36) NOT NULL COMMENT '节点编号',
  NODE_NAME             VARCHAR(500) COMMENT '节点名称',
  PREV_NODE_ID          CHAR(36) COMMENT '处理项上一个节点信息',
  WORK_ITEM_TYPE        CHAR(1) COMMENT '工作项类型',
  WORK_ITEM_ID          VARCHAR(36) COMMENT '处理项ID',
  BATCH_ITEM_ID         VARCHAR(36) COMMENT '批次工作项代号',
  NODE_POST_DEAL_STATUS CHAR(1) COMMENT '岗位处理模式，1 标准审批；2 同岗代处理',
  APPROVE_OBJ_ID        VARCHAR(36) COMMENT '审批对象代号',
  APPROVE_OBJ_POST_ID   CHAR(36) COMMENT '审批对象对应岗位信息',
  APPROVE_STATUS        CHAR(1) COMMENT '当前工作状态，0 未开始；1 进行中；2 已完成；3 退回；4 管理员跳转；5 管理员结案',
  CREATED_TIME          DATETIME NOT NULL COMMENT '创建时间',
  COMPLETED_TIME        DATETIME  COMMENT '完成时间',
  VIEW_TIMES            INTEGER(6) COMMENT '查阅次数',
  SHIP_ID               CHAR(36) COMMENT '船舶ID',
  COMPANY_ID            CHAR(36) COMMENT '企业ID',
  IS_DEL                CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME                TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间',
  PRIMARY KEY (ID, CREATED_TIME)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='流程处理项';

-- ----------------------------
-- Table structure for WF_HISTORY
-- ----------------------------
DROP TABLE IF EXISTS WF_HISTORY;
CREATE TABLE WF_HISTORY (
  ID                  VARCHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  PROJ_ID             VARCHAR(36) NOT NULL COMMENT '流程编号',
  INST_ID             VARCHAR(36) NOT NULL COMMENT '实例编号',
  NODE_ID             VARCHAR(36) NOT NULL COMMENT '节点编号',
  NODE_NAME           VARCHAR(100) COMMENT '节点名称',
  WORK_ITEM_ID        VARCHAR(36) COMMENT '处理项ID',
  APPROVE_USER_ID     VARCHAR(36) COMMENT '审批人',
  APPROVE_OBJ_POST_ID VARCHAR(36) COMMENT '处理人岗位信息',
  APPROVE_STATUS      VARCHAR(20) NOT NULL DEFAULT '0' COMMENT '审批意见，0 申请；1 同意；2 不同意；3 终止',
  APPROVE_OPINION     VARCHAR(2000) COMMENT '审批意见',
  CONSIGN_ID          VARCHAR(36) COMMENT '代理人完成时，添加该信息，本人完成该值为NULL',
  REMARK              VARCHAR(500) COMMENT '备注',
  SHIP_ID             CHAR(36) COMMENT '船舶ID',
  COMPANY_ID          CHAR(36) NOT NULL COMMENT '企业ID',
  U_TIME              TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间',
  IS_DEL              CHAR(1) COMMENT '是否删除，0 否；1 是'
) ENGINE=INNODB DEFAULT CHARSET=UTF8 COMMENT='流程历史记录';

-- ----------------------------
-- Table structure for WF_APPROVE_OPINION
-- ----------------------------
DROP TABLE IF EXISTS WF_APPROVE_OPINION;
CREATE TABLE WF_APPROVE_OPINION (
  APPROVE_OPINION_ID  CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  OPINION_TYPE        CHAR(1) COMMENT '意见类型',
  ORDER_ID            INTEGER(11) COMMENT '排序',
  OPINION_TEXT        VARCHAR(500) COMMENT '审批意见',
  USER_ID             CHAR(36) COMMENT '所属人',
  COMPANY_ID          CHAR(36) COMMENT '企业ID',
  IS_DEL              CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME              TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='流程审批意见';

-- ----------------------------
-- TABLE STRUCTURE FOR WF_REPORT_CONF
-- ----------------------------
DROP TABLE IF EXISTS WF_REPORT_CONF;
CREATE TABLE WF_REPORT_CONF (
  REPORT_CONF_ID    CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  PROJ_ID           CHAR(36) COMMENT '流程定义主键',
  WF_BUSINESS_CODE  VARCHAR(100) COMMENT '业务代号',
  WF_VERSION_NO     VARCHAR(10) COMMENT '流程版本',
  REMARK            VARCHAR(2000) COMMENT '备注',
  COMPANY_ID        CHAR(36) COMMENT '企业ID',
  IS_DEL            CHAR(1) NOT NULL COMMENT '是否删除',
  U_TIME            TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=INNODB DEFAULT CHARSET=UTF8 COMMENT='工作流报表配置';

-- ----------------------------
-- Table structure for WF_REPORT_CONF_DETAIL
-- ----------------------------
DROP TABLE IF EXISTS WF_REPORT_CONF_DETAIL;
CREATE TABLE WF_REPORT_CONF_DETAIL (
  REPORT_CONF_DETAIL_ID  CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  REPORT_CONF_ID         CHAR(36) COMMENT '配置主表ID',
  WF_ACT_CODE            VARCHAR(100) COMMENT '流程节点ACT_CODE',
  WF_NODE_NAME           VARCHAR(100) COMMENT '发送对象ID',
  REPORT_NODENAME_ID     VARCHAR(100) COMMENT '转换节点名称ID',
  REPORT_PERSONNAME_ID   VARCHAR(100) COMMENT '转换节点处理人名称',
  REPORT_STATUS_ID       VARCHAR(100) COMMENT '转换节点处理状态ID',
  REPORT_APPROVE_ID      VARCHAR(100) COMMENT '转换节点审批意见ID',
  REPORT_APPROVE_DATE_ID VARCHAR(100) COMMENT '转换节点审批时间ID',
  REMARK                 VARCHAR(2000) COMMENT '备注',
  COMPANY_ID             CHAR(36) COMMENT '企业ID',
  IS_DEL                 CHAR(1) NOT NULL COMMENT '是否删除',
  U_TIME                 TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=INNODB DEFAULT CHARSET=UTF8 COMMENT='工作流报表配置明细';

-- kekao tables --------------------------------------------------------------------------------------------------------

-- ----------------------------
-- Table structure for kk_team
-- ----------------------------
DROP TABLE IF EXISTS KK_TEAM;
CREATE TABLE KK_TEAM (
  TEAMKEY     CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  TEAMID      VARCHAR(200) NOT NULL COMMENT '航次编号',
  TEAMNAME    VARCHAR(200) NOT NULL COMMENT '航次名称',
  SHIPNAME    VARCHAR(200) COMMENT '科考船名称',
  STARTDATE   DATETIME COMMENT '开始日期',
  ENDDATE     DATETIME COMMENT '结束日期',
  COMPANY_ID  CHAR(36) COMMENT '企业ID',
  IS_DEL      CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME      TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='科考航次';

-- ----------------------------
-- Table structure for KK_ACTUALPOSITION
-- ----------------------------
DROP TABLE IF EXISTS KK_ACTUALPOSITION;
CREATE TABLE KK_ACTUALPOSITION (
  APKEY       CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  TEAMKEY     CHAR(36) NOT NULL COMMENT '航次ID',
  POSITIONID  VARCHAR(200) NOT NULL COMMENT '站位编号',
  WORKDATE    DATETIME COMMENT '日期时间',
  LONGITUDE   VARCHAR(50) COMMENT '经度',
  LATITUDE    VARCHAR(50) COMMENT '纬度',
  WATERDEPTH  VARCHAR(50) COMMENT '水深',
  COMPANY_ID  CHAR(36) COMMENT '企业ID',
  IS_DEL      CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME      TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='站位';
ALTER TABLE KK_ACTUALPOSITION ADD CONSTRAINT FK_KK_ACTUALPOSITION_TEAM FOREIGN KEY (TEAMKEY) REFERENCES KK_TEAM (TEAMKEY);

-- ----------------------------
-- Table structure for KK_PROJECT
-- ----------------------------
DROP TABLE IF EXISTS KK_PROJECT;
CREATE TABLE KK_PROJECT (
  PROJECTKEY    CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  TEAMKEY       CHAR(36) NOT NULL COMMENT '航次ID',
  WORKSPACEKEY  CHAR(36) COMMENT '作业区ID',
  PROJECTID     VARCHAR(50) NOT NULL COMMENT '项目编号',
  PROJECTNAME   VARCHAR(50) NOT NULL COMMENT '项目名称',
  DESCRIPTION   VARCHAR(2000) COMMENT '描述',
  DISCIPLINEKEY CHAR(36) COMMENT '学科ID',
  COMPANY_ID    CHAR(36) COMMENT '企业ID',
  IS_DEL        CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME        TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='科考项目';
ALTER TABLE KK_PROJECT ADD CONSTRAINT FK_KK_PROJECT_TEAM FOREIGN KEY (TEAMKEY) REFERENCES KK_TEAM (TEAMKEY);

-- ----------------------------
-- Table structure for KK_STUDYPLAN
-- ----------------------------
DROP TABLE IF EXISTS KK_STUDYPLAN;
CREATE TABLE KK_STUDYPLAN (
  PLANKEY         CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  TEAMKEY         CHAR(36) NOT NULL COMMENT '航次ID',
  PROJECTKEY      CHAR(36) COMMENT '项目ID',
  PLANNAME        VARCHAR(200) COMMENT '计划名称',
  STIME           DATETIME COMMENT '开始日期',
  ETIME           DATETIME COMMENT '结束日期',
  SUBMISSION      VARCHAR(200) COMMENT '提交人',
  SUBMISSIONTIME  DATETIME COMMENT '提交时间',
  PLANFILE        VARCHAR(4000) COMMENT '附件',
  COMPANY_ID      CHAR(36) COMMENT '企业ID',
  IS_DEL          CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME          TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='考察计划';
ALTER TABLE KK_STUDYPLAN ADD CONSTRAINT FK_KK_STUDYPLAN_TEAM FOREIGN KEY (TEAMKEY) REFERENCES KK_TEAM (TEAMKEY);
ALTER TABLE KK_STUDYPLAN ADD CONSTRAINT FK_KK_STUDYPLAN_PROJECT FOREIGN KEY (PROJECTKEY) REFERENCES KK_PROJECT (PROJECTKEY);

-- ----------------------------
-- Table structure for KK_STUDYREPORT
-- ----------------------------
DROP TABLE IF EXISTS KK_STUDYREPORT;
CREATE TABLE KK_STUDYREPORT (
  REPORTKEY       CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  TEAMKEY         CHAR(36) NOT NULL COMMENT '航次ID',
  PROJECTKEY      CHAR(36) COMMENT '项目ID',
  REPORTNAME      VARCHAR(200) COMMENT '报告名称',
  STIME           DATETIME COMMENT '开始日期',
  ETIME           DATETIME COMMENT '结束日期',
  SUBMISSION      VARCHAR(200) COMMENT '提交人',
  SUBMISSIONTIME  DATETIME COMMENT '提交时间',
  PLANFILE        VARCHAR(200) COMMENT '附件',
  COMPANY_ID      CHAR(36) COMMENT '企业ID',
  IS_DEL          CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME          TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='考察报告';
ALTER TABLE KK_STUDYREPORT ADD CONSTRAINT FK_KK_STUDYREPORT_TEAM FOREIGN KEY (TEAMKEY) REFERENCES KK_TEAM (TEAMKEY);
ALTER TABLE KK_STUDYREPORT ADD CONSTRAINT FK_KK_STUDYREPORT_PROJECT FOREIGN KEY (PROJECTKEY) REFERENCES KK_PROJECT (PROJECTKEY);

-- ----------------------------
-- Table structure for KK_WORKPLAN
-- ----------------------------
DROP TABLE IF EXISTS KK_WORKPLAN;
CREATE TABLE KK_WORKPLAN (
  PLANKEY       CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  TEAMKEY       CHAR(36) NOT NULL COMMENT '航次ID',
  APKEY         CHAR(36) COMMENT '站位ID',
  WORKSPACEKEY  CHAR(36) COMMENT '作业区ID',
  WORKORDER     INTEGER(9) COMMENT '次序',
  PROJECTKEY    CHAR(36) COMMENT '项目ID',
  STIME         DATETIME COMMENT '开始日期',
  ETIME         DATETIME COMMENT '结束日期',
  WORKMAN       VARCHAR(200) COMMENT '作业人员',
  WORKCONTEXT   VARCHAR(4000) COMMENT '工作内容',
  MEMO          VARCHAR(2000) COMMENT '备注',
  COMPANY_ID    CHAR(36) COMMENT '企业ID',
  IS_DEL        CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME        TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='科考项目计划';
ALTER TABLE KK_WORKPLAN ADD CONSTRAINT FK_KK_WORKPLAN_TEAM FOREIGN KEY (TEAMKEY) REFERENCES KK_TEAM (TEAMKEY);
ALTER TABLE KK_WORKPLAN ADD CONSTRAINT FK_KK_WORKPLAN_PROJECT FOREIGN KEY (PROJECTKEY) REFERENCES KK_PROJECT (PROJECTKEY);
ALTER TABLE KK_WORKPLAN ADD CONSTRAINT FK_KK_WORKPLAN_ACTUALPOSITION FOREIGN KEY (APKEY) REFERENCES KK_ACTUALPOSITION (APKEY);

-- ----------------------------
-- Table structure for KK_WORKLOG
-- ----------------------------
DROP TABLE IF EXISTS KK_WORKLOG;
CREATE TABLE KK_WORKLOG (
  LOGKEY        CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  TEAMKEY       CHAR(36) NOT NULL COMMENT '航次ID',
  APKEY         CHAR(36) COMMENT '站位ID',
  WORKSPACEKEY  CHAR(36) COMMENT '作业区ID',
  WORKORDER     INTEGER(9) COMMENT '次序',
  PROJECTKEY    CHAR(36) COMMENT '项目ID',
  STIME         DATE COMMENT '开始日期',
  ETIME         DATE COMMENT '结束日期',
  WORKMAN       VARCHAR(200) COMMENT '作业人员',
  DESCRIPTION   VARCHAR(4000) COMMENT '描述',
  COMPANY_ID    CHAR(36) COMMENT '企业ID',
  IS_DEL        CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME        TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='科考作业日志';
ALTER TABLE KK_WORKLOG ADD CONSTRAINT FK_KK_WORKLOG_TEAM FOREIGN KEY (TEAMKEY) REFERENCES KK_TEAM (TEAMKEY);
ALTER TABLE KK_WORKLOG ADD CONSTRAINT FK_KK_WORKLOG_PROJECT FOREIGN KEY (PROJECTKEY) REFERENCES KK_PROJECT (PROJECTKEY);
ALTER TABLE KK_WORKLOG ADD CONSTRAINT FK_KK_WORKLOG_ACTUALPOSITION FOREIGN KEY (APKEY) REFERENCES KK_ACTUALPOSITION (APKEY);

-- mail tables ---------------------------------------------------------------------------------------------------------

-- ----------------------------
-- Table structure for MAIL_CONFIG
-- ----------------------------
DROP TABLE IF EXISTS MAIL_CONFIG;
CREATE TABLE MAIL_CONFIG (
  MAIL_CONFIG_ID      CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  MAIL_CONFIG_NAME    VARCHAR(50) COMMENT '邮件配置名',
  SMTP_ADDRESS        VARCHAR(200) COMMENT 'SMTP服务器地址',
  SMTP_PORT           INTEGER(8) COMMENT 'SMTP端口',
  SMTP_IS_SSL         CHAR(1) COMMENT 'SMTP开启SSL协议',
  POP3_ADDRESS        VARCHAR(200) COMMENT 'POP3服务器地址',
  POP3_PORT           INTEGER(8) COMMENT 'POP3端口',
  POP3_IS_SSL         CHAR(1) COMMENT 'POP3开启SSL协议',
  POP3_ISDOMIN        CHAR(1) COMMENT 'POP3开启域认证',
  POP3_DOMIN_ADDRESS  VARCHAR(30) COMMENT 'POP3域服务器地址',
  IS_USE_STATUS       CHAR(1) COMMENT '是否有效，0 失效；1：有效',
  COMPANY_ID          CHAR(36) COMMENT '企业ID',
  IS_DEL              CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME              TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='邮件配置表';

-- ----------------------------
-- Table structure for MAIL_CONFIG_PERSONAL
-- ----------------------------
DROP TABLE IF EXISTS MAIL_CONFIG_PERSONAL;
CREATE TABLE MAIL_CONFIG_PERSONAL (
  MAIL_CONFIG_PERSONAL_ID CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  IS_MAIL                 CHAR(1) COMMENT '是否启用邮件（空闲）',
  IS_SIGNATURE            CHAR(1) COMMENT '是否启用签名',
  SIGNATURE_TEXT          VARCHAR(1000) COMMENT '签名内容',
  OWNER_USER_ID           CHAR(36) COMMENT '所属人ID',
  USE_SERVER_MAIL_CONFIG  CHAR(1) COMMENT '是否启用系统邮件配置，0 不启用；1：启用',
  MAIL_CONFIG_ID          CHAR(36) COMMENT '系统邮件配置ID',
  PERSONAL_MAIL_ADDRESS   VARCHAR(1000) COMMENT '个人邮箱地址',
  PERSONAL_MAIL_PASSWORD  VARCHAR(1000) COMMENT '个人邮箱密码',
  SMTP_ADDRESS            VARCHAR(200) COMMENT 'SMTP服务器地址',
  SMTP_PORT               INTEGER(8) NOT NULL COMMENT 'SMTP端口',
  SMTP_IS_SSL             CHAR(1) COMMENT 'SMTP开启SSL协议',
  POP3_ADDRESS            VARCHAR(200) COMMENT 'POP3服务器地址',
  POP3_PORT               INTEGER(8) COMMENT 'POP3端口',
  POP3_IS_SSL             CHAR(1) COMMENT 'POP3开启SSL协议',
  POP3_ISDOMIN            CHAR(1) COMMENT 'POP3开启域认证',
  POP3_DOMIN_ADDRESS      VARCHAR(30) COMMENT 'POP3域服务器地址',
  IS_USE_STATUS           CHAR(1) COMMENT '是否有效，0 失效；1：有效',
  COMPANY_ID              CHAR(36) COMMENT '企业ID',
  IS_DEL                  CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME                  TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='邮件个人配置表';
ALTER TABLE MAIL_CONFIG_PERSONAL ADD CONSTRAINT FK_MAIL_CONFIG_PERSONAL_MAIL_CONFIG FOREIGN KEY (MAIL_CONFIG_ID) REFERENCES MAIL_CONFIG (MAIL_CONFIG_ID);
ALTER TABLE MAIL_CONFIG_PERSONAL ADD CONSTRAINT FK_MAIL_CONFIG_PERSONAL_USER FOREIGN KEY (OWNER_USER_ID) REFERENCES SYS_USER (USER_ID);

-- ----------------------------
-- Table structure for MAIL_CONTENT
-- ----------------------------
DROP TABLE IF EXISTS MAIL_CONTENT;
CREATE TABLE MAIL_CONTENT (
  MAIL_BODY_ID        CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  SUBJECT             VARCHAR(50) COMMENT '邮件主题',
  MAIL_BODY           TEXT COMMENT '邮件正文',
  MAIL_SIZE           DECIMAL(8,2) COMMENT '邮件大小',
  MAIL_FROM           VARCHAR(50) COMMENT '发送人',
  SEND_STATUS         CHAR(1) COMMENT '发送状态，0 草稿；1 已发送',
  IS_STATUS           CHAR(1) COMMENT '是否html格式，0 纯文本；1 html',
  MAIL_TYPE           CHAR(1) COMMENT '邮件类型，1 草稿；2 发件箱；3 收件箱',
  CREATED_TIME        DATETIME COMMENT '发送时间',
  RECEIVE_CC_ADDRESS  VARCHAR(250) COMMENT '抄送人',
  RECEIVE_TO_ADDRESS  VARCHAR(250) COMMENT '收件人',
  COMPANY_ID          CHAR(36) COMMENT '企业ID',
  IS_DEL              CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME              TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='邮件内容表';

-- ----------------------------
-- Table structure for MAIL_ATTACHMENT
-- ----------------------------
DROP TABLE IF EXISTS MAIL_ATTACHMENT;
CREATE TABLE MAIL_ATTACHMENT (
  MAIL_ATTACHMENT_ID  CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  MAIL_BODY_ID        CHAR(36) COMMENT '邮件正文ID',
  FOLDER_FILE_ID      CHAR(36) COMMENT '文件关联ID',
  ATTACHMENT_NAME     VARCHAR(200) COMMENT '附件名称',
  ATTACHMENT_SIZE     DECIMAL(8,2) COMMENT '附件大小',
  CREATED_TIME        DATETIME COMMENT '附件上传时间',
  ORDER_ID            INTEGER(9) COMMENT '排序号',
  COMPANY_ID          CHAR(36) COMMENT '企业ID',
  IS_DEL              CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME              TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='邮件附件表';
ALTER TABLE MAIL_ATTACHMENT ADD CONSTRAINT FK_MAIL_ATTACHMENT_CONTENT FOREIGN KEY (MAIL_BODY_ID) REFERENCES MAIL_CONTENT (MAIL_BODY_ID);
ALTER TABLE MAIL_ATTACHMENT ADD CONSTRAINT FK_MAIL_ATTACHMENT_FOLDER FOREIGN KEY (FOLDER_FILE_ID) REFERENCES SYS_FOLDER_FILE (SYS_FOLDER_FILE_ID);

-- ----------------------------
-- Table structure for MAIL_FREQUENT_CONTACTS
-- ----------------------------
DROP TABLE IF EXISTS MAIL_FREQUENT_CONTACTS;
CREATE TABLE MAIL_FREQUENT_CONTACTS (
  MAIL_FREQUENT_CONTACTS_ID CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  MAIL_ADDRESS              CHAR(36) COMMENT ' 联系人地址',
  MAIL_NAME                 VARCHAR(50) COMMENT '联系人名称',
  CONTACTS_SOURCE           CHAR(1) COMMENT '联系人来源，1 关联用户；2 个人维护',
  USER_ID                   VARCHAR(50) COMMENT '关联用户时，可连接某个用户信息',
  OWNER_USER_ID             VARCHAR(50) COMMENT '所属人用户ID',
  ORDER_ID                  VARCHAR(20) COMMENT '排序',
  COMPANY_ID                CHAR(36) COMMENT '企业ID',
  IS_DEL                    CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME                    TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='常用联系人表';
ALTER TABLE MAIL_FREQUENT_CONTACTS ADD CONSTRAINT FK_MAIL_FREQUENT_CONTACTS_USER FOREIGN KEY (USER_ID) REFERENCES SYS_USER (USER_ID);

-- ----------------------------
-- Table structure for MAIL_DEAL_DETAIL
-- ----------------------------
DROP TABLE IF EXISTS MAIL_DEAL_DETAIL;
CREATE TABLE MAIL_DEAL_DETAIL (
  MAIL_DEAL_DETAIL_ID CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  MAIL_BODY_ID        CHAR(36) COMMENT '邮件正文ID',
  RECEIVE_ADDRESS     VARCHAR(50) COMMENT '接收人',
  FREQUENT_ID         CHAR(36) COMMENT '常用联系人，为空时不关联常用联系人',
  MAIL_TYPE           CHAR(1) COMMENT '邮件类型，1 主送；2 抄送；3 暗送',
  IS_IMPORTANCE       CHAR(1) COMMENT '标记重要，0 不重要；1 重要',
  IS_READ             CHAR(1) COMMENT '是否已读，0 未读；1 已读',
  COMPANY_ID          CHAR(36) COMMENT '企业ID',
  IS_DEL              CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME              TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='收件处理明细表';
ALTER TABLE MAIL_DEAL_DETAIL ADD CONSTRAINT FK_MAIL_DEAL_DETAIL_CONTENT FOREIGN KEY (MAIL_BODY_ID) REFERENCES MAIL_CONTENT (MAIL_BODY_ID);
ALTER TABLE MAIL_DEAL_DETAIL ADD CONSTRAINT FK_MAIL_DEAL_DETAIL_CONTACTS FOREIGN KEY (FREQUENT_ID) REFERENCES MAIL_FREQUENT_CONTACTS (MAIL_FREQUENT_CONTACTS_ID);

-- chat tables ---------------------------------------------------------------------------------------------------------

-- ----------------------------
-- Table structure for CHAT_FRIEND
-- ----------------------------
DROP TABLE IF EXISTS CHAT_FRIEND;
CREATE TABLE CHAT_FRIEND (
   FRIEND_ID          CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
   FRIEND_USER_ID     CHAR(36) COMMENT '好友ID',
   PERSONAL_USER_ID   CHAR(36) COMMENT '自己ID',
   FRIEND_REMARK_NAME VARCHAR(200) COMMENT '好友备注名称',
   FRIEND_TYPE_ID     CHAR(36) COMMENT '好友类型ID',
   FRIEND_GROUP_ID    CHAR(36) COMMENT '好友分组ID',
   COMPANY_ID         CHAR(36) COMMENT '企业ID',
   IS_DEL             CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
   U_TIME             TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='聊天室好友表';

-- ----------------------------
-- Table structure for CHAT_FRIEND_GROUP
-- ----------------------------
DROP TABLE IF EXISTS CHAT_FRIEND_GROUP;
CREATE TABLE CHAT_FRIEND_GROUP (
   FRIEND_ID          CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
   FRIEND_USER_ID     CHAR(36) COMMENT '好友ID',
   PERSONAL_USER_ID   CHAR(36) COMMENT '自己ID',
   FRIEND_REMARK_NAME VARCHAR(200) COMMENT '好友备注名称',
   FRIEND_TYPE_ID     CHAR(36) COMMENT '好友类型ID',
   FRIEND_GROUP_ID    CHAR(36) COMMENT '好友分组ID',
   COMPANY_ID         CHAR(36) COMMENT '企业ID',
   IS_DEL             CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
   U_TIME             TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='聊天室好友分组表';

-- ----------------------------
-- Table structure for CHAT_MESSAGE
-- ----------------------------
DROP TABLE IF EXISTS CHAT_MESSAGE;
CREATE TABLE CHAT_MESSAGE (
   MESSAGE_ID       CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
   MESSAGE_TEXT     TEXT COMMENT '消息类型',
   STATUS           CHAR(1) COMMENT '接收状态，0 未接收；1 接收',
   CREATED_DATE     DATETIME COMMENT '创建时间',
   MESSAGE_TYPE_ID  CHAR(36) COMMENT '消息类型ID',
   SOURCE_USER_ID   CHAR(36) COMMENT '发送者用户ID',
   TARGET_USER_ID   CHAR(36) COMMENT '接收者用户ID',
   COMPANY_ID       CHAR(36) COMMENT '企业ID',
   IS_DEL           CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
   U_TIME           TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='聊天消息表';

-- pur tables ---------------------------------------------------------------------------------------------------------

-- ----------------------------
-- Table structure for PUR_CCY
-- ----------------------------
DROP TABLE IF EXISTS PUR_CCY;
CREATE TABLE PUR_CCY (
  CCY_ID      CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  CCY_CODE    VARCHAR(100) COMMENT '币种代号',
  CCY_NAME    VARCHAR(100) COMMENT '币种名称',
  IS_MAIN     CHAR(1) COMMENT '是否主币种',
  CCY_RATE    DECIMAL(8,4) COMMENT '汇率',
  IS_USE      CHAR(1) COMMENT '是否启用，0 不启用；1 启用',
  REMARK      VARCHAR(2000) COMMENT '备注',
  COMPANY_ID  CHAR(36) COMMENT '企业ID',
  IS_DEL      CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME      TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=INNODB DEFAULT CHARSET=UTF8 COMMENT='货币信息表';

-- ----------------------------
-- Table structure for PUR_MATERIAL_INQUIRY
-- ----------------------------
DROP TABLE IF EXISTS PUR_MATERIAL_INQUIRY;
CREATE TABLE PUR_MATERIAL_INQUIRY (
  MATERIAL_INQUIRY_ID CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  MATERIAL_APPLY_ID   CHAR(36) COMMENT '申请单ID',
  SUPPLIER_ID         CHAR(36) COMMENT '供应商ID',
  INQUIRY_CODE        VARCHAR(100) COMMENT '询价单号',
  INQUIRY_MAN         VARCHAR(100) COMMENT '询价人',
  RECEIVE_DATE        VARCHAR(100) COMMENT '交货期',
  RECEIVE_ADDR        VARCHAR(100) COMMENT '交货地',
  CREATOR             CHAR(36) COMMENT '生成人ID',
  CREATE_TIME         DATETIME COMMENT '生成时间',
  OPEN_TIME           DATETIME COMMENT '开标时间',
  END_TIME            DATETIME COMMENT '报价截止时间',
  CCY_ID              CHAR(36) COMMENT '币种ID',
  TOTAL_AMOUNT        DECIMAL(10,2) COMMENT '总价',
  STATUS              CHAR(1) COMMENT '状态',
  REMARK              VARCHAR(1000) COMMENT '备注',
  SHIP_ID             CHAR(36) COMMENT '船舶ID',
  COMPANY_ID          CHAR(36) COMMENT '企业ID',
  IS_DEL              CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME              TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=INNODB DEFAULT CHARSET=UTF8 COMMENT='物料询价单表';

-- ----------------------------
-- TABLE STRUCTURE FOR PUR_MATERIAL_INQUIRY_DETAIL
-- ----------------------------
DROP TABLE IF EXISTS PUR_MATERIAL_INQUIRY_DETAIL;
CREATE TABLE PUR_MATERIAL_INQUIRY_DETAIL (
  MATERIAL_INQUIRY_DETAIL_ID  CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  MATERIAL_INQUIRY_ID         CHAR(36) COMMENT '询价单ID',
  MATERIAL_APPLY_DETAIL_ID    CHAR(36) COMMENT '申请单明细ID',
  MATERIAL_ID                 CHAR(36) COMMENT '物料ID',
  ORDER_NUM                   DECIMAL(10,2) COMMENT '订购数量',
  UNIT_NAME                   VARCHAR(50) COMMENT '计量单位',
  PRICE                       DECIMAL(10,2) COMMENT '单价',
  CCY_ID                      CHAR(36) COMMENT '币种',
  CREATE_TIME                 DATETIME COMMENT '生成时间',
  UPDATE_TIME                 DATETIME COMMENT '更新时间',
  REMARK                      VARCHAR(1000) COMMENT '备注',
  SHIP_ID                     CHAR(36) COMMENT '船舶ID',
  COMPANY_ID                  CHAR(36) COMMENT '企业ID',
  IS_DEL                      CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME                      TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=INNODB DEFAULT CHARSET=UTF8 COMMENT='物料询价单明细表';

-- ----------------------------
-- TABLE STRUCTURE FOR PUR_MATERIAL_ORDER
-- ----------------------------
DROP TABLE IF EXISTS PUR_MATERIAL_ORDER;
CREATE TABLE PUR_MATERIAL_ORDER (
  MATERIAL_ORDER_ID   CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  MATERIAL_APPLY_ID   CHAR(36) COMMENT '申请单ID',
  MATERIAL_INQUIRY_ID CHAR(36) COMMENT '询价单ID',
  SUPPLIER_ID         CHAR(36) COMMENT '供应商ID',
  SHIP_ID             CHAR(36) COMMENT '船舶ID',
  ORDER_CODE          VARCHAR(100) COMMENT '订单号',
  QUOTE_CODE          VARCHAR(100) COMMENT '报价单号',
  ORDER_DATE          DATETIME COMMENT '订购日期',
  ORDER_MAN           VARCHAR(20) COMMENT '订购人',
  RECEIVE_DATE        VARCHAR(100) COMMENT '交货期',
  RECEIVE_ADDR        VARCHAR(100) COMMENT '交货地',
  STATUS              CHAR(1) DEFAULT '0' COMMENT '状态，0 新建；1 采购中；2 供应商确认订单；3 供应商已发货；8 已作废；9 已完成',
  REMARK              VARCHAR(1000) COMMENT '备注',
  CREATOR             CHAR(36) COMMENT '生成人',
  CREATETIME          DATETIME COMMENT '生成时间',
  UPDATETIME          DATETIME COMMENT '更新时间',
  TOTAL_AMOUNT        DECIMAL(10,2) COMMENT '总价',
  CCY_ID              CHAR(36) COMMENT '币种',
  ORDER_TYPE          CHAR(1) COMMENT '订单类型',
  EXRATE              DECIMAL(10,2) COMMENT '汇率',
  INVOICE             VARCHAR(20) COMMENT '发票号码',
  CANCEL_REASON       VARCHAR(1000) COMMENT '作废原因',
  COMPANY_ID          CHAR(36) COMMENT '企业ID',
  IS_DEL              CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME              TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=INNODB DEFAULT CHARSET=UTF8 COMMENT='物料订单表';

-- ----------------------------
-- TABLE STRUCTURE FOR PUR_MATERIAL_ORDER_DETAIL
-- ----------------------------
DROP TABLE IF EXISTS PUR_MATERIAL_ORDER_DETAIL;
CREATE TABLE PUR_MATERIAL_ORDER_DETAIL (
  MATERIAL_ORDER_DETAIL_ID  CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  MATERIAL_APPLY_DETAIL_ID  CHAR(36) COMMENT '申请单明细ID',
  MATERIAL_ORDER_ID         CHAR(36) COMMENT '订单ID',
  MATERIAL_ID               CHAR(36) COMMENT '物料ID',
  ORDER_NUM                 DECIMAL(10,2) COMMENT '订购数量',
  UNIT_NAME                 VARCHAR(50) COMMENT '计量单位',
  PRICE                     DECIMAL(10,2) COMMENT '单价',
  CCY_ID                    CHAR(36) COMMENT '币种',
  CNY_PRICE                 DECIMAL(10,2) COMMENT '人民币单价',
  SHIP_ID                   CHAR(36) COMMENT '船舶ID',
  REMARK                    VARCHAR(1000) COMMENT '备注',
  CREATE_TIME               DATETIME COMMENT '生成时间',
  UPDATE_TIME               DATETIME COMMENT '更新时间',
  COMPANY_ID                CHAR(36) COMMENT '企业ID',
  IS_DEL                    CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME                    TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=INNODB DEFAULT CHARSET=UTF8 COMMENT='物料订单明细表';

-- ----------------------------
-- TABLE STRUCTURE FOR PUR_SPARE_INQUIRY
-- ----------------------------
DROP TABLE IF EXISTS PUR_SPARE_INQUIRY;
CREATE TABLE PUR_SPARE_INQUIRY (
  SPARE_INQUIRY_ID  CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  SPARE_APPLY_ID    CHAR(36) COMMENT '申请单ID',
  COMPONENT_ID      CHAR(36) COMMENT '设备ID',
  SUPPLIER_ID       CHAR(36) COMMENT '供应商ID',
  INQUIRY_CODE      VARCHAR(100) COMMENT '询价单号',
  INQUIRY_MAN       VARCHAR(100) COMMENT '询价人',
  RECEIVE_DATE      VARCHAR(100) COMMENT '交货期',
  RECEIVE_ADDR      VARCHAR(100) COMMENT '交货地',
  CREATOR           CHAR(36) COMMENT '生成人',
  CREATE_TIME       DATETIME COMMENT '生成时间',
  OPEN_TIME         DATETIME COMMENT '开标时间',
  END_TIME          DATETIME COMMENT '报价截止时间',
  CCY_ID            CHAR(36) COMMENT '币种',
  TOTAL_AMOUNT      DECIMAL(10,2) COMMENT '总价',
  STATUS            CHAR(1) COMMENT '状态',
  REMARK            VARCHAR(1000) COMMENT '备注',
  SHIP_ID           CHAR(36) COMMENT '船舶ID',
  COMPANY_ID        CHAR(36) COMMENT '企业ID',
  IS_DEL            CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME            TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=INNODB DEFAULT CHARSET=UTF8 COMMENT='备件询价单表';

-- ----------------------------
-- TABLE STRUCTURE FOR PUR_SPARE_INQUIRY_DETAIL
-- ----------------------------
DROP TABLE IF EXISTS PUR_SPARE_INQUIRY_DETAIL;
CREATE TABLE PUR_SPARE_INQUIRY_DETAIL (
  SPARE_INQUIRY_DETAIL_ID CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  SPARE_INQUIRY_ID        CHAR(36) COMMENT '询价单ID',
  SPARE_APPLY_DETAIL_ID   CHAR(36) COMMENT '申请单明细ID',
  COMPONENT_ID            CHAR(36) COMMENT '设备ID',
  SPARE_ID                CHAR(36) COMMENT '备件ID',
  ORDER_NUM               DECIMAL(10,2) COMMENT '订购数量',
  UNIT_NAME               VARCHAR(50) COMMENT '计量单位',
  PRICE                   DECIMAL(10,2) COMMENT '单价',
  CCY_ID                  CHAR(36) COMMENT '币种',
  CREATE_TIME             DATETIME COMMENT '生成时间',
  UPDATE_TIME             DATETIME COMMENT '更新时间',
  REMARK                  VARCHAR(1000) COMMENT '备注',
  SHIP_ID                 CHAR(36) COMMENT '船舶ID',
  COMPANY_ID              CHAR(36) COMMENT '企业ID',
  IS_DEL                  CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME                  TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=INNODB DEFAULT CHARSET=UTF8 COMMENT='备件询价单明细表';

-- ----------------------------
-- TABLE STRUCTURE FOR PUR_SPARE_ORDER
-- ----------------------------
DROP TABLE IF EXISTS PUR_SPARE_ORDER;
CREATE TABLE PUR_SPARE_ORDER (
  SPARE_ORDER_ID    CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  SPARE_APPLY_ID    CHAR(36) COMMENT '申请单ID',
  SPARE_INQUIRY_ID  CHAR(36) COMMENT '询价单ID',
  SUPPLIER_ID       CHAR(36) COMMENT '供应商ID',
  SHIP_ID           CHAR(36) COMMENT '船舶ID',
  ORDER_CODE        VARCHAR(100) COMMENT '订单号',
  QUOTE_CODE        VARCHAR(100) COMMENT '报价单号',
  ORDER_DATE        DATETIME COMMENT '订购日期',
  ORDER_MAN         VARCHAR(20) COMMENT '订购人',
  RECEIVE_DATE      VARCHAR(100) COMMENT '交货期',
  RECEIVE_ADDR      VARCHAR(100) COMMENT '交货地',
  STATUS            CHAR(1) DEFAULT '0' COMMENT '状态，0 新建；1 采购中；2 供应商确认订单；3 供应商已发货；8 已作废；9 已完成',
  REMARK            VARCHAR(1000) COMMENT '备注',
  CREATOR           CHAR(36) COMMENT '生成人',
  CREATETIME        DATETIME COMMENT '生成时间',
  UPDATETIME        DATETIME COMMENT '更新时间',
  TOTAL_AMOUNT      DECIMAL(10,2) COMMENT '总价',
  CCY_ID            CHAR(36) COMMENT '币种',
  ORDER_TYPE        CHAR(1) COMMENT '订单类型',
  EXRATE            DECIMAL(10,2) COMMENT '汇率',
  INVOICE           VARCHAR(20) COMMENT '发票号码',
  COMPONENT_ID      CHAR(36) COMMENT '设备ID',
  CANCEL_REASON     VARCHAR(1000) COMMENT '作废原因',
  COMPANY_ID        CHAR(36) COMMENT '企业ID',
  IS_DEL            CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME            TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=INNODB DEFAULT CHARSET=UTF8 COMMENT='备件订单表';

-- ----------------------------
-- TABLE STRUCTURE FOR PUR_SPARE_ORDER_DETAIL
-- ----------------------------
DROP TABLE IF EXISTS PUR_SPARE_ORDER_DETAIL;
CREATE TABLE PUR_SPARE_ORDER_DETAIL (
  SPARE_ORDER_DETAIL_ID CHAR(36) NOT NULL PRIMARY KEY COMMENT '主键',
  SPARE_APPLY_DETAIL_ID CHAR(36) COMMENT '申请单明细ID',
  SPARE_ORDER_ID        CHAR(36) COMMENT '订单ID',
  COMPONENT_ID          CHAR(36) COMMENT '设备ID',
  SPARE_ID              CHAR(36) COMMENT '备件ID',
  ORDER_NUM             DECIMAL(10,2) COMMENT '订购数量',
  UNIT_NAME             VARCHAR(50) COMMENT '计量单位',
  PRICE                 DECIMAL(10,2) COMMENT '单价',
  CCY_ID                CHAR(36) COMMENT '币种ID',
  CNY_PRICE             DECIMAL(10,2) COMMENT '人民币单价',
  SHIP_ID               CHAR(36) COMMENT '船舶ID',
  REMARK                VARCHAR(1000) COMMENT '备注',
  CREATE_TIME           DATETIME COMMENT '生成时间',
  UPDATE_TIME           DATETIME COMMENT '更新时间',
  COMPANY_ID            CHAR(36) COMMENT '企业ID',
  IS_DEL                CHAR(1) NOT NULL COMMENT '是否删除，0 否；1 是',
  U_TIME                TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '操作时间'
) ENGINE=INNODB DEFAULT CHARSET=UTF8 COMMENT='备件订单明细表';
