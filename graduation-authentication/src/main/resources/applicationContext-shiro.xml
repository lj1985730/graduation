<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
         http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd"
       default-lazy-init="true">

   <!-- shiro configuration -->
   <bean id="hashAlgorithmName" class="java.lang.String">
      <constructor-arg value="MD5" />
   </bean>

   <bean id="hashIterations" class="java.lang.Integer">
      <constructor-arg value="2" />
   </bean>

   <bean id="salt" class="java.lang.String">
      <constructor-arg value="graduation" />
   </bean>

   <!-- 会话ID生成器 -->
<!--   <bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator" />-->

   <!-- 数据库保存的密码是使用MD5算法加密的，所以这里需要配置一个密码匹配对象 -->
   <bean id="credentialsMatcher" class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
      <property name="hashAlgorithmName" ref="hashAlgorithmName" />
      <property name="hashIterations" ref="hashIterations" />
      <property name="storedCredentialsHexEncoded" value="true" />
   </bean>

   <!-- 会话DAO -->
<!--   <bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">
      <property name="activeSessionsCacheName" value="shiro-activeSessionCache" />
      <property name="sessionIdGenerator" ref="sessionIdGenerator"/>
   </bean>-->

   <!-- 会话验证调度器 -->
<!--   <bean id="sessionValidationScheduler" class="org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler">
      <property name="sessionValidationInterval" value="1800000"/>
      <property name="sessionManager" ref="sessionManager" />
   </bean>-->

   <!-- 会话Cookie模板 -->
<!--   <bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
      <constructor-arg value="sid" />
      <property name="httpOnly" value="true" />
      <property name="maxAge" value="180000" />
   </bean>-->

   <!-- 会话管理器 --><!--
   <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
      <property name="globalSessionTimeout" value="1800000"/>
      <property name="deleteInvalidSessions" value="true" />
      <property name="sessionValidationSchedulerEnabled" value="true" />
      <property name="sessionValidationScheduler" ref="sessionValidationScheduler" />
      <property name="sessionDAO" ref="sessionDAO" />
      <property name="sessionIdCookieEnabled" value="true" />
      <property name="sessionIdCookie" ref="sessionIdCookie" />
   </bean>-->

   <bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
      <property name="cacheManagerConfigFile" value="classpath:ehcache-shiro.xml" />
   </bean>

   <!-- 账户验证器 -->
   <bean id="authenticationRealm" class="com.graduation.authentication.util.AuthenticationRealm">
      <!--<property name="credentialsMatcher" ref="credentialsMatcher" />-->
   </bean>

   <!-- Shiro SecurityManager -->
   <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
      <property name="cacheManager" ref="cacheManager" />
      <property name="realm" ref="authenticationRealm" />
   </bean>

   <!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->
   <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
      <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>
      <property name="arguments" ref="securityManager" />
   </bean>

   <!-- Shiro的Web过滤器 -->
   <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
      <property name="securityManager" ref="securityManager" />
      <property name="loginUrl" value="/login.jsp" />
      <property name="unauthorizedUrl" value="/unauthorized.jsp" />
      <property name="filterChainDefinitions">
         <value>
            / = anon
            /loginView = anon
            /login = anon
            /top = anon
            /bottom = anon
            /plugins/** = anon
            /scripts/** = anon
            /css/** = anon
            /img/** = anon
            /index.jsp = anon
            /unauthorized.jsp = anon
            <!-- 请求 logout地址，shiro去清除session -->
            /logout = logout
            /** = user
         </value>
      </property>
   </bean>

   <!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
   <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

   <!-- 请求响应拦截器 -->
   <!--<mvc:interceptors>
      &lt;!&ndash; 拦截器执行控制器拦截，用于cookie身份和权限验证 &ndash;&gt;
      <mvc:interceptor>
         <mvc:mapping path="/**" />
         <mvc:exclude-mapping path="/"/>
         <mvc:exclude-mapping path="/login"/>
         <mvc:exclude-mapping path="/logout"/>
         <mvc:exclude-mapping path="/error"/>
         <mvc:exclude-mapping path="/top"/>
         <mvc:exclude-mapping path="/bottom"/>
         <mvc:exclude-mapping path="/templates/**"/>
         <mvc:exclude-mapping path="/plugins/**"/>
         <mvc:exclude-mapping path="/scripts/**"/>
         <mvc:exclude-mapping path="/css/**"/>
         <mvc:exclude-mapping path="/images/**"/>

         <bean class="com.graduation.authentication.util.AuthenticationInterceptor" />
      </mvc:interceptor>
   </mvc:interceptors>-->

</beans>